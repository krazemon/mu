9991 parse: --- defining scenario_making-a-move
9993 parse: instruction: assume-screen
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {30: "literal", "width": ()}
9993 parse:   ingredient: {12: "literal", "height": ()}
9992 load: after rewriting: {screen: ("address" "screen")} <- new-fake-screen {30: "literal", "width": ()}, {12: "literal", "height": ()}
9993 parse: instruction: run
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    2:address:array:address:array:character/board <- initial-position\n    3:address:move <- new move:type\n    *3:address:move <- merge 6/g, 1/'2', 6/g, 3/'4'\n    2:address:array:address:array:character/board <- make-move 2:address:array:address:array:character/board, 3:address:move\n    screen:address:screen <- print-board screen:address:screen, 2:address:array:address:array:character/board\n  ": "literal-string"}
9992 load: after rewriting: run {"\n    2:address:array:address:array:character/board <- initial-position\n    3:address:move <- new move:type\n    *3:address:move <- merge 6/g, 1/'2', 6/g, 3/'4'\n    2:address:array:address:array:character/board <- make-move 2:address:array:address:array:character/board, 3:address:move\n    screen:address:screen <- print-board screen:address:screen, 2:address:array:address:array:character/board\n  ": "literal-string"}
9993 parse: instruction: screen-should-contain
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n  #  012345678901234567890123456789\n    .8 | r n b q k b n r           .\n    .7 | p p p p p p p p           .\n    .6 |                           .\n    .5 |                           .\n    .4 |             P             .\n    .3 |                           .\n    .2 | P P P P P P   P           .\n    .1 | R N B Q K B N R           .\n    .  +----------------           .\n    .    a b c d e f g h           .\n    .                              .\n  ": "literal-string"}
9992 load: after rewriting: screen-should-contain {"\n  #  012345678901234567890123456789\n    .8 | r n b q k b n r           .\n    .7 | p p p p p p p p           .\n    .6 |                           .\n    .5 |                           .\n    .4 |             P             .\n    .3 |                           .\n    .2 | P P P P P P   P           .\n    .1 | R N B Q K B N R           .\n    .  +----------------           .\n    .    a b c d e f g h           .\n    .                              .\n  ": "literal-string"}
9999 parse: recipe scenario_making-a-move has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe scenario_making-a-move
9991 transform: --- rewrite 'stash' instructions in recipe scenario_making-a-move
9991 transform: --- deduce types for recipe scenario_making-a-move
9992 transform: screen => ("address" "screen")
9993 transform: {screen: ("address" "screen")} <- new-fake-screen {30: "literal", "width": ()}, {12: "literal", "height": ()}
9993 transform: run {"\n    2:address:array:address:array:character/board <- initial-position\n    3:address:move <- new move:type\n    *3:address:move <- merge 6/g, 1/'2', 6/g, 3/'4'\n    2:address:array:address:array:character/board <- make-move 2:address:array:address:array:character/board, 3:address:move\n    screen:address:screen <- print-board screen:address:screen, 2:address:array:address:array:character/board\n  ": "literal-string"}
9993 transform: screen-should-contain {"\n  #  012345678901234567890123456789\n    .8 | r n b q k b n r           .\n    .7 | p p p p p p p p           .\n    .6 |                           .\n    .5 |                           .\n    .4 |             P             .\n    .3 |                           .\n    .2 | P P P P P P   P           .\n    .1 | R N B Q K B N R           .\n    .  +----------------           .\n    .    a b c d e f g h           .\n    .                              .\n  ": "literal-string"}
9991 transform: --- fill in reply ingredients from header for recipe scenario_making-a-move
9991 transform: --- deduce types for recipe scenario_making-a-move
9992 transform: screen => ("address" "screen")
9991 transform: --- check for invalid types in recipe scenario_making-a-move
9991 transform: --- collect surrounding spaces for recipe scenario_making-a-move
9991 transform: --- transform names for recipe scenario_making-a-move
9991 transform: --- resolve ambiguous calls for recipe scenario_making-a-move
9992 transform: instruction {screen: ("address" "screen")} <- new-fake-screen {30: "literal", "width": ()}, {12: "literal", "height": ()}
9992 transform: checking variant (strict) 0: recipe new-fake-screen {w: "number"} {h: "number"} -> {result: ("address" "screen")}
9991 transform: --- compute instruction operations for recipe scenario_making-a-move
9991 transform: --- transform braces for recipe scenario_making-a-move
9992 transform: assume-screen ...
9992 transform: run ...
9992 transform: screen-should-contain ...
9992 transform:  ...
9991 transform: --- perform checks for recipe scenario_making-a-move
9991 transform: --- type-check 'call' instructions inside recipe scenario_making-a-move
9991 transform: --- type-check calls inside recipe scenario_making-a-move
9991 transform: --- convert 'new' to 'allocate' for recipe scenario_making-a-move
9991 transform: --- check types of reply instructions in recipe scenario_making-a-move
9991 transform: --- type-check merge instructions in recipe scenario_making-a-move
9991 transform: --- checking reply instructions against header for scenario_making-a-move
9991 transform: --- parsing any uninitialized reagents as integers
9999 trace: new routine; incrementing callstack depth to 1
9999 new: routine allocated memory from 1000 to 101000
9990 schedule: scenario_making-a-move
 102 run: {screen: ("address" "screen")} <- new-fake-screen {30: "literal", "width": ()}, {12: "literal", "height": ()}
9999 trace: incrementing callstack depth to 2
 103 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 mem: new alloc: 1000
9999 mem: storing 0 in location 1000
9999 mem: storing 0 in location 1001
9999 mem: storing 0 in location 1002
9999 mem: storing 0 in location 1003
9999 mem: storing 0 in location 1004
9999 mem: storing 0 in location 1005
9999 mem: storing 0 in location 1006
9999 mem: storing 0 in location 1007
9999 mem: storing 6 in location 1001
 103 run: {w: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 30 in location 1003
 103 run: {h: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 12 in location 1004
 103 run: {result: ("address" "screen")} <- new {screen: "type"}
9999 mem: allocating size 6
9999 mem: new alloc: 1008
9999 mem: storing 0 in location 1008
9999 mem: storing 0 in location 1009
9999 mem: storing 0 in location 1010
9999 mem: storing 0 in location 1011
9999 mem: storing 0 in location 1012
9999 mem: storing 0 in location 1013
9999 mem: incrementing refcount of 1008: 0 -> 1
9999 mem: storing 1008 in location 1005
 103 run: {bufsize: "number"} <- multiply {w: "number"}, {h: "number"}
9999 mem: location 1003 is 30
9999 mem: location 1004 is 12
9999 mem: storing 360 in location 1006
 103 run: {data: ("address" "array" "screen-cell")} <- new {screen-cell: "type"}, {bufsize: "number"}
9999 mem: location 1006 is 360
9999 mem: array size is 360
9999 mem: allocating size 722
9999 mem: new alloc: 1014
9999 mem: storing 0 in location 1014
9999 mem: storing 0 in location 1015
9999 mem: storing 0 in location 1016
9999 mem: storing 0 in location 1017
9999 mem: storing 0 in location 1018
9999 mem: storing 0 in location 1019
9999 mem: storing 0 in location 1020
9999 mem: storing 0 in location 1021
9999 mem: storing 0 in location 1022
9999 mem: storing 0 in location 1023
9999 mem: storing 0 in location 1024
9999 mem: storing 0 in location 1025
9999 mem: storing 0 in location 1026
9999 mem: storing 0 in location 1027
9999 mem: storing 0 in location 1028
9999 mem: storing 0 in location 1029
9999 mem: storing 0 in location 1030
9999 mem: storing 0 in location 1031
9999 mem: storing 0 in location 1032
9999 mem: storing 0 in location 1033
9999 mem: storing 0 in location 1034
9999 mem: storing 0 in location 1035
9999 mem: storing 0 in location 1036
9999 mem: storing 0 in location 1037
9999 mem: storing 0 in location 1038
9999 mem: storing 0 in location 1039
9999 mem: storing 0 in location 1040
9999 mem: storing 0 in location 1041
9999 mem: storing 0 in location 1042
9999 mem: storing 0 in location 1043
9999 mem: storing 0 in location 1044
9999 mem: storing 0 in location 1045
9999 mem: storing 0 in location 1046
9999 mem: storing 0 in location 1047
9999 mem: storing 0 in location 1048
9999 mem: storing 0 in location 1049
9999 mem: storing 0 in location 1050
9999 mem: storing 0 in location 1051
9999 mem: storing 0 in location 1052
9999 mem: storing 0 in location 1053
9999 mem: storing 0 in location 1054
9999 mem: storing 0 in location 1055
9999 mem: storing 0 in location 1056
9999 mem: storing 0 in location 1057
9999 mem: storing 0 in location 1058
9999 mem: storing 0 in location 1059
9999 mem: storing 0 in location 1060
9999 mem: storing 0 in location 1061
9999 mem: storing 0 in location 1062
9999 mem: storing 0 in location 1063
9999 mem: storing 0 in location 1064
9999 mem: storing 0 in location 1065
9999 mem: storing 0 in location 1066
9999 mem: storing 0 in location 1067
9999 mem: storing 0 in location 1068
9999 mem: storing 0 in location 1069
9999 mem: storing 0 in location 1070
9999 mem: storing 0 in location 1071
9999 mem: storing 0 in location 1072
9999 mem: storing 0 in location 1073
9999 mem: storing 0 in location 1074
9999 mem: storing 0 in location 1075
9999 mem: storing 0 in location 1076
9999 mem: storing 0 in location 1077
9999 mem: storing 0 in location 1078
9999 mem: storing 0 in location 1079
9999 mem: storing 0 in location 1080
9999 mem: storing 0 in location 1081
9999 mem: storing 0 in location 1082
9999 mem: storing 0 in location 1083
9999 mem: storing 0 in location 1084
9999 mem: storing 0 in location 1085
9999 mem: storing 0 in location 1086
9999 mem: storing 0 in location 1087
9999 mem: storing 0 in location 1088
9999 mem: storing 0 in location 1089
9999 mem: storing 0 in location 1090
9999 mem: storing 0 in location 1091
9999 mem: storing 0 in location 1092
9999 mem: storing 0 in location 1093
9999 mem: storing 0 in location 1094
9999 mem: storing 0 in location 1095
9999 mem: storing 0 in location 1096
9999 mem: storing 0 in location 1097
9999 mem: storing 0 in location 1098
9999 mem: storing 0 in location 1099
9999 mem: storing 0 in location 1100
9999 mem: storing 0 in location 1101
9999 mem: storing 0 in location 1102
9999 mem: storing 0 in location 1103
9999 mem: storing 0 in location 1104
9999 mem: storing 0 in location 1105
9999 mem: storing 0 in location 1106
9999 mem: storing 0 in location 1107
9999 mem: storing 0 in location 1108
9999 mem: storing 0 in location 1109
9999 mem: storing 0 in location 1110
9999 mem: storing 0 in location 1111
9999 mem: storing 0 in location 1112
9999 mem: storing 0 in location 1113
9999 mem: storing 0 in location 1114
9999 mem: storing 0 in location 1115
9999 mem: storing 0 in location 1116
9999 mem: storing 0 in location 1117
9999 mem: storing 0 in location 1118
9999 mem: storing 0 in location 1119
9999 mem: storing 0 in location 1120
9999 mem: storing 0 in location 1121
9999 mem: storing 0 in location 1122
9999 mem: storing 0 in location 1123
9999 mem: storing 0 in location 1124
9999 mem: storing 0 in location 1125
9999 mem: storing 0 in location 1126
9999 mem: storing 0 in location 1127
9999 mem: storing 0 in location 1128
9999 mem: storing 0 in location 1129
9999 mem: storing 0 in location 1130
9999 mem: storing 0 in location 1131
9999 mem: storing 0 in location 1132
9999 mem: storing 0 in location 1133
9999 mem: storing 0 in location 1134
9999 mem: storing 0 in location 1135
9999 mem: storing 0 in location 1136
9999 mem: storing 0 in location 1137
9999 mem: storing 0 in location 1138
9999 mem: storing 0 in location 1139
9999 mem: storing 0 in location 1140
9999 mem: storing 0 in location 1141
9999 mem: storing 0 in location 1142
9999 mem: storing 0 in location 1143
9999 mem: storing 0 in location 1144
9999 mem: storing 0 in location 1145
9999 mem: storing 0 in location 1146
9999 mem: storing 0 in location 1147
9999 mem: storing 0 in location 1148
9999 mem: storing 0 in location 1149
9999 mem: storing 0 in location 1150
9999 mem: storing 0 in location 1151
9999 mem: storing 0 in location 1152
9999 mem: storing 0 in location 1153
9999 mem: storing 0 in location 1154
9999 mem: storing 0 in location 1155
9999 mem: storing 0 in location 1156
9999 mem: storing 0 in location 1157
9999 mem: storing 0 in location 1158
9999 mem: storing 0 in location 1159
9999 mem: storing 0 in location 1160
9999 mem: storing 0 in location 1161
9999 mem: storing 0 in location 1162
9999 mem: storing 0 in location 1163
9999 mem: storing 0 in location 1164
9999 mem: storing 0 in location 1165
9999 mem: storing 0 in location 1166
9999 mem: storing 0 in location 1167
9999 mem: storing 0 in location 1168
9999 mem: storing 0 in location 1169
9999 mem: storing 0 in location 1170
9999 mem: storing 0 in location 1171
9999 mem: storing 0 in location 1172
9999 mem: storing 0 in location 1173
9999 mem: storing 0 in location 1174
9999 mem: storing 0 in location 1175
9999 mem: storing 0 in location 1176
9999 mem: storing 0 in location 1177
9999 mem: storing 0 in location 1178
9999 mem: storing 0 in location 1179
9999 mem: storing 0 in location 1180
9999 mem: storing 0 in location 1181
9999 mem: storing 0 in location 1182
9999 mem: storing 0 in location 1183
9999 mem: storing 0 in location 1184
9999 mem: storing 0 in location 1185
9999 mem: storing 0 in location 1186
9999 mem: storing 0 in location 1187
9999 mem: storing 0 in location 1188
9999 mem: storing 0 in location 1189
9999 mem: storing 0 in location 1190
9999 mem: storing 0 in location 1191
9999 mem: storing 0 in location 1192
9999 mem: storing 0 in location 1193
9999 mem: storing 0 in location 1194
9999 mem: storing 0 in location 1195
9999 mem: storing 0 in location 1196
9999 mem: storing 0 in location 1197
9999 mem: storing 0 in location 1198
9999 mem: storing 0 in location 1199
9999 mem: storing 0 in location 1200
9999 mem: storing 0 in location 1201
9999 mem: storing 0 in location 1202
9999 mem: storing 0 in location 1203
9999 mem: storing 0 in location 1204
9999 mem: storing 0 in location 1205
9999 mem: storing 0 in location 1206
9999 mem: storing 0 in location 1207
9999 mem: storing 0 in location 1208
9999 mem: storing 0 in location 1209
9999 mem: storing 0 in location 1210
9999 mem: storing 0 in location 1211
9999 mem: storing 0 in location 1212
9999 mem: storing 0 in location 1213
9999 mem: storing 0 in location 1214
9999 mem: storing 0 in location 1215
9999 mem: storing 0 in location 1216
9999 mem: storing 0 in location 1217
9999 mem: storing 0 in location 1218
9999 mem: storing 0 in location 1219
9999 mem: storing 0 in location 1220
9999 mem: storing 0 in location 1221
9999 mem: storing 0 in location 1222
9999 mem: storing 0 in location 1223
9999 mem: storing 0 in location 1224
9999 mem: storing 0 in location 1225
9999 mem: storing 0 in location 1226
9999 mem: storing 0 in location 1227
9999 mem: storing 0 in location 1228
9999 mem: storing 0 in location 1229
9999 mem: storing 0 in location 1230
9999 mem: storing 0 in location 1231
9999 mem: storing 0 in location 1232
9999 mem: storing 0 in location 1233
9999 mem: storing 0 in location 1234
9999 mem: storing 0 in location 1235
9999 mem: storing 0 in location 1236
9999 mem: storing 0 in location 1237
9999 mem: storing 0 in location 1238
9999 mem: storing 0 in location 1239
9999 mem: storing 0 in location 1240
9999 mem: storing 0 in location 1241
9999 mem: storing 0 in location 1242
9999 mem: storing 0 in location 1243
9999 mem: storing 0 in location 1244
9999 mem: storing 0 in location 1245
9999 mem: storing 0 in location 1246
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
9999 mem: storing 0 in location 1251
9999 mem: storing 0 in location 1252
9999 mem: storing 0 in location 1253
9999 mem: storing 0 in location 1254
9999 mem: storing 0 in location 1255
9999 mem: storing 0 in location 1256
9999 mem: storing 0 in location 1257
9999 mem: storing 0 in location 1258
9999 mem: storing 0 in location 1259
9999 mem: storing 0 in location 1260
9999 mem: storing 0 in location 1261
9999 mem: storing 0 in location 1262
9999 mem: storing 0 in location 1263
9999 mem: storing 0 in location 1264
9999 mem: storing 0 in location 1265
9999 mem: storing 0 in location 1266
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
9999 mem: storing 0 in location 1271
9999 mem: storing 0 in location 1272
9999 mem: storing 0 in location 1273
9999 mem: storing 0 in location 1274
9999 mem: storing 0 in location 1275
9999 mem: storing 0 in location 1276
9999 mem: storing 0 in location 1277
9999 mem: storing 0 in location 1278
9999 mem: storing 0 in location 1279
9999 mem: storing 0 in location 1280
9999 mem: storing 0 in location 1281
9999 mem: storing 0 in location 1282
9999 mem: storing 0 in location 1283
9999 mem: storing 0 in location 1284
9999 mem: storing 0 in location 1285
9999 mem: storing 0 in location 1286
9999 mem: storing 0 in location 1287
9999 mem: storing 0 in location 1288
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: storing 0 in location 1291
9999 mem: storing 0 in location 1292
9999 mem: storing 0 in location 1293
9999 mem: storing 0 in location 1294
9999 mem: storing 0 in location 1295
9999 mem: storing 0 in location 1296
9999 mem: storing 0 in location 1297
9999 mem: storing 0 in location 1298
9999 mem: storing 0 in location 1299
9999 mem: storing 0 in location 1300
9999 mem: storing 0 in location 1301
9999 mem: storing 0 in location 1302
9999 mem: storing 0 in location 1303
9999 mem: storing 0 in location 1304
9999 mem: storing 0 in location 1305
9999 mem: storing 0 in location 1306
9999 mem: storing 0 in location 1307
9999 mem: storing 0 in location 1308
9999 mem: storing 0 in location 1309
9999 mem: storing 0 in location 1310
9999 mem: storing 0 in location 1311
9999 mem: storing 0 in location 1312
9999 mem: storing 0 in location 1313
9999 mem: storing 0 in location 1314
9999 mem: storing 0 in location 1315
9999 mem: storing 0 in location 1316
9999 mem: storing 0 in location 1317
9999 mem: storing 0 in location 1318
9999 mem: storing 0 in location 1319
9999 mem: storing 0 in location 1320
9999 mem: storing 0 in location 1321
9999 mem: storing 0 in location 1322
9999 mem: storing 0 in location 1323
9999 mem: storing 0 in location 1324
9999 mem: storing 0 in location 1325
9999 mem: storing 0 in location 1326
9999 mem: storing 0 in location 1327
9999 mem: storing 0 in location 1328
9999 mem: storing 0 in location 1329
9999 mem: storing 0 in location 1330
9999 mem: storing 0 in location 1331
9999 mem: storing 0 in location 1332
9999 mem: storing 0 in location 1333
9999 mem: storing 0 in location 1334
9999 mem: storing 0 in location 1335
9999 mem: storing 0 in location 1336
9999 mem: storing 0 in location 1337
9999 mem: storing 0 in location 1338
9999 mem: storing 0 in location 1339
9999 mem: storing 0 in location 1340
9999 mem: storing 0 in location 1341
9999 mem: storing 0 in location 1342
9999 mem: storing 0 in location 1343
9999 mem: storing 0 in location 1344
9999 mem: storing 0 in location 1345
9999 mem: storing 0 in location 1346
9999 mem: storing 0 in location 1347
9999 mem: storing 0 in location 1348
9999 mem: storing 0 in location 1349
9999 mem: storing 0 in location 1350
9999 mem: storing 0 in location 1351
9999 mem: storing 0 in location 1352
9999 mem: storing 0 in location 1353
9999 mem: storing 0 in location 1354
9999 mem: storing 0 in location 1355
9999 mem: storing 0 in location 1356
9999 mem: storing 0 in location 1357
9999 mem: storing 0 in location 1358
9999 mem: storing 0 in location 1359
9999 mem: storing 0 in location 1360
9999 mem: storing 0 in location 1361
9999 mem: storing 0 in location 1362
9999 mem: storing 0 in location 1363
9999 mem: storing 0 in location 1364
9999 mem: storing 0 in location 1365
9999 mem: storing 0 in location 1366
9999 mem: storing 0 in location 1367
9999 mem: storing 0 in location 1368
9999 mem: storing 0 in location 1369
9999 mem: storing 0 in location 1370
9999 mem: storing 0 in location 1371
9999 mem: storing 0 in location 1372
9999 mem: storing 0 in location 1373
9999 mem: storing 0 in location 1374
9999 mem: storing 0 in location 1375
9999 mem: storing 0 in location 1376
9999 mem: storing 0 in location 1377
9999 mem: storing 0 in location 1378
9999 mem: storing 0 in location 1379
9999 mem: storing 0 in location 1380
9999 mem: storing 0 in location 1381
9999 mem: storing 0 in location 1382
9999 mem: storing 0 in location 1383
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: storing 0 in location 1391
9999 mem: storing 0 in location 1392
9999 mem: storing 0 in location 1393
9999 mem: storing 0 in location 1394
9999 mem: storing 0 in location 1395
9999 mem: storing 0 in location 1396
9999 mem: storing 0 in location 1397
9999 mem: storing 0 in location 1398
9999 mem: storing 0 in location 1399
9999 mem: storing 0 in location 1400
9999 mem: storing 0 in location 1401
9999 mem: storing 0 in location 1402
9999 mem: storing 0 in location 1403
9999 mem: storing 0 in location 1404
9999 mem: storing 0 in location 1405
9999 mem: storing 0 in location 1406
9999 mem: storing 0 in location 1407
9999 mem: storing 0 in location 1408
9999 mem: storing 0 in location 1409
9999 mem: storing 0 in location 1410
9999 mem: storing 0 in location 1411
9999 mem: storing 0 in location 1412
9999 mem: storing 0 in location 1413
9999 mem: storing 0 in location 1414
9999 mem: storing 0 in location 1415
9999 mem: storing 0 in location 1416
9999 mem: storing 0 in location 1417
9999 mem: storing 0 in location 1418
9999 mem: storing 0 in location 1419
9999 mem: storing 0 in location 1420
9999 mem: storing 0 in location 1421
9999 mem: storing 0 in location 1422
9999 mem: storing 0 in location 1423
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: storing 0 in location 1431
9999 mem: storing 0 in location 1432
9999 mem: storing 0 in location 1433
9999 mem: storing 0 in location 1434
9999 mem: storing 0 in location 1435
9999 mem: storing 0 in location 1436
9999 mem: storing 0 in location 1437
9999 mem: storing 0 in location 1438
9999 mem: storing 0 in location 1439
9999 mem: storing 0 in location 1440
9999 mem: storing 0 in location 1441
9999 mem: storing 0 in location 1442
9999 mem: storing 0 in location 1443
9999 mem: storing 0 in location 1444
9999 mem: storing 0 in location 1445
9999 mem: storing 0 in location 1446
9999 mem: storing 0 in location 1447
9999 mem: storing 0 in location 1448
9999 mem: storing 0 in location 1449
9999 mem: storing 0 in location 1450
9999 mem: storing 0 in location 1451
9999 mem: storing 0 in location 1452
9999 mem: storing 0 in location 1453
9999 mem: storing 0 in location 1454
9999 mem: storing 0 in location 1455
9999 mem: storing 0 in location 1456
9999 mem: storing 0 in location 1457
9999 mem: storing 0 in location 1458
9999 mem: storing 0 in location 1459
9999 mem: storing 0 in location 1460
9999 mem: storing 0 in location 1461
9999 mem: storing 0 in location 1462
9999 mem: storing 0 in location 1463
9999 mem: storing 0 in location 1464
9999 mem: storing 0 in location 1465
9999 mem: storing 0 in location 1466
9999 mem: storing 0 in location 1467
9999 mem: storing 0 in location 1468
9999 mem: storing 0 in location 1469
9999 mem: storing 0 in location 1470
9999 mem: storing 0 in location 1471
9999 mem: storing 0 in location 1472
9999 mem: storing 0 in location 1473
9999 mem: storing 0 in location 1474
9999 mem: storing 0 in location 1475
9999 mem: storing 0 in location 1476
9999 mem: storing 0 in location 1477
9999 mem: storing 0 in location 1478
9999 mem: storing 0 in location 1479
9999 mem: storing 0 in location 1480
9999 mem: storing 0 in location 1481
9999 mem: storing 0 in location 1482
9999 mem: storing 0 in location 1483
9999 mem: storing 0 in location 1484
9999 mem: storing 0 in location 1485
9999 mem: storing 0 in location 1486
9999 mem: storing 0 in location 1487
9999 mem: storing 0 in location 1488
9999 mem: storing 0 in location 1489
9999 mem: storing 0 in location 1490
9999 mem: storing 0 in location 1491
9999 mem: storing 0 in location 1492
9999 mem: storing 0 in location 1493
9999 mem: storing 0 in location 1494
9999 mem: storing 0 in location 1495
9999 mem: storing 0 in location 1496
9999 mem: storing 0 in location 1497
9999 mem: storing 0 in location 1498
9999 mem: storing 0 in location 1499
9999 mem: storing 0 in location 1500
9999 mem: storing 0 in location 1501
9999 mem: storing 0 in location 1502
9999 mem: storing 0 in location 1503
9999 mem: storing 0 in location 1504
9999 mem: storing 0 in location 1505
9999 mem: storing 0 in location 1506
9999 mem: storing 0 in location 1507
9999 mem: storing 0 in location 1508
9999 mem: storing 0 in location 1509
9999 mem: storing 0 in location 1510
9999 mem: storing 0 in location 1511
9999 mem: storing 0 in location 1512
9999 mem: storing 0 in location 1513
9999 mem: storing 0 in location 1514
9999 mem: storing 0 in location 1515
9999 mem: storing 0 in location 1516
9999 mem: storing 0 in location 1517
9999 mem: storing 0 in location 1518
9999 mem: storing 0 in location 1519
9999 mem: storing 0 in location 1520
9999 mem: storing 0 in location 1521
9999 mem: storing 0 in location 1522
9999 mem: storing 0 in location 1523
9999 mem: storing 0 in location 1524
9999 mem: storing 0 in location 1525
9999 mem: storing 0 in location 1526
9999 mem: storing 0 in location 1527
9999 mem: storing 0 in location 1528
9999 mem: storing 0 in location 1529
9999 mem: storing 0 in location 1530
9999 mem: storing 0 in location 1531
9999 mem: storing 0 in location 1532
9999 mem: storing 0 in location 1533
9999 mem: storing 0 in location 1534
9999 mem: storing 0 in location 1535
9999 mem: storing 0 in location 1536
9999 mem: storing 0 in location 1537
9999 mem: storing 0 in location 1538
9999 mem: storing 0 in location 1539
9999 mem: storing 0 in location 1540
9999 mem: storing 0 in location 1541
9999 mem: storing 0 in location 1542
9999 mem: storing 0 in location 1543
9999 mem: storing 0 in location 1544
9999 mem: storing 0 in location 1545
9999 mem: storing 0 in location 1546
9999 mem: storing 0 in location 1547
9999 mem: storing 0 in location 1548
9999 mem: storing 0 in location 1549
9999 mem: storing 0 in location 1550
9999 mem: storing 0 in location 1551
9999 mem: storing 0 in location 1552
9999 mem: storing 0 in location 1553
9999 mem: storing 0 in location 1554
9999 mem: storing 0 in location 1555
9999 mem: storing 0 in location 1556
9999 mem: storing 0 in location 1557
9999 mem: storing 0 in location 1558
9999 mem: storing 0 in location 1559
9999 mem: storing 0 in location 1560
9999 mem: storing 0 in location 1561
9999 mem: storing 0 in location 1562
9999 mem: storing 0 in location 1563
9999 mem: storing 0 in location 1564
9999 mem: storing 0 in location 1565
9999 mem: storing 0 in location 1566
9999 mem: storing 0 in location 1567
9999 mem: storing 0 in location 1568
9999 mem: storing 0 in location 1569
9999 mem: storing 0 in location 1570
9999 mem: storing 0 in location 1571
9999 mem: storing 0 in location 1572
9999 mem: storing 0 in location 1573
9999 mem: storing 0 in location 1574
9999 mem: storing 0 in location 1575
9999 mem: storing 0 in location 1576
9999 mem: storing 0 in location 1577
9999 mem: storing 0 in location 1578
9999 mem: storing 0 in location 1579
9999 mem: storing 0 in location 1580
9999 mem: storing 0 in location 1581
9999 mem: storing 0 in location 1582
9999 mem: storing 0 in location 1583
9999 mem: storing 0 in location 1584
9999 mem: storing 0 in location 1585
9999 mem: storing 0 in location 1586
9999 mem: storing 0 in location 1587
9999 mem: storing 0 in location 1588
9999 mem: storing 0 in location 1589
9999 mem: storing 0 in location 1590
9999 mem: storing 0 in location 1591
9999 mem: storing 0 in location 1592
9999 mem: storing 0 in location 1593
9999 mem: storing 0 in location 1594
9999 mem: storing 0 in location 1595
9999 mem: storing 0 in location 1596
9999 mem: storing 0 in location 1597
9999 mem: storing 0 in location 1598
9999 mem: storing 0 in location 1599
9999 mem: storing 0 in location 1600
9999 mem: storing 0 in location 1601
9999 mem: storing 0 in location 1602
9999 mem: storing 0 in location 1603
9999 mem: storing 0 in location 1604
9999 mem: storing 0 in location 1605
9999 mem: storing 0 in location 1606
9999 mem: storing 0 in location 1607
9999 mem: storing 0 in location 1608
9999 mem: storing 0 in location 1609
9999 mem: storing 0 in location 1610
9999 mem: storing 0 in location 1611
9999 mem: storing 0 in location 1612
9999 mem: storing 0 in location 1613
9999 mem: storing 0 in location 1614
9999 mem: storing 0 in location 1615
9999 mem: storing 0 in location 1616
9999 mem: storing 0 in location 1617
9999 mem: storing 0 in location 1618
9999 mem: storing 0 in location 1619
9999 mem: storing 0 in location 1620
9999 mem: storing 0 in location 1621
9999 mem: storing 0 in location 1622
9999 mem: storing 0 in location 1623
9999 mem: storing 0 in location 1624
9999 mem: storing 0 in location 1625
9999 mem: storing 0 in location 1626
9999 mem: storing 0 in location 1627
9999 mem: storing 0 in location 1628
9999 mem: storing 0 in location 1629
9999 mem: storing 0 in location 1630
9999 mem: storing 0 in location 1631
9999 mem: storing 0 in location 1632
9999 mem: storing 0 in location 1633
9999 mem: storing 0 in location 1634
9999 mem: storing 0 in location 1635
9999 mem: storing 0 in location 1636
9999 mem: storing 0 in location 1637
9999 mem: storing 0 in location 1638
9999 mem: storing 0 in location 1639
9999 mem: storing 0 in location 1640
9999 mem: storing 0 in location 1641
9999 mem: storing 0 in location 1642
9999 mem: storing 0 in location 1643
9999 mem: storing 0 in location 1644
9999 mem: storing 0 in location 1645
9999 mem: storing 0 in location 1646
9999 mem: storing 0 in location 1647
9999 mem: storing 0 in location 1648
9999 mem: storing 0 in location 1649
9999 mem: storing 0 in location 1650
9999 mem: storing 0 in location 1651
9999 mem: storing 0 in location 1652
9999 mem: storing 0 in location 1653
9999 mem: storing 0 in location 1654
9999 mem: storing 0 in location 1655
9999 mem: storing 0 in location 1656
9999 mem: storing 0 in location 1657
9999 mem: storing 0 in location 1658
9999 mem: storing 0 in location 1659
9999 mem: storing 0 in location 1660
9999 mem: storing 0 in location 1661
9999 mem: storing 0 in location 1662
9999 mem: storing 0 in location 1663
9999 mem: storing 0 in location 1664
9999 mem: storing 0 in location 1665
9999 mem: storing 0 in location 1666
9999 mem: storing 0 in location 1667
9999 mem: storing 0 in location 1668
9999 mem: storing 0 in location 1669
9999 mem: storing 0 in location 1670
9999 mem: storing 0 in location 1671
9999 mem: storing 0 in location 1672
9999 mem: storing 0 in location 1673
9999 mem: storing 0 in location 1674
9999 mem: storing 0 in location 1675
9999 mem: storing 0 in location 1676
9999 mem: storing 0 in location 1677
9999 mem: storing 0 in location 1678
9999 mem: storing 0 in location 1679
9999 mem: storing 0 in location 1680
9999 mem: storing 0 in location 1681
9999 mem: storing 0 in location 1682
9999 mem: storing 0 in location 1683
9999 mem: storing 0 in location 1684
9999 mem: storing 0 in location 1685
9999 mem: storing 0 in location 1686
9999 mem: storing 0 in location 1687
9999 mem: storing 0 in location 1688
9999 mem: storing 0 in location 1689
9999 mem: storing 0 in location 1690
9999 mem: storing 0 in location 1691
9999 mem: storing 0 in location 1692
9999 mem: storing 0 in location 1693
9999 mem: storing 0 in location 1694
9999 mem: storing 0 in location 1695
9999 mem: storing 0 in location 1696
9999 mem: storing 0 in location 1697
9999 mem: storing 0 in location 1698
9999 mem: storing 0 in location 1699
9999 mem: storing 0 in location 1700
9999 mem: storing 0 in location 1701
9999 mem: storing 0 in location 1702
9999 mem: storing 0 in location 1703
9999 mem: storing 0 in location 1704
9999 mem: storing 0 in location 1705
9999 mem: storing 0 in location 1706
9999 mem: storing 0 in location 1707
9999 mem: storing 0 in location 1708
9999 mem: storing 0 in location 1709
9999 mem: storing 0 in location 1710
9999 mem: storing 0 in location 1711
9999 mem: storing 0 in location 1712
9999 mem: storing 0 in location 1713
9999 mem: storing 0 in location 1714
9999 mem: storing 0 in location 1715
9999 mem: storing 0 in location 1716
9999 mem: storing 0 in location 1717
9999 mem: storing 0 in location 1718
9999 mem: storing 0 in location 1719
9999 mem: storing 0 in location 1720
9999 mem: storing 0 in location 1721
9999 mem: storing 0 in location 1722
9999 mem: storing 0 in location 1723
9999 mem: storing 0 in location 1724
9999 mem: storing 0 in location 1725
9999 mem: storing 0 in location 1726
9999 mem: storing 0 in location 1727
9999 mem: storing 0 in location 1728
9999 mem: storing 0 in location 1729
9999 mem: storing 0 in location 1730
9999 mem: storing 0 in location 1731
9999 mem: storing 0 in location 1732
9999 mem: storing 0 in location 1733
9999 mem: storing 0 in location 1734
9999 mem: storing 0 in location 1735
9999 mem: storing 360 in location 1015
9999 mem: incrementing refcount of 1014: 0 -> 1
9999 mem: storing 1014 in location 1007
 103 run: {result: ("address" "screen"), "lookup": ()} <- merge {h: "number", "num-rows": ()}, {w: "number", "num-columns": ()}, {0: "literal", "cursor-row": ()}, {0: "literal", "cursor-column": ()}, {data: ("address" "array" "screen-cell")}
9999 mem: location 1004 is 12
9999 mem: location 1003 is 30
9999 mem: location 1007 is 1014
9999 mem: location 1005 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1005 is 1008
9999 mem: skipping refcount at 1008
9999 mem: storing 12 in location 1009
9999 mem: storing 30 in location 1010
9999 mem: storing 0 in location 1011
9999 mem: storing 0 in location 1012
9999 mem: storing 1014 in location 1013
 103 run: {result: ("address" "screen")} <- clear-screen {result: ("address" "screen")}
9999 mem: location 1005 is 1008
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 mem: new alloc: 1736
9999 mem: storing 0 in location 1736
9999 mem: storing 0 in location 1737
9999 mem: storing 0 in location 1738
9999 mem: storing 0 in location 1739
9999 mem: storing 0 in location 1740
9999 mem: storing 0 in location 1741
9999 mem: storing 0 in location 1742
9999 mem: storing 0 in location 1743
9999 mem: storing 0 in location 1744
9999 mem: storing 0 in location 1745
9999 mem: storing 8 in location 1737
 104 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 1 -> 2
9999 mem: storing 1008 in location 1739
 104 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1739 is 1008
9998 run: jump-unless fell through
 104 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1739 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1739 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1740
 104 run: {max: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 1741
 104 run: {i: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1742
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 0
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 0
9998 run: address to copy to is 1016
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1016
9999 mem: storing 7 in location 1017
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 0
9999 mem: storing 1 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 1
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 1
9998 run: address to copy to is 1018
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1018
9999 mem: storing 7 in location 1019
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 1
9999 mem: storing 2 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 2
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 2
9998 run: address to copy to is 1020
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1020
9999 mem: storing 7 in location 1021
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 2
9999 mem: storing 3 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 3
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 3
9998 run: address to copy to is 1022
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1022
9999 mem: storing 7 in location 1023
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 3
9999 mem: storing 4 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 4
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 4
9998 run: address to copy to is 1024
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1024
9999 mem: storing 7 in location 1025
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 4
9999 mem: storing 5 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 5
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 5
9998 run: address to copy to is 1026
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1026
9999 mem: storing 7 in location 1027
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 5
9999 mem: storing 6 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 6
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 6
9998 run: address to copy to is 1028
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1028
9999 mem: storing 7 in location 1029
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 6
9999 mem: storing 7 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 7
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 7
9998 run: address to copy to is 1030
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1030
9999 mem: storing 7 in location 1031
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 7
9999 mem: storing 8 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 8
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 8
9998 run: address to copy to is 1032
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1032
9999 mem: storing 7 in location 1033
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 8
9999 mem: storing 9 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 9
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 9
9998 run: address to copy to is 1034
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1034
9999 mem: storing 7 in location 1035
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 9
9999 mem: storing 10 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 10
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 10
9998 run: address to copy to is 1036
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1036
9999 mem: storing 7 in location 1037
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 10
9999 mem: storing 11 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 11
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 11
9998 run: address to copy to is 1038
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1038
9999 mem: storing 7 in location 1039
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 11
9999 mem: storing 12 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 12
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 12
9998 run: address to copy to is 1040
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1040
9999 mem: storing 7 in location 1041
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 12
9999 mem: storing 13 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 13
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 13
9998 run: address to copy to is 1042
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1042
9999 mem: storing 7 in location 1043
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 13
9999 mem: storing 14 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 14
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 14
9998 run: address to copy to is 1044
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1044
9999 mem: storing 7 in location 1045
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 14
9999 mem: storing 15 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 15
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 15
9998 run: address to copy to is 1046
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1046
9999 mem: storing 7 in location 1047
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 15
9999 mem: storing 16 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 16
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 16
9998 run: address to copy to is 1048
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1048
9999 mem: storing 7 in location 1049
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 16
9999 mem: storing 17 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 17
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 17
9998 run: address to copy to is 1050
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1050
9999 mem: storing 7 in location 1051
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 17
9999 mem: storing 18 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 18
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 18
9998 run: address to copy to is 1052
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1052
9999 mem: storing 7 in location 1053
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 18
9999 mem: storing 19 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 19
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 19
9998 run: address to copy to is 1054
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1054
9999 mem: storing 7 in location 1055
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 19
9999 mem: storing 20 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 20
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 20
9998 run: address to copy to is 1056
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1056
9999 mem: storing 7 in location 1057
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 20
9999 mem: storing 21 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 21
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 21
9998 run: address to copy to is 1058
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1058
9999 mem: storing 7 in location 1059
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 21
9999 mem: storing 22 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 22
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 22
9998 run: address to copy to is 1060
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1060
9999 mem: storing 7 in location 1061
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 22
9999 mem: storing 23 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 23
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 23
9998 run: address to copy to is 1062
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1062
9999 mem: storing 7 in location 1063
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 23
9999 mem: storing 24 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 24
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 24
9998 run: address to copy to is 1064
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1064
9999 mem: storing 7 in location 1065
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 24
9999 mem: storing 25 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 25
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 25
9998 run: address to copy to is 1066
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1066
9999 mem: storing 7 in location 1067
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 25
9999 mem: storing 26 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 26
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 26
9998 run: address to copy to is 1068
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1068
9999 mem: storing 7 in location 1069
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 26
9999 mem: storing 27 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 27
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 27
9998 run: address to copy to is 1070
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1070
9999 mem: storing 7 in location 1071
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 27
9999 mem: storing 28 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 28
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 28
9998 run: address to copy to is 1072
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1072
9999 mem: storing 7 in location 1073
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 28
9999 mem: storing 29 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 29
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 29
9998 run: address to copy to is 1074
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1074
9999 mem: storing 7 in location 1075
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 29
9999 mem: storing 30 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 30
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 30
9998 run: address to copy to is 1076
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1076
9999 mem: storing 7 in location 1077
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 30
9999 mem: storing 31 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 31
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 31
9998 run: address to copy to is 1078
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1078
9999 mem: storing 7 in location 1079
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 31
9999 mem: storing 32 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 32
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 32
9998 run: address to copy to is 1080
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1080
9999 mem: storing 7 in location 1081
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 32
9999 mem: storing 33 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 33
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 33
9998 run: address to copy to is 1082
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1082
9999 mem: storing 7 in location 1083
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 33
9999 mem: storing 34 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 34
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 34
9998 run: address to copy to is 1084
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1084
9999 mem: storing 7 in location 1085
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 34
9999 mem: storing 35 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 35
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 35
9998 run: address to copy to is 1086
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1086
9999 mem: storing 7 in location 1087
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 35
9999 mem: storing 36 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 36
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 36
9998 run: address to copy to is 1088
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1088
9999 mem: storing 7 in location 1089
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 36
9999 mem: storing 37 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 37
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 37
9998 run: address to copy to is 1090
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1090
9999 mem: storing 7 in location 1091
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 37
9999 mem: storing 38 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 38
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 38
9998 run: address to copy to is 1092
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1092
9999 mem: storing 7 in location 1093
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 38
9999 mem: storing 39 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 39
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 39
9998 run: address to copy to is 1094
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1094
9999 mem: storing 7 in location 1095
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 39
9999 mem: storing 40 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 40
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 40
9998 run: address to copy to is 1096
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1096
9999 mem: storing 7 in location 1097
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 40
9999 mem: storing 41 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 41
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 41
9998 run: address to copy to is 1098
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1098
9999 mem: storing 7 in location 1099
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 41
9999 mem: storing 42 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 42
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 42
9998 run: address to copy to is 1100
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1100
9999 mem: storing 7 in location 1101
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 42
9999 mem: storing 43 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 43
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 43
9998 run: address to copy to is 1102
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1102
9999 mem: storing 7 in location 1103
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 43
9999 mem: storing 44 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 44
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 44
9998 run: address to copy to is 1104
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1104
9999 mem: storing 7 in location 1105
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 44
9999 mem: storing 45 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 45
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 45
9998 run: address to copy to is 1106
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1106
9999 mem: storing 7 in location 1107
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 45
9999 mem: storing 46 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 46
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 46
9998 run: address to copy to is 1108
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1108
9999 mem: storing 7 in location 1109
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 46
9999 mem: storing 47 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 47
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 47
9998 run: address to copy to is 1110
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1110
9999 mem: storing 7 in location 1111
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 47
9999 mem: storing 48 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 48
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 48
9998 run: address to copy to is 1112
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1112
9999 mem: storing 7 in location 1113
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 48
9999 mem: storing 49 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 49
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 49
9998 run: address to copy to is 1114
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1114
9999 mem: storing 7 in location 1115
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 49
9999 mem: storing 50 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 50
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 50
9998 run: address to copy to is 1116
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1116
9999 mem: storing 7 in location 1117
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 50
9999 mem: storing 51 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 51
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 51
9998 run: address to copy to is 1118
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1118
9999 mem: storing 7 in location 1119
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 51
9999 mem: storing 52 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 52
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 52
9998 run: address to copy to is 1120
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1120
9999 mem: storing 7 in location 1121
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 52
9999 mem: storing 53 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 53
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 53
9998 run: address to copy to is 1122
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1122
9999 mem: storing 7 in location 1123
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 53
9999 mem: storing 54 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 54
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 54
9998 run: address to copy to is 1124
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 54
9999 mem: storing 55 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 55
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 55
9998 run: address to copy to is 1126
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1126
9999 mem: storing 7 in location 1127
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 55
9999 mem: storing 56 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 56
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 56
9998 run: address to copy to is 1128
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1128
9999 mem: storing 7 in location 1129
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 56
9999 mem: storing 57 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 57
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 57
9998 run: address to copy to is 1130
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1130
9999 mem: storing 7 in location 1131
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 57
9999 mem: storing 58 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 58
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 58
9998 run: address to copy to is 1132
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1132
9999 mem: storing 7 in location 1133
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 58
9999 mem: storing 59 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 59
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 59
9998 run: address to copy to is 1134
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1134
9999 mem: storing 7 in location 1135
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 59
9999 mem: storing 60 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 60
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 60
9998 run: address to copy to is 1136
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1136
9999 mem: storing 7 in location 1137
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 60
9999 mem: storing 61 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 61
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 61
9998 run: address to copy to is 1138
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1138
9999 mem: storing 7 in location 1139
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 61
9999 mem: storing 62 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 62
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 62
9998 run: address to copy to is 1140
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1140
9999 mem: storing 7 in location 1141
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 62
9999 mem: storing 63 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 63
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 63
9998 run: address to copy to is 1142
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1142
9999 mem: storing 7 in location 1143
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 63
9999 mem: storing 64 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 64
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 64
9998 run: address to copy to is 1144
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1144
9999 mem: storing 7 in location 1145
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 64
9999 mem: storing 65 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 65
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 65
9998 run: address to copy to is 1146
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1146
9999 mem: storing 7 in location 1147
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 65
9999 mem: storing 66 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 66
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 66
9998 run: address to copy to is 1148
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1148
9999 mem: storing 7 in location 1149
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 66
9999 mem: storing 67 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 67
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 67
9998 run: address to copy to is 1150
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1150
9999 mem: storing 7 in location 1151
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 67
9999 mem: storing 68 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 68
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 68
9998 run: address to copy to is 1152
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1152
9999 mem: storing 7 in location 1153
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 68
9999 mem: storing 69 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 69
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 69
9998 run: address to copy to is 1154
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1154
9999 mem: storing 7 in location 1155
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 69
9999 mem: storing 70 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 70
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 70
9998 run: address to copy to is 1156
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1156
9999 mem: storing 7 in location 1157
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 70
9999 mem: storing 71 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 71
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 71
9998 run: address to copy to is 1158
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1158
9999 mem: storing 7 in location 1159
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 71
9999 mem: storing 72 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 72
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 72
9998 run: address to copy to is 1160
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1160
9999 mem: storing 7 in location 1161
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 72
9999 mem: storing 73 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 73
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 73
9998 run: address to copy to is 1162
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1162
9999 mem: storing 7 in location 1163
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 73
9999 mem: storing 74 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 74
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 74
9998 run: address to copy to is 1164
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1164
9999 mem: storing 7 in location 1165
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 74
9999 mem: storing 75 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 75
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 75
9998 run: address to copy to is 1166
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1166
9999 mem: storing 7 in location 1167
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 75
9999 mem: storing 76 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 76
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 76
9998 run: address to copy to is 1168
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1168
9999 mem: storing 7 in location 1169
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 76
9999 mem: storing 77 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 77
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 77
9998 run: address to copy to is 1170
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1170
9999 mem: storing 7 in location 1171
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 77
9999 mem: storing 78 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 78
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 78
9998 run: address to copy to is 1172
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1172
9999 mem: storing 7 in location 1173
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 78
9999 mem: storing 79 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 79
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 79
9998 run: address to copy to is 1174
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1174
9999 mem: storing 7 in location 1175
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 79
9999 mem: storing 80 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 80
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
9990 schedule: clear-screen/new-fake-screen/scenario_making-a-move
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 80
9998 run: address to copy to is 1176
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1176
9999 mem: storing 7 in location 1177
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 80
9999 mem: storing 81 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 81
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 81
9998 run: address to copy to is 1178
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1178
9999 mem: storing 7 in location 1179
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 81
9999 mem: storing 82 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 82
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 82
9998 run: address to copy to is 1180
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1180
9999 mem: storing 7 in location 1181
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 82
9999 mem: storing 83 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 83
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 83
9998 run: address to copy to is 1182
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1182
9999 mem: storing 7 in location 1183
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 83
9999 mem: storing 84 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 84
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 84
9998 run: address to copy to is 1184
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1184
9999 mem: storing 7 in location 1185
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 84
9999 mem: storing 85 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 85
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 85
9998 run: address to copy to is 1186
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1186
9999 mem: storing 7 in location 1187
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 85
9999 mem: storing 86 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 86
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 86
9998 run: address to copy to is 1188
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1188
9999 mem: storing 7 in location 1189
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 86
9999 mem: storing 87 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 87
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 87
9998 run: address to copy to is 1190
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1190
9999 mem: storing 7 in location 1191
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 87
9999 mem: storing 88 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 88
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 88
9998 run: address to copy to is 1192
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1192
9999 mem: storing 7 in location 1193
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 88
9999 mem: storing 89 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 89
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 89
9998 run: address to copy to is 1194
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1194
9999 mem: storing 7 in location 1195
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 89
9999 mem: storing 90 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 90
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 90
9998 run: address to copy to is 1196
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1196
9999 mem: storing 7 in location 1197
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 90
9999 mem: storing 91 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 91
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 91
9998 run: address to copy to is 1198
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1198
9999 mem: storing 7 in location 1199
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 91
9999 mem: storing 92 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 92
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 92
9998 run: address to copy to is 1200
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1200
9999 mem: storing 7 in location 1201
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 92
9999 mem: storing 93 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 93
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 93
9998 run: address to copy to is 1202
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1202
9999 mem: storing 7 in location 1203
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 93
9999 mem: storing 94 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 94
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 94
9998 run: address to copy to is 1204
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1204
9999 mem: storing 7 in location 1205
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 94
9999 mem: storing 95 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 95
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 95
9998 run: address to copy to is 1206
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1206
9999 mem: storing 7 in location 1207
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 95
9999 mem: storing 96 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 96
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 96
9998 run: address to copy to is 1208
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1208
9999 mem: storing 7 in location 1209
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 96
9999 mem: storing 97 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 97
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 97
9998 run: address to copy to is 1210
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1210
9999 mem: storing 7 in location 1211
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 97
9999 mem: storing 98 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 98
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 98
9998 run: address to copy to is 1212
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1212
9999 mem: storing 7 in location 1213
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 98
9999 mem: storing 99 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 99
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 99
9998 run: address to copy to is 1214
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1214
9999 mem: storing 7 in location 1215
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 99
9999 mem: storing 100 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 100
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 100
9998 run: address to copy to is 1216
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1216
9999 mem: storing 7 in location 1217
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 100
9999 mem: storing 101 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 101
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 101
9998 run: address to copy to is 1218
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1218
9999 mem: storing 7 in location 1219
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 101
9999 mem: storing 102 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 102
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 102
9998 run: address to copy to is 1220
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1220
9999 mem: storing 7 in location 1221
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 102
9999 mem: storing 103 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 103
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 103
9998 run: address to copy to is 1222
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1222
9999 mem: storing 7 in location 1223
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 103
9999 mem: storing 104 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 104
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 104
9998 run: address to copy to is 1224
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1224
9999 mem: storing 7 in location 1225
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 104
9999 mem: storing 105 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 105
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 105
9998 run: address to copy to is 1226
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1226
9999 mem: storing 7 in location 1227
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 105
9999 mem: storing 106 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 106
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 106
9998 run: address to copy to is 1228
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1228
9999 mem: storing 7 in location 1229
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 106
9999 mem: storing 107 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 107
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 107
9998 run: address to copy to is 1230
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1230
9999 mem: storing 7 in location 1231
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 107
9999 mem: storing 108 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 108
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 108
9998 run: address to copy to is 1232
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1232
9999 mem: storing 7 in location 1233
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 108
9999 mem: storing 109 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 109
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 109
9998 run: address to copy to is 1234
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1234
9999 mem: storing 7 in location 1235
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 109
9999 mem: storing 110 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 110
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 110
9998 run: address to copy to is 1236
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1236
9999 mem: storing 7 in location 1237
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 110
9999 mem: storing 111 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 111
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 111
9998 run: address to copy to is 1238
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1238
9999 mem: storing 7 in location 1239
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 111
9999 mem: storing 112 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 112
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 112
9998 run: address to copy to is 1240
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1240
9999 mem: storing 7 in location 1241
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 112
9999 mem: storing 113 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 113
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 113
9998 run: address to copy to is 1242
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1242
9999 mem: storing 7 in location 1243
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 113
9999 mem: storing 114 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 114
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 114
9998 run: address to copy to is 1244
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1244
9999 mem: storing 7 in location 1245
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 114
9999 mem: storing 115 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 115
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 115
9998 run: address to copy to is 1246
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1246
9999 mem: storing 7 in location 1247
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 115
9999 mem: storing 116 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 116
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 116
9998 run: address to copy to is 1248
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1248
9999 mem: storing 7 in location 1249
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 116
9999 mem: storing 117 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 117
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 117
9998 run: address to copy to is 1250
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1250
9999 mem: storing 7 in location 1251
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 117
9999 mem: storing 118 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 118
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 118
9998 run: address to copy to is 1252
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1252
9999 mem: storing 7 in location 1253
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 118
9999 mem: storing 119 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 119
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 119
9998 run: address to copy to is 1254
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1254
9999 mem: storing 7 in location 1255
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 119
9999 mem: storing 120 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 120
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 120
9998 run: address to copy to is 1256
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1256
9999 mem: storing 7 in location 1257
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 120
9999 mem: storing 121 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 121
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 121
9998 run: address to copy to is 1258
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1258
9999 mem: storing 7 in location 1259
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 121
9999 mem: storing 122 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 122
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 122
9998 run: address to copy to is 1260
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1260
9999 mem: storing 7 in location 1261
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 122
9999 mem: storing 123 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 123
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 123
9998 run: address to copy to is 1262
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1262
9999 mem: storing 7 in location 1263
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 123
9999 mem: storing 124 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 124
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 124
9998 run: address to copy to is 1264
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1264
9999 mem: storing 7 in location 1265
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 124
9999 mem: storing 125 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 125
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 125
9998 run: address to copy to is 1266
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1266
9999 mem: storing 7 in location 1267
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 125
9999 mem: storing 126 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 126
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 126
9998 run: address to copy to is 1268
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1268
9999 mem: storing 7 in location 1269
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 126
9999 mem: storing 127 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 127
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 127
9998 run: address to copy to is 1270
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1270
9999 mem: storing 7 in location 1271
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 127
9999 mem: storing 128 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 128
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 128
9998 run: address to copy to is 1272
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1272
9999 mem: storing 7 in location 1273
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 128
9999 mem: storing 129 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 129
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 129
9998 run: address to copy to is 1274
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1274
9999 mem: storing 7 in location 1275
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 129
9999 mem: storing 130 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 130
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 130
9998 run: address to copy to is 1276
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1276
9999 mem: storing 7 in location 1277
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 130
9999 mem: storing 131 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 131
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 131
9998 run: address to copy to is 1278
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1278
9999 mem: storing 7 in location 1279
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 131
9999 mem: storing 132 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 132
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 132
9998 run: address to copy to is 1280
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1280
9999 mem: storing 7 in location 1281
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 132
9999 mem: storing 133 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 133
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 133
9998 run: address to copy to is 1282
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1282
9999 mem: storing 7 in location 1283
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 133
9999 mem: storing 134 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 134
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 134
9998 run: address to copy to is 1284
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1284
9999 mem: storing 7 in location 1285
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 134
9999 mem: storing 135 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 135
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 135
9998 run: address to copy to is 1286
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1286
9999 mem: storing 7 in location 1287
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 135
9999 mem: storing 136 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 136
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 136
9998 run: address to copy to is 1288
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1288
9999 mem: storing 7 in location 1289
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 136
9999 mem: storing 137 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 137
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 137
9998 run: address to copy to is 1290
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1290
9999 mem: storing 7 in location 1291
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 137
9999 mem: storing 138 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 138
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 138
9998 run: address to copy to is 1292
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1292
9999 mem: storing 7 in location 1293
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 138
9999 mem: storing 139 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 139
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 139
9998 run: address to copy to is 1294
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1294
9999 mem: storing 7 in location 1295
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 139
9999 mem: storing 140 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 140
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 140
9998 run: address to copy to is 1296
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1296
9999 mem: storing 7 in location 1297
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 140
9999 mem: storing 141 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 141
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 141
9998 run: address to copy to is 1298
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1298
9999 mem: storing 7 in location 1299
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 141
9999 mem: storing 142 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 142
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 142
9998 run: address to copy to is 1300
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1300
9999 mem: storing 7 in location 1301
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 142
9999 mem: storing 143 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 143
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 143
9998 run: address to copy to is 1302
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1302
9999 mem: storing 7 in location 1303
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 143
9999 mem: storing 144 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 144
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 144
9998 run: address to copy to is 1304
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1304
9999 mem: storing 7 in location 1305
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 144
9999 mem: storing 145 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 145
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 145
9998 run: address to copy to is 1306
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1306
9999 mem: storing 7 in location 1307
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 145
9999 mem: storing 146 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 146
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 146
9998 run: address to copy to is 1308
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1308
9999 mem: storing 7 in location 1309
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 146
9999 mem: storing 147 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 147
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 147
9998 run: address to copy to is 1310
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1310
9999 mem: storing 7 in location 1311
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 147
9999 mem: storing 148 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 148
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 148
9998 run: address to copy to is 1312
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1312
9999 mem: storing 7 in location 1313
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 148
9999 mem: storing 149 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 149
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 149
9998 run: address to copy to is 1314
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1314
9999 mem: storing 7 in location 1315
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 149
9999 mem: storing 150 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 150
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 150
9998 run: address to copy to is 1316
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1316
9999 mem: storing 7 in location 1317
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 150
9999 mem: storing 151 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 151
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 151
9998 run: address to copy to is 1318
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1318
9999 mem: storing 7 in location 1319
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 151
9999 mem: storing 152 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 152
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 152
9998 run: address to copy to is 1320
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1320
9999 mem: storing 7 in location 1321
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 152
9999 mem: storing 153 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 153
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 153
9998 run: address to copy to is 1322
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1322
9999 mem: storing 7 in location 1323
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 153
9999 mem: storing 154 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 154
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 154
9998 run: address to copy to is 1324
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1324
9999 mem: storing 7 in location 1325
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 154
9999 mem: storing 155 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 155
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 155
9998 run: address to copy to is 1326
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1326
9999 mem: storing 7 in location 1327
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 155
9999 mem: storing 156 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 156
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 156
9998 run: address to copy to is 1328
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1328
9999 mem: storing 7 in location 1329
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 156
9999 mem: storing 157 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 157
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 157
9998 run: address to copy to is 1330
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1330
9999 mem: storing 7 in location 1331
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 157
9999 mem: storing 158 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 158
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 158
9998 run: address to copy to is 1332
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1332
9999 mem: storing 7 in location 1333
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 158
9999 mem: storing 159 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 159
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 159
9998 run: address to copy to is 1334
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1334
9999 mem: storing 7 in location 1335
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 159
9999 mem: storing 160 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 160
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 160
9998 run: address to copy to is 1336
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1336
9999 mem: storing 7 in location 1337
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 160
9999 mem: storing 161 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 161
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 161
9998 run: address to copy to is 1338
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1338
9999 mem: storing 7 in location 1339
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 161
9999 mem: storing 162 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 162
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 162
9998 run: address to copy to is 1340
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1340
9999 mem: storing 7 in location 1341
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 162
9999 mem: storing 163 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 163
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 163
9998 run: address to copy to is 1342
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1342
9999 mem: storing 7 in location 1343
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 163
9999 mem: storing 164 in location 1742
9990 schedule: clear-screen/new-fake-screen/scenario_making-a-move
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 164
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 164
9998 run: address to copy to is 1344
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1344
9999 mem: storing 7 in location 1345
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 164
9999 mem: storing 165 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 165
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 165
9998 run: address to copy to is 1346
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1346
9999 mem: storing 7 in location 1347
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 165
9999 mem: storing 166 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 166
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 166
9998 run: address to copy to is 1348
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1348
9999 mem: storing 7 in location 1349
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 166
9999 mem: storing 167 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 167
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 167
9998 run: address to copy to is 1350
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1350
9999 mem: storing 7 in location 1351
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 167
9999 mem: storing 168 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 168
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 168
9998 run: address to copy to is 1352
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1352
9999 mem: storing 7 in location 1353
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 168
9999 mem: storing 169 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 169
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 169
9998 run: address to copy to is 1354
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1354
9999 mem: storing 7 in location 1355
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 169
9999 mem: storing 170 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 170
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 170
9998 run: address to copy to is 1356
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1356
9999 mem: storing 7 in location 1357
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 170
9999 mem: storing 171 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 171
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 171
9998 run: address to copy to is 1358
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1358
9999 mem: storing 7 in location 1359
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 171
9999 mem: storing 172 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 172
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 172
9998 run: address to copy to is 1360
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1360
9999 mem: storing 7 in location 1361
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 172
9999 mem: storing 173 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 173
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 173
9998 run: address to copy to is 1362
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1362
9999 mem: storing 7 in location 1363
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 173
9999 mem: storing 174 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 174
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 174
9998 run: address to copy to is 1364
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1364
9999 mem: storing 7 in location 1365
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 174
9999 mem: storing 175 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 175
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 175
9998 run: address to copy to is 1366
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1366
9999 mem: storing 7 in location 1367
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 175
9999 mem: storing 176 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 176
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 176
9998 run: address to copy to is 1368
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1368
9999 mem: storing 7 in location 1369
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 176
9999 mem: storing 177 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 177
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 177
9998 run: address to copy to is 1370
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1370
9999 mem: storing 7 in location 1371
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 177
9999 mem: storing 178 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 178
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 178
9998 run: address to copy to is 1372
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1372
9999 mem: storing 7 in location 1373
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 178
9999 mem: storing 179 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 179
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 179
9998 run: address to copy to is 1374
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1374
9999 mem: storing 7 in location 1375
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 179
9999 mem: storing 180 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 180
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 180
9998 run: address to copy to is 1376
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1376
9999 mem: storing 7 in location 1377
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 180
9999 mem: storing 181 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 181
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 181
9998 run: address to copy to is 1378
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1378
9999 mem: storing 7 in location 1379
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 181
9999 mem: storing 182 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 182
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 182
9998 run: address to copy to is 1380
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1380
9999 mem: storing 7 in location 1381
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 182
9999 mem: storing 183 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 183
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 183
9998 run: address to copy to is 1382
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1382
9999 mem: storing 7 in location 1383
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 183
9999 mem: storing 184 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 184
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 184
9998 run: address to copy to is 1384
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1384
9999 mem: storing 7 in location 1385
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 184
9999 mem: storing 185 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 185
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 185
9998 run: address to copy to is 1386
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1386
9999 mem: storing 7 in location 1387
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 185
9999 mem: storing 186 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 186
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 186
9998 run: address to copy to is 1388
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1388
9999 mem: storing 7 in location 1389
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 186
9999 mem: storing 187 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 187
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 187
9998 run: address to copy to is 1390
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1390
9999 mem: storing 7 in location 1391
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 187
9999 mem: storing 188 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 188
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 188
9998 run: address to copy to is 1392
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1392
9999 mem: storing 7 in location 1393
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 188
9999 mem: storing 189 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 189
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 189
9998 run: address to copy to is 1394
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1394
9999 mem: storing 7 in location 1395
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 189
9999 mem: storing 190 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 190
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 190
9998 run: address to copy to is 1396
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1396
9999 mem: storing 7 in location 1397
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 190
9999 mem: storing 191 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 191
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 191
9998 run: address to copy to is 1398
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1398
9999 mem: storing 7 in location 1399
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 191
9999 mem: storing 192 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 192
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 192
9998 run: address to copy to is 1400
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1400
9999 mem: storing 7 in location 1401
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 192
9999 mem: storing 193 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 193
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 193
9998 run: address to copy to is 1402
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1402
9999 mem: storing 7 in location 1403
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 193
9999 mem: storing 194 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 194
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 194
9998 run: address to copy to is 1404
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1404
9999 mem: storing 7 in location 1405
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 194
9999 mem: storing 195 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 195
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 195
9998 run: address to copy to is 1406
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1406
9999 mem: storing 7 in location 1407
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 195
9999 mem: storing 196 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 196
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 196
9998 run: address to copy to is 1408
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1408
9999 mem: storing 7 in location 1409
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 196
9999 mem: storing 197 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 197
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 197
9998 run: address to copy to is 1410
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1410
9999 mem: storing 7 in location 1411
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 197
9999 mem: storing 198 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 198
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 198
9998 run: address to copy to is 1412
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1412
9999 mem: storing 7 in location 1413
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 198
9999 mem: storing 199 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 199
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 199
9998 run: address to copy to is 1414
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1414
9999 mem: storing 7 in location 1415
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 199
9999 mem: storing 200 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 200
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 200
9998 run: address to copy to is 1416
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1416
9999 mem: storing 7 in location 1417
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 200
9999 mem: storing 201 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 201
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 201
9998 run: address to copy to is 1418
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1418
9999 mem: storing 7 in location 1419
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 201
9999 mem: storing 202 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 202
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 202
9998 run: address to copy to is 1420
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1420
9999 mem: storing 7 in location 1421
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 202
9999 mem: storing 203 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 203
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 203
9998 run: address to copy to is 1422
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1422
9999 mem: storing 7 in location 1423
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 203
9999 mem: storing 204 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 204
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 204
9998 run: address to copy to is 1424
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1424
9999 mem: storing 7 in location 1425
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 204
9999 mem: storing 205 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 205
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 205
9998 run: address to copy to is 1426
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1426
9999 mem: storing 7 in location 1427
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 205
9999 mem: storing 206 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 206
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 206
9998 run: address to copy to is 1428
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1428
9999 mem: storing 7 in location 1429
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 206
9999 mem: storing 207 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 207
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 207
9998 run: address to copy to is 1430
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1430
9999 mem: storing 7 in location 1431
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 207
9999 mem: storing 208 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 208
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 208
9998 run: address to copy to is 1432
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1432
9999 mem: storing 7 in location 1433
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 208
9999 mem: storing 209 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 209
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 209
9998 run: address to copy to is 1434
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1434
9999 mem: storing 7 in location 1435
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 209
9999 mem: storing 210 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 210
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 210
9998 run: address to copy to is 1436
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1436
9999 mem: storing 7 in location 1437
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 210
9999 mem: storing 211 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 211
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 211
9998 run: address to copy to is 1438
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1438
9999 mem: storing 7 in location 1439
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 211
9999 mem: storing 212 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 212
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 212
9998 run: address to copy to is 1440
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1440
9999 mem: storing 7 in location 1441
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 212
9999 mem: storing 213 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 213
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 213
9998 run: address to copy to is 1442
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1442
9999 mem: storing 7 in location 1443
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 213
9999 mem: storing 214 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 214
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 214
9998 run: address to copy to is 1444
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1444
9999 mem: storing 7 in location 1445
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 214
9999 mem: storing 215 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 215
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 215
9998 run: address to copy to is 1446
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1446
9999 mem: storing 7 in location 1447
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 215
9999 mem: storing 216 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 216
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 216
9998 run: address to copy to is 1448
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1448
9999 mem: storing 7 in location 1449
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 216
9999 mem: storing 217 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 217
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 217
9998 run: address to copy to is 1450
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1450
9999 mem: storing 7 in location 1451
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 217
9999 mem: storing 218 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 218
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 218
9998 run: address to copy to is 1452
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1452
9999 mem: storing 7 in location 1453
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 218
9999 mem: storing 219 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 219
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 219
9998 run: address to copy to is 1454
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1454
9999 mem: storing 7 in location 1455
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 219
9999 mem: storing 220 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 220
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 220
9998 run: address to copy to is 1456
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1456
9999 mem: storing 7 in location 1457
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 220
9999 mem: storing 221 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 221
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 221
9998 run: address to copy to is 1458
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1458
9999 mem: storing 7 in location 1459
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 221
9999 mem: storing 222 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 222
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 222
9998 run: address to copy to is 1460
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1460
9999 mem: storing 7 in location 1461
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 222
9999 mem: storing 223 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 223
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 223
9998 run: address to copy to is 1462
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1462
9999 mem: storing 7 in location 1463
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 223
9999 mem: storing 224 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 224
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 224
9998 run: address to copy to is 1464
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1464
9999 mem: storing 7 in location 1465
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 224
9999 mem: storing 225 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 225
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 225
9998 run: address to copy to is 1466
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1466
9999 mem: storing 7 in location 1467
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 225
9999 mem: storing 226 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 226
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 226
9998 run: address to copy to is 1468
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1468
9999 mem: storing 7 in location 1469
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 226
9999 mem: storing 227 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 227
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 227
9998 run: address to copy to is 1470
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1470
9999 mem: storing 7 in location 1471
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 227
9999 mem: storing 228 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 228
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 228
9998 run: address to copy to is 1472
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1472
9999 mem: storing 7 in location 1473
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 228
9999 mem: storing 229 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 229
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 229
9998 run: address to copy to is 1474
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1474
9999 mem: storing 7 in location 1475
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 229
9999 mem: storing 230 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 230
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 230
9998 run: address to copy to is 1476
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1476
9999 mem: storing 7 in location 1477
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 230
9999 mem: storing 231 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 231
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 231
9998 run: address to copy to is 1478
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1478
9999 mem: storing 7 in location 1479
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 231
9999 mem: storing 232 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 232
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 232
9998 run: address to copy to is 1480
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1480
9999 mem: storing 7 in location 1481
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 232
9999 mem: storing 233 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 233
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 233
9998 run: address to copy to is 1482
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1482
9999 mem: storing 7 in location 1483
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 233
9999 mem: storing 234 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 234
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 234
9998 run: address to copy to is 1484
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1484
9999 mem: storing 7 in location 1485
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 234
9999 mem: storing 235 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 235
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 235
9998 run: address to copy to is 1486
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1486
9999 mem: storing 7 in location 1487
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 235
9999 mem: storing 236 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 236
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 236
9998 run: address to copy to is 1488
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1488
9999 mem: storing 7 in location 1489
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 236
9999 mem: storing 237 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 237
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 237
9998 run: address to copy to is 1490
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1490
9999 mem: storing 7 in location 1491
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 237
9999 mem: storing 238 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 238
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 238
9998 run: address to copy to is 1492
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1492
9999 mem: storing 7 in location 1493
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 238
9999 mem: storing 239 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 239
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 239
9998 run: address to copy to is 1494
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1494
9999 mem: storing 7 in location 1495
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 239
9999 mem: storing 240 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 240
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 240
9998 run: address to copy to is 1496
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1496
9999 mem: storing 7 in location 1497
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 240
9999 mem: storing 241 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 241
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 241
9998 run: address to copy to is 1498
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1498
9999 mem: storing 7 in location 1499
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 241
9999 mem: storing 242 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 242
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 242
9998 run: address to copy to is 1500
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1500
9999 mem: storing 7 in location 1501
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 242
9999 mem: storing 243 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 243
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 243
9998 run: address to copy to is 1502
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1502
9999 mem: storing 7 in location 1503
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 243
9999 mem: storing 244 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 244
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 244
9998 run: address to copy to is 1504
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1504
9999 mem: storing 7 in location 1505
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 244
9999 mem: storing 245 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 245
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 245
9998 run: address to copy to is 1506
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1506
9999 mem: storing 7 in location 1507
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 245
9999 mem: storing 246 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 246
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 246
9998 run: address to copy to is 1508
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1508
9999 mem: storing 7 in location 1509
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 246
9999 mem: storing 247 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 247
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
9990 schedule: clear-screen/new-fake-screen/scenario_making-a-move
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 247
9998 run: address to copy to is 1510
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1510
9999 mem: storing 7 in location 1511
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 247
9999 mem: storing 248 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 248
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 248
9998 run: address to copy to is 1512
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1512
9999 mem: storing 7 in location 1513
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 248
9999 mem: storing 249 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 249
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 249
9998 run: address to copy to is 1514
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1514
9999 mem: storing 7 in location 1515
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 249
9999 mem: storing 250 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 250
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 250
9998 run: address to copy to is 1516
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1516
9999 mem: storing 7 in location 1517
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 250
9999 mem: storing 251 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 251
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 251
9998 run: address to copy to is 1518
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1518
9999 mem: storing 7 in location 1519
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 251
9999 mem: storing 252 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 252
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 252
9998 run: address to copy to is 1520
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1520
9999 mem: storing 7 in location 1521
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 252
9999 mem: storing 253 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 253
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 253
9998 run: address to copy to is 1522
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1522
9999 mem: storing 7 in location 1523
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 253
9999 mem: storing 254 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 254
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 254
9998 run: address to copy to is 1524
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1524
9999 mem: storing 7 in location 1525
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 254
9999 mem: storing 255 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 255
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 255
9998 run: address to copy to is 1526
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1526
9999 mem: storing 7 in location 1527
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 255
9999 mem: storing 256 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 256
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 256
9998 run: address to copy to is 1528
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1528
9999 mem: storing 7 in location 1529
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 256
9999 mem: storing 257 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 257
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 257
9998 run: address to copy to is 1530
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1530
9999 mem: storing 7 in location 1531
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 257
9999 mem: storing 258 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 258
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 258
9998 run: address to copy to is 1532
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1532
9999 mem: storing 7 in location 1533
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 258
9999 mem: storing 259 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 259
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 259
9998 run: address to copy to is 1534
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1534
9999 mem: storing 7 in location 1535
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 259
9999 mem: storing 260 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 260
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 260
9998 run: address to copy to is 1536
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1536
9999 mem: storing 7 in location 1537
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 260
9999 mem: storing 261 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 261
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 261
9998 run: address to copy to is 1538
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1538
9999 mem: storing 7 in location 1539
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 261
9999 mem: storing 262 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 262
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 262
9998 run: address to copy to is 1540
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1540
9999 mem: storing 7 in location 1541
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 262
9999 mem: storing 263 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 263
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 263
9998 run: address to copy to is 1542
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1542
9999 mem: storing 7 in location 1543
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 263
9999 mem: storing 264 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 264
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 264
9998 run: address to copy to is 1544
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1544
9999 mem: storing 7 in location 1545
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 264
9999 mem: storing 265 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 265
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 265
9998 run: address to copy to is 1546
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1546
9999 mem: storing 7 in location 1547
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 265
9999 mem: storing 266 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 266
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 266
9998 run: address to copy to is 1548
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1548
9999 mem: storing 7 in location 1549
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 266
9999 mem: storing 267 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 267
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 267
9998 run: address to copy to is 1550
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1550
9999 mem: storing 7 in location 1551
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 267
9999 mem: storing 268 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 268
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 268
9998 run: address to copy to is 1552
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1552
9999 mem: storing 7 in location 1553
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 268
9999 mem: storing 269 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 269
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 269
9998 run: address to copy to is 1554
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1554
9999 mem: storing 7 in location 1555
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 269
9999 mem: storing 270 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 270
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 270
9998 run: address to copy to is 1556
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1556
9999 mem: storing 7 in location 1557
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 270
9999 mem: storing 271 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 271
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 271
9998 run: address to copy to is 1558
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1558
9999 mem: storing 7 in location 1559
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 271
9999 mem: storing 272 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 272
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 272
9998 run: address to copy to is 1560
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1560
9999 mem: storing 7 in location 1561
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 272
9999 mem: storing 273 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 273
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 273
9998 run: address to copy to is 1562
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1562
9999 mem: storing 7 in location 1563
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 273
9999 mem: storing 274 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 274
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 274
9998 run: address to copy to is 1564
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1564
9999 mem: storing 7 in location 1565
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 274
9999 mem: storing 275 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 275
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 275
9998 run: address to copy to is 1566
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1566
9999 mem: storing 7 in location 1567
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 275
9999 mem: storing 276 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 276
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 276
9998 run: address to copy to is 1568
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1568
9999 mem: storing 7 in location 1569
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 276
9999 mem: storing 277 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 277
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 277
9998 run: address to copy to is 1570
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1570
9999 mem: storing 7 in location 1571
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 277
9999 mem: storing 278 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 278
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 278
9998 run: address to copy to is 1572
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1572
9999 mem: storing 7 in location 1573
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 278
9999 mem: storing 279 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 279
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 279
9998 run: address to copy to is 1574
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1574
9999 mem: storing 7 in location 1575
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 279
9999 mem: storing 280 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 280
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 280
9998 run: address to copy to is 1576
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1576
9999 mem: storing 7 in location 1577
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 280
9999 mem: storing 281 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 281
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 281
9998 run: address to copy to is 1578
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1578
9999 mem: storing 7 in location 1579
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 281
9999 mem: storing 282 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 282
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 282
9998 run: address to copy to is 1580
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1580
9999 mem: storing 7 in location 1581
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 282
9999 mem: storing 283 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 283
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 283
9998 run: address to copy to is 1582
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1582
9999 mem: storing 7 in location 1583
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 283
9999 mem: storing 284 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 284
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 284
9998 run: address to copy to is 1584
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1584
9999 mem: storing 7 in location 1585
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 284
9999 mem: storing 285 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 285
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 285
9998 run: address to copy to is 1586
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1586
9999 mem: storing 7 in location 1587
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 285
9999 mem: storing 286 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 286
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 286
9998 run: address to copy to is 1588
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1588
9999 mem: storing 7 in location 1589
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 286
9999 mem: storing 287 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 287
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 287
9998 run: address to copy to is 1590
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1590
9999 mem: storing 7 in location 1591
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 287
9999 mem: storing 288 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 288
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 288
9998 run: address to copy to is 1592
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1592
9999 mem: storing 7 in location 1593
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 288
9999 mem: storing 289 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 289
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 289
9998 run: address to copy to is 1594
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1594
9999 mem: storing 7 in location 1595
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 289
9999 mem: storing 290 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 290
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 290
9998 run: address to copy to is 1596
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1596
9999 mem: storing 7 in location 1597
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 290
9999 mem: storing 291 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 291
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 291
9998 run: address to copy to is 1598
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1598
9999 mem: storing 7 in location 1599
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 291
9999 mem: storing 292 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 292
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 292
9998 run: address to copy to is 1600
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1600
9999 mem: storing 7 in location 1601
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 292
9999 mem: storing 293 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 293
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 293
9998 run: address to copy to is 1602
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1602
9999 mem: storing 7 in location 1603
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 293
9999 mem: storing 294 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 294
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 294
9998 run: address to copy to is 1604
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1604
9999 mem: storing 7 in location 1605
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 294
9999 mem: storing 295 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 295
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 295
9998 run: address to copy to is 1606
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1606
9999 mem: storing 7 in location 1607
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 295
9999 mem: storing 296 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 296
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 296
9998 run: address to copy to is 1608
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1608
9999 mem: storing 7 in location 1609
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 296
9999 mem: storing 297 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 297
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 297
9998 run: address to copy to is 1610
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1610
9999 mem: storing 7 in location 1611
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 297
9999 mem: storing 298 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 298
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 298
9998 run: address to copy to is 1612
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1612
9999 mem: storing 7 in location 1613
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 298
9999 mem: storing 299 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 299
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 299
9998 run: address to copy to is 1614
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1614
9999 mem: storing 7 in location 1615
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 299
9999 mem: storing 300 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 300
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 300
9998 run: address to copy to is 1616
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1616
9999 mem: storing 7 in location 1617
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 300
9999 mem: storing 301 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 301
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 301
9998 run: address to copy to is 1618
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1618
9999 mem: storing 7 in location 1619
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 301
9999 mem: storing 302 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 302
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 302
9998 run: address to copy to is 1620
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1620
9999 mem: storing 7 in location 1621
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 302
9999 mem: storing 303 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 303
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 303
9998 run: address to copy to is 1622
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1622
9999 mem: storing 7 in location 1623
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 303
9999 mem: storing 304 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 304
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 304
9998 run: address to copy to is 1624
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1624
9999 mem: storing 7 in location 1625
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 304
9999 mem: storing 305 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 305
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 305
9998 run: address to copy to is 1626
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1626
9999 mem: storing 7 in location 1627
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 305
9999 mem: storing 306 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 306
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 306
9998 run: address to copy to is 1628
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1628
9999 mem: storing 7 in location 1629
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 306
9999 mem: storing 307 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 307
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 307
9998 run: address to copy to is 1630
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1630
9999 mem: storing 7 in location 1631
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 307
9999 mem: storing 308 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 308
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 308
9998 run: address to copy to is 1632
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1632
9999 mem: storing 7 in location 1633
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 308
9999 mem: storing 309 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 309
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 309
9998 run: address to copy to is 1634
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1634
9999 mem: storing 7 in location 1635
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 309
9999 mem: storing 310 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 310
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 310
9998 run: address to copy to is 1636
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1636
9999 mem: storing 7 in location 1637
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 310
9999 mem: storing 311 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 311
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 311
9998 run: address to copy to is 1638
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1638
9999 mem: storing 7 in location 1639
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 311
9999 mem: storing 312 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 312
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 312
9998 run: address to copy to is 1640
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1640
9999 mem: storing 7 in location 1641
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 312
9999 mem: storing 313 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 313
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 313
9998 run: address to copy to is 1642
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1642
9999 mem: storing 7 in location 1643
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 313
9999 mem: storing 314 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 314
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 314
9998 run: address to copy to is 1644
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1644
9999 mem: storing 7 in location 1645
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 314
9999 mem: storing 315 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 315
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 315
9998 run: address to copy to is 1646
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1646
9999 mem: storing 7 in location 1647
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 315
9999 mem: storing 316 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 316
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 316
9998 run: address to copy to is 1648
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1648
9999 mem: storing 7 in location 1649
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 316
9999 mem: storing 317 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 317
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 317
9998 run: address to copy to is 1650
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1650
9999 mem: storing 7 in location 1651
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 317
9999 mem: storing 318 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 318
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 318
9998 run: address to copy to is 1652
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1652
9999 mem: storing 7 in location 1653
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 318
9999 mem: storing 319 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 319
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 319
9998 run: address to copy to is 1654
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1654
9999 mem: storing 7 in location 1655
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 319
9999 mem: storing 320 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 320
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 320
9998 run: address to copy to is 1656
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1656
9999 mem: storing 7 in location 1657
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 320
9999 mem: storing 321 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 321
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 321
9998 run: address to copy to is 1658
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1658
9999 mem: storing 7 in location 1659
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 321
9999 mem: storing 322 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 322
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 322
9998 run: address to copy to is 1660
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1660
9999 mem: storing 7 in location 1661
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 322
9999 mem: storing 323 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 323
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 323
9998 run: address to copy to is 1662
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1662
9999 mem: storing 7 in location 1663
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 323
9999 mem: storing 324 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 324
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 324
9998 run: address to copy to is 1664
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1664
9999 mem: storing 7 in location 1665
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 324
9999 mem: storing 325 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 325
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 325
9998 run: address to copy to is 1666
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1666
9999 mem: storing 7 in location 1667
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 325
9999 mem: storing 326 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 326
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 326
9998 run: address to copy to is 1668
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1668
9999 mem: storing 7 in location 1669
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 326
9999 mem: storing 327 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 327
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 327
9998 run: address to copy to is 1670
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1670
9999 mem: storing 7 in location 1671
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 327
9999 mem: storing 328 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 328
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 328
9998 run: address to copy to is 1672
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1672
9999 mem: storing 7 in location 1673
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 328
9999 mem: storing 329 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 329
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 329
9998 run: address to copy to is 1674
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1674
9999 mem: storing 7 in location 1675
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 329
9999 mem: storing 330 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 330
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
9990 schedule: clear-screen/new-fake-screen/scenario_making-a-move
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 330
9998 run: address to copy to is 1676
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1676
9999 mem: storing 7 in location 1677
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 330
9999 mem: storing 331 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 331
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 331
9998 run: address to copy to is 1678
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1678
9999 mem: storing 7 in location 1679
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 331
9999 mem: storing 332 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 332
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 332
9998 run: address to copy to is 1680
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1680
9999 mem: storing 7 in location 1681
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 332
9999 mem: storing 333 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 333
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 333
9998 run: address to copy to is 1682
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1682
9999 mem: storing 7 in location 1683
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 333
9999 mem: storing 334 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 334
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 334
9998 run: address to copy to is 1684
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1684
9999 mem: storing 7 in location 1685
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 334
9999 mem: storing 335 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 335
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 335
9998 run: address to copy to is 1686
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1686
9999 mem: storing 7 in location 1687
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 335
9999 mem: storing 336 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 336
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 336
9998 run: address to copy to is 1688
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1688
9999 mem: storing 7 in location 1689
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 336
9999 mem: storing 337 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 337
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 337
9998 run: address to copy to is 1690
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1690
9999 mem: storing 7 in location 1691
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 337
9999 mem: storing 338 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 338
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 338
9998 run: address to copy to is 1692
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1692
9999 mem: storing 7 in location 1693
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 338
9999 mem: storing 339 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 339
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 339
9998 run: address to copy to is 1694
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1694
9999 mem: storing 7 in location 1695
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 339
9999 mem: storing 340 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 340
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 340
9998 run: address to copy to is 1696
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1696
9999 mem: storing 7 in location 1697
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 340
9999 mem: storing 341 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 341
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 341
9998 run: address to copy to is 1698
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1698
9999 mem: storing 7 in location 1699
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 341
9999 mem: storing 342 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 342
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 342
9998 run: address to copy to is 1700
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1700
9999 mem: storing 7 in location 1701
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 342
9999 mem: storing 343 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 343
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 343
9998 run: address to copy to is 1702
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1702
9999 mem: storing 7 in location 1703
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 343
9999 mem: storing 344 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 344
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 344
9998 run: address to copy to is 1704
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1704
9999 mem: storing 7 in location 1705
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 344
9999 mem: storing 345 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 345
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 345
9998 run: address to copy to is 1706
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1706
9999 mem: storing 7 in location 1707
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 345
9999 mem: storing 346 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 346
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 346
9998 run: address to copy to is 1708
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1708
9999 mem: storing 7 in location 1709
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 346
9999 mem: storing 347 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 347
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 347
9998 run: address to copy to is 1710
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1710
9999 mem: storing 7 in location 1711
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 347
9999 mem: storing 348 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 348
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 348
9998 run: address to copy to is 1712
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1712
9999 mem: storing 7 in location 1713
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 348
9999 mem: storing 349 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 349
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 349
9998 run: address to copy to is 1714
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1714
9999 mem: storing 7 in location 1715
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 349
9999 mem: storing 350 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 350
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 350
9998 run: address to copy to is 1716
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1716
9999 mem: storing 7 in location 1717
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 350
9999 mem: storing 351 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 351
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 351
9998 run: address to copy to is 1718
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1718
9999 mem: storing 7 in location 1719
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 351
9999 mem: storing 352 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 352
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 352
9998 run: address to copy to is 1720
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1720
9999 mem: storing 7 in location 1721
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 352
9999 mem: storing 353 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 353
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 353
9998 run: address to copy to is 1722
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1722
9999 mem: storing 7 in location 1723
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 353
9999 mem: storing 354 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 354
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 354
9998 run: address to copy to is 1724
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1724
9999 mem: storing 7 in location 1725
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 354
9999 mem: storing 355 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 355
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 355
9998 run: address to copy to is 1726
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1726
9999 mem: storing 7 in location 1727
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 355
9999 mem: storing 356 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 356
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 356
9998 run: address to copy to is 1728
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1728
9999 mem: storing 7 in location 1729
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 356
9999 mem: storing 357 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 357
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 357
9998 run: address to copy to is 1730
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1730
9999 mem: storing 7 in location 1731
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 357
9999 mem: storing 358 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 358
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 358
9998 run: address to copy to is 1732
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1732
9999 mem: storing 7 in location 1733
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 358
9999 mem: storing 359 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 359
9999 mem: location 1741 is 360
9999 mem: storing 0 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1744
9999 mem: storing 7 in location 1745
 104 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1740 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1742 is 359
9998 run: address to copy to is 1734
9999 mem: location 1744 is 0
9999 mem: location 1745 is 7
9999 mem: storing 0 in location 1734
9999 mem: storing 7 in location 1735
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1742 is 359
9999 mem: storing 360 in location 1742
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1742 is 360
9999 mem: location 1741 is 360
9999 mem: storing 1 in location 1743
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1743 is 1
9998 run: jumping to instruction 14
 104 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {0: "literal"}
9999 mem: location 1739 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1739 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 0 in location 1011
 104 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {0: "literal"}
9999 mem: location 1739 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1739 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 104 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1739 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1008
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 1008 in location 1005
 103 run: reply {result: ("address" "screen")}
9999 mem: location 1005 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 2
9998 run: result 0 is 1008
9999 mem: incrementing refcount of 1008: 2 -> 3
9999 mem: storing 1008 in location 900
 102 run: run {"\n    2:address:array:address:array:character/board <- initial-position\n    3:address:move <- new move:type\n    *3:address:move <- merge 6/g, 1/'2', 6/g, 3/'4'\n    2:address:array:address:array:character/board <- make-move 2:address:array:address:array:character/board, 3:address:move\n    screen:address:screen <- print-board screen:address:screen, 2:address:array:address:array:character/board\n  ": "literal-string"}
9991 parse: --- defining run_1001
9993 parse: instruction: initial-position
9993 parse:   number of ingredients: 0
9993 parse:   product: {2: ("address" "array" "address" "array" "character"), "board": ()}
9992 load: after rewriting: {2: ("address" "array" "address" "array" "character"), "board": ()} <- initial-position 
9993 parse: instruction: new
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {move: "type"}
9993 parse:   product: {3: ("address" "move")}
9992 load: after rewriting: {3: ("address" "move")} <- new {move: "type"}
9993 parse: instruction: merge
9993 parse:   number of ingredients: 4
9993 parse:   ingredient: {6: "literal", "g": ()}
9993 parse:   ingredient: {1: "literal", "'2'": ()}
9993 parse:   ingredient: {6: "literal", "g": ()}
9993 parse:   ingredient: {3: "literal", "'4'": ()}
9993 parse:   product: {3: ("address" "move"), "lookup": ()}
9992 load: after rewriting: {3: ("address" "move"), "lookup": ()} <- merge {6: "literal", "g": ()}, {1: "literal", "'2'": ()}, {6: "literal", "g": ()}, {3: "literal", "'4'": ()}
9993 parse: instruction: make-move
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {2: ("address" "array" "address" "array" "character"), "board": ()}
9993 parse:   ingredient: {3: ("address" "move")}
9993 parse:   product: {2: ("address" "array" "address" "array" "character"), "board": ()}
9992 load: after rewriting: {2: ("address" "array" "address" "array" "character"), "board": ()} <- make-move {2: ("address" "array" "address" "array" "character"), "board": ()}, {3: ("address" "move")}
9993 parse: instruction: print-board
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {screen: ("address" "screen")}
9993 parse:   ingredient: {2: ("address" "array" "address" "array" "character"), "board": ()}
9993 parse:   product: {screen: ("address" "screen")}
9992 load: after rewriting: {screen: ("address" "screen")} <- print-board {screen: ("address" "screen")}, {2: ("address" "array" "address" "array" "character"), "board": ()}
9999 parse: recipe run_1001 has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe run_1001
9991 transform: --- rewrite 'stash' instructions in recipe run_1001
9991 transform: --- fill in reply ingredients from header for recipe run_1001
9991 transform: --- deduce types for recipe run_1001
9992 transform: screen => ("address" "screen")
9991 transform: --- check for invalid types in recipe run_1001
9991 transform: --- collect surrounding spaces for recipe run_1001
9991 transform: --- transform names for recipe run_1001
9991 transform: --- resolve ambiguous calls for recipe run_1001
9992 transform: instruction {2: ("address" "array" "address" "array" "character"), "board": ()} <- initial-position 
9992 transform: checking variant (strict) 0: recipe initial-position -> {board: ("address" "array" "address" "array" "character")}
9992 transform: instruction {2: ("address" "array" "address" "array" "character"), "board": ()} <- make-move {2: ("address" "array" "address" "array" "character"), "board": ()}, {3: ("address" "move")}
9992 transform: checking variant (strict) 0: recipe make-move {board: ("address" "array" "address" "array" "character")} {m: ("address" "move")} -> {board: ("address" "array" "address" "array" "character")}
9992 transform: instruction {screen: ("address" "screen")} <- print-board {screen: ("address" "screen")}, {2: ("address" "array" "address" "array" "character"), "board": ()}
9992 transform: checking variant (strict) 0: recipe print-board {screen: ("address" "screen")} {board: ("address" "array" "address" "array" "character")} -> {screen: ("address" "screen")}
9991 transform: --- compute instruction operations for recipe run_1001
9991 transform: --- transform braces for recipe run_1001
9992 transform: initial-position ...
9992 transform: new ...
9992 transform: merge ...
9992 transform: make-move ...
9992 transform: print-board ...
9992 transform:  ...
9991 transform: --- perform checks for recipe run_1001
9991 transform: --- type-check 'call' instructions inside recipe run_1001
9991 transform: --- type-check calls inside recipe run_1001
9991 transform: --- convert 'new' to 'allocate' for recipe run_1001
9992 new: size of "move" is 4
9991 transform: --- check types of reply instructions in recipe run_1001
9991 transform: --- type-check merge instructions in recipe run_1001
9999 transform: 0 vs 4
9999 transform: checking container {3: "move"} || {from-file: "number"} vs ingredient 0
9999 transform: 1 vs 4
9999 transform: checking container {3: "move"} || {from-rank: "number"} vs ingredient 1
9999 transform: 2 vs 4
9999 transform: checking container {3: "move"} || {to-file: "number"} vs ingredient 2
9999 transform: 3 vs 4
9999 transform: checking container {3: "move"} || {to-rank: "number"} vs ingredient 3
9991 transform: --- checking reply instructions against header for run_1001
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: {2: ("address" "array" "address" "array" "character"), "board": ()} <- initial-position 
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 mem: new alloc: 1746
9999 mem: storing 0 in location 1746
9999 mem: storing 0 in location 1747
9999 mem: storing 0 in location 1748
9999 mem: storing 0 in location 1749
9999 mem: storing 0 in location 1750
9999 mem: storing 3 in location 1747
 104 run: {initial-position: ("address" "array" "character")} <- new-array {82: "literal", "R": ()}, {80: "literal", "P": ()}, {32: "literal", "blank": ()}, {32: "literal", "blank": ()}, {32: "literal", "blank": ()}, {32: "literal", "blank": ()}, {112: "literal", "p": ()}, {114: "literal", "r": ()}, {78: "literal", "N": ()}, {80: "literal", "P": ()}, {32: "literal", "blank": ()}, {32: "literal", "blank": ()}, {32: "literal", "blank": ()}, {32: "literal", "blank": ()}, {112: "literal", "p": ()}, {110: "literal", "n": ()}, {66: "literal", "B": ()}, {80: "literal", "P": ()}, {32: "literal", "blank": ()}, {32: "literal", "blank": ()}, {32: "literal", "blank": ()}, {32: "literal", "blank": ()}, {112: "literal", "p": ()}, {98: "literal", "b": ()}, {81: "literal", "Q": ()}, {80: "literal", "P": ()}, {32: "literal", "blank": ()}, {32: "literal", "blank": ()}, {32: "literal", "blank": ()}, {32: "literal", "blank": ()}, {112: "literal", "p": ()}, {113: "literal", "q": ()}, {75: "literal", "K": ()}, {80: "literal", "P": ()}, {32: "literal", "blank": ()}, {32: "literal", "blank": ()}, {32: "literal", "blank": ()}, {32: "literal", "blank": ()}, {112: "literal", "p": ()}, {107: "literal", "k": ()}, {66: "literal", "B": ()}, {80: "literal", "P": ()}, {32: "literal", "blank": ()}, {32: "literal", "blank": ()}, {32: "literal", "blank": ()}, {32: "literal", "blank": ()}, {112: "literal", "p": ()}, {98: "literal", "b": ()}, {78: "literal", "N": ()}, {80: "literal", "P": ()}, {32: "literal", "blank": ()}, {32: "literal", "blank": ()}, {32: "literal", "blank": ()}, {32: "literal", "blank": ()}, {112: "literal", "p": ()}, {110: "literal", "n": ()}, {82: "literal", "R": ()}, {80: "literal", "P": ()}, {32: "literal", "blank": ()}, {32: "literal", "blank": ()}, {32: "literal", "blank": ()}, {32: "literal", "blank": ()}, {112: "literal", "p": ()}, {114: "literal", "r": ()}
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 mem: new alloc: 1751
9999 mem: storing 0 in location 1751
9999 mem: storing 0 in location 1752
9999 mem: storing 0 in location 1753
9999 mem: storing 0 in location 1754
9999 mem: storing 0 in location 1755
9999 mem: storing 0 in location 1756
9999 mem: storing 0 in location 1757
9999 mem: storing 0 in location 1758
9999 mem: storing 0 in location 1759
9999 mem: storing 7 in location 1752
 105 run: {capacity: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1754
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 82 in location 1755
9999 mem: storing 1 in location 1756
 105 run: jump-unless {exists?: "boolean"}, {: "offset"}
9999 mem: location 1756 is 1
9998 run: jump-unless fell through
 105 run: {capacity: "number"} <- add {capacity: "number"}, {1: "literal"}
9999 mem: location 1754 is 0
9999 mem: storing 1 in location 1754
 105 run: jump {: "offset"}
9998 run: jumping to instruction 3
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 80 in location 1755
9999 mem: storing 1 in location 1756
 105 run: jump-unless {exists?: "boolean"}, {: "offset"}
9999 mem: location 1756 is 1
9998 run: jump-unless fell through
 105 run: {capacity: "number"} <- add {capacity: "number"}, {1: "literal"}
9999 mem: location 1754 is 1
9999 mem: storing 2 in location 1754
 105 run: jump {: "offset"}
9998 run: jumping to instruction 3
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 32 in location 1755
9999 mem: storing 1 in location 1756
 105 run: jump-unless {exists?: "boolean"}, {: "offset"}
9999 mem: location 1756 is 1
9998 run: jump-unless fell through
 105 run: {capacity: "number"} <- add {capacity: "number"}, {1: "literal"}
9999 mem: location 1754 is 2
9999 mem: storing 3 in location 1754
 105 run: jump {: "offset"}
9998 run: jumping to instruction 3
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 32 in location 1755
9999 mem: storing 1 in location 1756
 105 run: jump-unless {exists?: "boolean"}, {: "offset"}
9999 mem: location 1756 is 1
9998 run: jump-unless fell through
 105 run: {capacity: "number"} <- add {capacity: "number"}, {1: "literal"}
9999 mem: location 1754 is 3
9999 mem: storing 4 in location 1754
 105 run: jump {: "offset"}
9998 run: jumping to instruction 3
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 32 in location 1755
9999 mem: storing 1 in location 1756
 105 run: jump-unless {exists?: "boolean"}, {: "offset"}
9999 mem: location 1756 is 1
9998 run: jump-unless fell through
 105 run: {capacity: "number"} <- add {capacity: "number"}, {1: "literal"}
9999 mem: location 1754 is 4
9999 mem: storing 5 in location 1754
 105 run: jump {: "offset"}
9998 run: jumping to instruction 3
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 32 in location 1755
9999 mem: storing 1 in location 1756
 105 run: jump-unless {exists?: "boolean"}, {: "offset"}
9999 mem: location 1756 is 1
9998 run: jump-unless fell through
 105 run: {capacity: "number"} <- add {capacity: "number"}, {1: "literal"}
9999 mem: location 1754 is 5
9999 mem: storing 6 in location 1754
 105 run: jump {: "offset"}
9998 run: jumping to instruction 3
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 112 in location 1755
9999 mem: storing 1 in location 1756
 105 run: jump-unless {exists?: "boolean"}, {: "offset"}
9999 mem: location 1756 is 1
9998 run: jump-unless fell through
 105 run: {capacity: "number"} <- add {capacity: "number"}, {1: "literal"}
9999 mem: location 1754 is 6
9999 mem: storing 7 in location 1754
 105 run: jump {: "offset"}
9998 run: jumping to instruction 3
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 114 in location 1755
9999 mem: storing 1 in location 1756
 105 run: jump-unless {exists?: "boolean"}, {: "offset"}
9999 mem: location 1756 is 1
9998 run: jump-unless fell through
 105 run: {capacity: "number"} <- add {capacity: "number"}, {1: "literal"}
9999 mem: location 1754 is 7
9999 mem: storing 8 in location 1754
 105 run: jump {: "offset"}
9998 run: jumping to instruction 3
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 78 in location 1755
9999 mem: storing 1 in location 1756
 105 run: jump-unless {exists?: "boolean"}, {: "offset"}
9999 mem: location 1756 is 1
9998 run: jump-unless fell through
 105 run: {capacity: "number"} <- add {capacity: "number"}, {1: "literal"}
9999 mem: location 1754 is 8
9999 mem: storing 9 in location 1754
 105 run: jump {: "offset"}
9998 run: jumping to instruction 3
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 80 in location 1755
9999 mem: storing 1 in location 1756
 105 run: jump-unless {exists?: "boolean"}, {: "offset"}
9999 mem: location 1756 is 1
9998 run: jump-unless fell through
 105 run: {capacity: "number"} <- add {capacity: "number"}, {1: "literal"}
9999 mem: location 1754 is 9
9999 mem: storing 10 in location 1754
 105 run: jump {: "offset"}
9998 run: jumping to instruction 3
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 32 in location 1755
9999 mem: storing 1 in location 1756
 105 run: jump-unless {exists?: "boolean"}, {: "offset"}
9999 mem: location 1756 is 1
9998 run: jump-unless fell through
 105 run: {capacity: "number"} <- add {capacity: "number"}, {1: "literal"}
9999 mem: location 1754 is 10
9999 mem: storing 11 in location 1754
 105 run: jump {: "offset"}
9998 run: jumping to instruction 3
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 32 in location 1755
9999 mem: storing 1 in location 1756
 105 run: jump-unless {exists?: "boolean"}, {: "offset"}
9999 mem: location 1756 is 1
9998 run: jump-unless fell through
 105 run: {capacity: "number"} <- add {capacity: "number"}, {1: "literal"}
9999 mem: location 1754 is 11
9999 mem: storing 12 in location 1754
 105 run: jump {: "offset"}
9998 run: jumping to instruction 3
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 32 in location 1755
9999 mem: storing 1 in location 1756
 105 run: jump-unless {exists?: "boolean"}, {: "offset"}
9999 mem: location 1756 is 1
9998 run: jump-unless fell through
 105 run: {capacity: "number"} <- add {capacity: "number"}, {1: "literal"}
9999 mem: location 1754 is 12
9999 mem: storing 13 in location 1754
 105 run: jump {: "offset"}
9998 run: jumping to instruction 3
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 32 in location 1755
9999 mem: storing 1 in location 1756
 105 run: jump-unless {exists?: "boolean"}, {: "offset"}
9999 mem: location 1756 is 1
9998 run: jump-unless fell through
 105 run: {capacity: "number"} <- add {capacity: "number"}, {1: "literal"}
9999 mem: location 1754 is 13
9999 mem: storing 14 in location 1754
 105 run: jump {: "offset"}
9998 run: jumping to instruction 3
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 112 in location 1755
9999 mem: storing 1 in location 1756
 105 run: jump-unless {exists?: "boolean"}, {: "offset"}
9999 mem: location 1756 is 1
9998 run: jump-unless fell through
 105 run: {capacity: "number"} <- add {capacity: "number"}, {1: "literal"}
9999 mem: location 1754 is 14
9999 mem: storing 15 in location 1754
 105 run: jump {: "offset"}
9998 run: jumping to instruction 3
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 110 in location 1755
9999 mem: storing 1 in location 1756
 105 run: jump-unless {exists?: "boolean"}, {: "offset"}
9999 mem: location 1756 is 1
9998 run: jump-unless fell through
 105 run: {capacity: "number"} <- add {capacity: "number"}, {1: "literal"}
9999 mem: location 1754 is 15
9999 mem: storing 16 in location 1754
 105 run: jump {: "offset"}
9998 run: jumping to instruction 3
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 66 in location 1755
9999 mem: storing 1 in location 1756
 105 run: jump-unless {exists?: "boolean"}, {: "offset"}
9999 mem: location 1756 is 1
9998 run: jump-unless fell through
 105 run: {capacity: "number"} <- add {capacity: "number"}, {1: "literal"}
9999 mem: location 1754 is 16
9999 mem: storing 17 in location 1754
 105 run: jump {: "offset"}
9998 run: jumping to instruction 3
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 80 in location 1755
9999 mem: storing 1 in location 1756
 105 run: jump-unless {exists?: "boolean"}, {: "offset"}
9999 mem: location 1756 is 1
9998 run: jump-unless fell through
 105 run: {capacity: "number"} <- add {capacity: "number"}, {1: "literal"}
9999 mem: location 1754 is 17
9999 mem: storing 18 in location 1754
 105 run: jump {: "offset"}
9998 run: jumping to instruction 3
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 32 in location 1755
9999 mem: storing 1 in location 1756
 105 run: jump-unless {exists?: "boolean"}, {: "offset"}
9999 mem: location 1756 is 1
9998 run: jump-unless fell through
 105 run: {capacity: "number"} <- add {capacity: "number"}, {1: "literal"}
9999 mem: location 1754 is 18
9999 mem: storing 19 in location 1754
 105 run: jump {: "offset"}
9998 run: jumping to instruction 3
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 32 in location 1755
9999 mem: storing 1 in location 1756
 105 run: jump-unless {exists?: "boolean"}, {: "offset"}
9999 mem: location 1756 is 1
9998 run: jump-unless fell through
 105 run: {capacity: "number"} <- add {capacity: "number"}, {1: "literal"}
9999 mem: location 1754 is 19
9999 mem: storing 20 in location 1754
 105 run: jump {: "offset"}
9998 run: jumping to instruction 3
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 32 in location 1755
9999 mem: storing 1 in location 1756
 105 run: jump-unless {exists?: "boolean"}, {: "offset"}
9999 mem: location 1756 is 1
9998 run: jump-unless fell through
 105 run: {capacity: "number"} <- add {capacity: "number"}, {1: "literal"}
9999 mem: location 1754 is 20
9999 mem: storing 21 in location 1754
 105 run: jump {: "offset"}
9998 run: jumping to instruction 3
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 32 in location 1755
9999 mem: storing 1 in location 1756
 105 run: jump-unless {exists?: "boolean"}, {: "offset"}
9999 mem: location 1756 is 1
9998 run: jump-unless fell through
 105 run: {capacity: "number"} <- add {capacity: "number"}, {1: "literal"}
9999 mem: location 1754 is 21
9999 mem: storing 22 in location 1754
 105 run: jump {: "offset"}
9998 run: jumping to instruction 3
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 112 in location 1755
9999 mem: storing 1 in location 1756
 105 run: jump-unless {exists?: "boolean"}, {: "offset"}
9999 mem: location 1756 is 1
9998 run: jump-unless fell through
 105 run: {capacity: "number"} <- add {capacity: "number"}, {1: "literal"}
9999 mem: location 1754 is 22
9999 mem: storing 23 in location 1754
 105 run: jump {: "offset"}
9998 run: jumping to instruction 3
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 98 in location 1755
9999 mem: storing 1 in location 1756
 105 run: jump-unless {exists?: "boolean"}, {: "offset"}
9999 mem: location 1756 is 1
9998 run: jump-unless fell through
 105 run: {capacity: "number"} <- add {capacity: "number"}, {1: "literal"}
9999 mem: location 1754 is 23
9999 mem: storing 24 in location 1754
 105 run: jump {: "offset"}
9998 run: jumping to instruction 3
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 81 in location 1755
9999 mem: storing 1 in location 1756
 105 run: jump-unless {exists?: "boolean"}, {: "offset"}
9999 mem: location 1756 is 1
9998 run: jump-unless fell through
 105 run: {capacity: "number"} <- add {capacity: "number"}, {1: "literal"}
9999 mem: location 1754 is 24
9999 mem: storing 25 in location 1754
 105 run: jump {: "offset"}
9998 run: jumping to instruction 3
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 80 in location 1755
9999 mem: storing 1 in location 1756
 105 run: jump-unless {exists?: "boolean"}, {: "offset"}
9999 mem: location 1756 is 1
9998 run: jump-unless fell through
 105 run: {capacity: "number"} <- add {capacity: "number"}, {1: "literal"}
9999 mem: location 1754 is 25
9999 mem: storing 26 in location 1754
 105 run: jump {: "offset"}
9998 run: jumping to instruction 3
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 32 in location 1755
9999 mem: storing 1 in location 1756
 105 run: jump-unless {exists?: "boolean"}, {: "offset"}
9999 mem: location 1756 is 1
9998 run: jump-unless fell through
 105 run: {capacity: "number"} <- add {capacity: "number"}, {1: "literal"}
9999 mem: location 1754 is 26
9999 mem: storing 27 in location 1754
 105 run: jump {: "offset"}
9998 run: jumping to instruction 3
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 32 in location 1755
9999 mem: storing 1 in location 1756
 105 run: jump-unless {exists?: "boolean"}, {: "offset"}
9999 mem: location 1756 is 1
9998 run: jump-unless fell through
 105 run: {capacity: "number"} <- add {capacity: "number"}, {1: "literal"}
9999 mem: location 1754 is 27
9999 mem: storing 28 in location 1754
 105 run: jump {: "offset"}
9998 run: jumping to instruction 3
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 32 in location 1755
9999 mem: storing 1 in location 1756
 105 run: jump-unless {exists?: "boolean"}, {: "offset"}
9999 mem: location 1756 is 1
9998 run: jump-unless fell through
 105 run: {capacity: "number"} <- add {capacity: "number"}, {1: "literal"}
9999 mem: location 1754 is 28
9999 mem: storing 29 in location 1754
 105 run: jump {: "offset"}
9998 run: jumping to instruction 3
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 32 in location 1755
9999 mem: storing 1 in location 1756
 105 run: jump-unless {exists?: "boolean"}, {: "offset"}
9999 mem: location 1756 is 1
9998 run: jump-unless fell through
 105 run: {capacity: "number"} <- add {capacity: "number"}, {1: "literal"}
9999 mem: location 1754 is 29
9999 mem: storing 30 in location 1754
 105 run: jump {: "offset"}
9998 run: jumping to instruction 3
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 112 in location 1755
9999 mem: storing 1 in location 1756
 105 run: jump-unless {exists?: "boolean"}, {: "offset"}
9999 mem: location 1756 is 1
9998 run: jump-unless fell through
 105 run: {capacity: "number"} <- add {capacity: "number"}, {1: "literal"}
9999 mem: location 1754 is 30
9999 mem: storing 31 in location 1754
 105 run: jump {: "offset"}
9998 run: jumping to instruction 3
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 113 in location 1755
9999 mem: storing 1 in location 1756
 105 run: jump-unless {exists?: "boolean"}, {: "offset"}
9999 mem: location 1756 is 1
9998 run: jump-unless fell through
 105 run: {capacity: "number"} <- add {capacity: "number"}, {1: "literal"}
9999 mem: location 1754 is 31
9999 mem: storing 32 in location 1754
 105 run: jump {: "offset"}
9998 run: jumping to instruction 3
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 75 in location 1755
9999 mem: storing 1 in location 1756
 105 run: jump-unless {exists?: "boolean"}, {: "offset"}
9999 mem: location 1756 is 1
9998 run: jump-unless fell through
 105 run: {capacity: "number"} <- add {capacity: "number"}, {1: "literal"}
9999 mem: location 1754 is 32
9999 mem: storing 33 in location 1754
 105 run: jump {: "offset"}
9998 run: jumping to instruction 3
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 80 in location 1755
9999 mem: storing 1 in location 1756
 105 run: jump-unless {exists?: "boolean"}, {: "offset"}
9999 mem: location 1756 is 1
9998 run: jump-unless fell through
 105 run: {capacity: "number"} <- add {capacity: "number"}, {1: "literal"}
9999 mem: location 1754 is 33
9999 mem: storing 34 in location 1754
 105 run: jump {: "offset"}
9998 run: jumping to instruction 3
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 32 in location 1755
9999 mem: storing 1 in location 1756
 105 run: jump-unless {exists?: "boolean"}, {: "offset"}
9999 mem: location 1756 is 1
9998 run: jump-unless fell through
 105 run: {capacity: "number"} <- add {capacity: "number"}, {1: "literal"}
9999 mem: location 1754 is 34
9999 mem: storing 35 in location 1754
 105 run: jump {: "offset"}
9998 run: jumping to instruction 3
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 32 in location 1755
9999 mem: storing 1 in location 1756
 105 run: jump-unless {exists?: "boolean"}, {: "offset"}
9999 mem: location 1756 is 1
9998 run: jump-unless fell through
 105 run: {capacity: "number"} <- add {capacity: "number"}, {1: "literal"}
9999 mem: location 1754 is 35
9999 mem: storing 36 in location 1754
 105 run: jump {: "offset"}
9998 run: jumping to instruction 3
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 32 in location 1755
9999 mem: storing 1 in location 1756
 105 run: jump-unless {exists?: "boolean"}, {: "offset"}
9999 mem: location 1756 is 1
9998 run: jump-unless fell through
 105 run: {capacity: "number"} <- add {capacity: "number"}, {1: "literal"}
9999 mem: location 1754 is 36
9999 mem: storing 37 in location 1754
 105 run: jump {: "offset"}
9998 run: jumping to instruction 3
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 32 in location 1755
9999 mem: storing 1 in location 1756
 105 run: jump-unless {exists?: "boolean"}, {: "offset"}
9999 mem: location 1756 is 1
9998 run: jump-unless fell through
 105 run: {capacity: "number"} <- add {capacity: "number"}, {1: "literal"}
9999 mem: location 1754 is 37
9999 mem: storing 38 in location 1754
 105 run: jump {: "offset"}
9998 run: jumping to instruction 3
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 112 in location 1755
9999 mem: storing 1 in location 1756
 105 run: jump-unless {exists?: "boolean"}, {: "offset"}
9999 mem: location 1756 is 1
9998 run: jump-unless fell through
 105 run: {capacity: "number"} <- add {capacity: "number"}, {1: "literal"}
9999 mem: location 1754 is 38
9999 mem: storing 39 in location 1754
 105 run: jump {: "offset"}
9998 run: jumping to instruction 3
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 107 in location 1755
9999 mem: storing 1 in location 1756
 105 run: jump-unless {exists?: "boolean"}, {: "offset"}
9999 mem: location 1756 is 1
9998 run: jump-unless fell through
 105 run: {capacity: "number"} <- add {capacity: "number"}, {1: "literal"}
9999 mem: location 1754 is 39
9999 mem: storing 40 in location 1754
 105 run: jump {: "offset"}
9998 run: jumping to instruction 3
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 66 in location 1755
9999 mem: storing 1 in location 1756
 105 run: jump-unless {exists?: "boolean"}, {: "offset"}
9999 mem: location 1756 is 1
9998 run: jump-unless fell through
 105 run: {capacity: "number"} <- add {capacity: "number"}, {1: "literal"}
9999 mem: location 1754 is 40
9999 mem: storing 41 in location 1754
 105 run: jump {: "offset"}
9998 run: jumping to instruction 3
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 80 in location 1755
9999 mem: storing 1 in location 1756
 105 run: jump-unless {exists?: "boolean"}, {: "offset"}
9999 mem: location 1756 is 1
9998 run: jump-unless fell through
 105 run: {capacity: "number"} <- add {capacity: "number"}, {1: "literal"}
9999 mem: location 1754 is 41
9999 mem: storing 42 in location 1754
 105 run: jump {: "offset"}
9998 run: jumping to instruction 3
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 32 in location 1755
9999 mem: storing 1 in location 1756
 105 run: jump-unless {exists?: "boolean"}, {: "offset"}
9999 mem: location 1756 is 1
9998 run: jump-unless fell through
 105 run: {capacity: "number"} <- add {capacity: "number"}, {1: "literal"}
9999 mem: location 1754 is 42
9999 mem: storing 43 in location 1754
 105 run: jump {: "offset"}
9998 run: jumping to instruction 3
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 32 in location 1755
9999 mem: storing 1 in location 1756
 105 run: jump-unless {exists?: "boolean"}, {: "offset"}
9999 mem: location 1756 is 1
9998 run: jump-unless fell through
 105 run: {capacity: "number"} <- add {capacity: "number"}, {1: "literal"}
9999 mem: location 1754 is 43
9999 mem: storing 44 in location 1754
 105 run: jump {: "offset"}
9998 run: jumping to instruction 3
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 32 in location 1755
9999 mem: storing 1 in location 1756
 105 run: jump-unless {exists?: "boolean"}, {: "offset"}
9999 mem: location 1756 is 1
9998 run: jump-unless fell through
 105 run: {capacity: "number"} <- add {capacity: "number"}, {1: "literal"}
9999 mem: location 1754 is 44
9999 mem: storing 45 in location 1754
 105 run: jump {: "offset"}
9998 run: jumping to instruction 3
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 32 in location 1755
9999 mem: storing 1 in location 1756
 105 run: jump-unless {exists?: "boolean"}, {: "offset"}
9999 mem: location 1756 is 1
9998 run: jump-unless fell through
 105 run: {capacity: "number"} <- add {capacity: "number"}, {1: "literal"}
9999 mem: location 1754 is 45
9999 mem: storing 46 in location 1754
 105 run: jump {: "offset"}
9998 run: jumping to instruction 3
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 112 in location 1755
9999 mem: storing 1 in location 1756
 105 run: jump-unless {exists?: "boolean"}, {: "offset"}
9999 mem: location 1756 is 1
9998 run: jump-unless fell through
 105 run: {capacity: "number"} <- add {capacity: "number"}, {1: "literal"}
9999 mem: location 1754 is 46
9999 mem: storing 47 in location 1754
 105 run: jump {: "offset"}
9998 run: jumping to instruction 3
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 98 in location 1755
9999 mem: storing 1 in location 1756
 105 run: jump-unless {exists?: "boolean"}, {: "offset"}
9999 mem: location 1756 is 1
9998 run: jump-unless fell through
 105 run: {capacity: "number"} <- add {capacity: "number"}, {1: "literal"}
9999 mem: location 1754 is 47
9999 mem: storing 48 in location 1754
 105 run: jump {: "offset"}
9998 run: jumping to instruction 3
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 78 in location 1755
9999 mem: storing 1 in location 1756
 105 run: jump-unless {exists?: "boolean"}, {: "offset"}
9999 mem: location 1756 is 1
9998 run: jump-unless fell through
 105 run: {capacity: "number"} <- add {capacity: "number"}, {1: "literal"}
9999 mem: location 1754 is 48
9999 mem: storing 49 in location 1754
 105 run: jump {: "offset"}
9998 run: jumping to instruction 3
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 80 in location 1755
9999 mem: storing 1 in location 1756
 105 run: jump-unless {exists?: "boolean"}, {: "offset"}
9999 mem: location 1756 is 1
9998 run: jump-unless fell through
 105 run: {capacity: "number"} <- add {capacity: "number"}, {1: "literal"}
9999 mem: location 1754 is 49
9999 mem: storing 50 in location 1754
 105 run: jump {: "offset"}
9998 run: jumping to instruction 3
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 32 in location 1755
9999 mem: storing 1 in location 1756
 105 run: jump-unless {exists?: "boolean"}, {: "offset"}
9999 mem: location 1756 is 1
9998 run: jump-unless fell through
 105 run: {capacity: "number"} <- add {capacity: "number"}, {1: "literal"}
9999 mem: location 1754 is 50
9999 mem: storing 51 in location 1754
 105 run: jump {: "offset"}
9998 run: jumping to instruction 3
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 32 in location 1755
9999 mem: storing 1 in location 1756
 105 run: jump-unless {exists?: "boolean"}, {: "offset"}
9999 mem: location 1756 is 1
9998 run: jump-unless fell through
 105 run: {capacity: "number"} <- add {capacity: "number"}, {1: "literal"}
9999 mem: location 1754 is 51
9999 mem: storing 52 in location 1754
 105 run: jump {: "offset"}
9998 run: jumping to instruction 3
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 32 in location 1755
9999 mem: storing 1 in location 1756
 105 run: jump-unless {exists?: "boolean"}, {: "offset"}
9999 mem: location 1756 is 1
9998 run: jump-unless fell through
 105 run: {capacity: "number"} <- add {capacity: "number"}, {1: "literal"}
9999 mem: location 1754 is 52
9999 mem: storing 53 in location 1754
 105 run: jump {: "offset"}
9998 run: jumping to instruction 3
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 32 in location 1755
9999 mem: storing 1 in location 1756
 105 run: jump-unless {exists?: "boolean"}, {: "offset"}
9999 mem: location 1756 is 1
9998 run: jump-unless fell through
 105 run: {capacity: "number"} <- add {capacity: "number"}, {1: "literal"}
9999 mem: location 1754 is 53
9999 mem: storing 54 in location 1754
 105 run: jump {: "offset"}
9998 run: jumping to instruction 3
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 112 in location 1755
9999 mem: storing 1 in location 1756
 105 run: jump-unless {exists?: "boolean"}, {: "offset"}
9999 mem: location 1756 is 1
9998 run: jump-unless fell through
 105 run: {capacity: "number"} <- add {capacity: "number"}, {1: "literal"}
9999 mem: location 1754 is 54
9999 mem: storing 55 in location 1754
 105 run: jump {: "offset"}
9998 run: jumping to instruction 3
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 110 in location 1755
9999 mem: storing 1 in location 1756
 105 run: jump-unless {exists?: "boolean"}, {: "offset"}
9999 mem: location 1756 is 1
9998 run: jump-unless fell through
 105 run: {capacity: "number"} <- add {capacity: "number"}, {1: "literal"}
9999 mem: location 1754 is 55
9999 mem: storing 56 in location 1754
 105 run: jump {: "offset"}
9998 run: jumping to instruction 3
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 82 in location 1755
9999 mem: storing 1 in location 1756
 105 run: jump-unless {exists?: "boolean"}, {: "offset"}
9999 mem: location 1756 is 1
9998 run: jump-unless fell through
 105 run: {capacity: "number"} <- add {capacity: "number"}, {1: "literal"}
9999 mem: location 1754 is 56
9999 mem: storing 57 in location 1754
 105 run: jump {: "offset"}
9998 run: jumping to instruction 3
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 80 in location 1755
9999 mem: storing 1 in location 1756
 105 run: jump-unless {exists?: "boolean"}, {: "offset"}
9999 mem: location 1756 is 1
9998 run: jump-unless fell through
 105 run: {capacity: "number"} <- add {capacity: "number"}, {1: "literal"}
9999 mem: location 1754 is 57
9999 mem: storing 58 in location 1754
 105 run: jump {: "offset"}
9998 run: jumping to instruction 3
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 32 in location 1755
9999 mem: storing 1 in location 1756
 105 run: jump-unless {exists?: "boolean"}, {: "offset"}
9999 mem: location 1756 is 1
9998 run: jump-unless fell through
 105 run: {capacity: "number"} <- add {capacity: "number"}, {1: "literal"}
9999 mem: location 1754 is 58
9999 mem: storing 59 in location 1754
 105 run: jump {: "offset"}
9998 run: jumping to instruction 3
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 32 in location 1755
9999 mem: storing 1 in location 1756
 105 run: jump-unless {exists?: "boolean"}, {: "offset"}
9999 mem: location 1756 is 1
9998 run: jump-unless fell through
 105 run: {capacity: "number"} <- add {capacity: "number"}, {1: "literal"}
9999 mem: location 1754 is 59
9999 mem: storing 60 in location 1754
 105 run: jump {: "offset"}
9998 run: jumping to instruction 3
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 32 in location 1755
9999 mem: storing 1 in location 1756
 105 run: jump-unless {exists?: "boolean"}, {: "offset"}
9999 mem: location 1756 is 1
9998 run: jump-unless fell through
 105 run: {capacity: "number"} <- add {capacity: "number"}, {1: "literal"}
9999 mem: location 1754 is 60
9999 mem: storing 61 in location 1754
 105 run: jump {: "offset"}
9998 run: jumping to instruction 3
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 32 in location 1755
9999 mem: storing 1 in location 1756
 105 run: jump-unless {exists?: "boolean"}, {: "offset"}
9999 mem: location 1756 is 1
9998 run: jump-unless fell through
 105 run: {capacity: "number"} <- add {capacity: "number"}, {1: "literal"}
9999 mem: location 1754 is 61
9999 mem: storing 62 in location 1754
 105 run: jump {: "offset"}
9998 run: jumping to instruction 3
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 112 in location 1755
9999 mem: storing 1 in location 1756
 105 run: jump-unless {exists?: "boolean"}, {: "offset"}
9999 mem: location 1756 is 1
9998 run: jump-unless fell through
 105 run: {capacity: "number"} <- add {capacity: "number"}, {1: "literal"}
9999 mem: location 1754 is 62
9999 mem: storing 63 in location 1754
 105 run: jump {: "offset"}
9998 run: jumping to instruction 3
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 114 in location 1755
9999 mem: storing 1 in location 1756
 105 run: jump-unless {exists?: "boolean"}, {: "offset"}
9999 mem: location 1756 is 1
9998 run: jump-unless fell through
 105 run: {capacity: "number"} <- add {capacity: "number"}, {1: "literal"}
9999 mem: location 1754 is 63
9999 mem: storing 64 in location 1754
 105 run: jump {: "offset"}
9998 run: jumping to instruction 3
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1755
9999 mem: storing 0 in location 1756
 105 run: jump-unless {exists?: "boolean"}, {: "offset"}
9999 mem: location 1756 is 0
9998 run: jumping to instruction 7
 105 run: {result: ("address" "array" "character")} <- new {character: "type"}, {capacity: "number"}
9999 mem: location 1754 is 64
9999 mem: array size is 64
9999 mem: allocating size 66
9999 mem: new alloc: 1760
9999 mem: storing 0 in location 1760
9999 mem: storing 0 in location 1761
9999 mem: storing 0 in location 1762
9999 mem: storing 0 in location 1763
9999 mem: storing 0 in location 1764
9999 mem: storing 0 in location 1765
9999 mem: storing 0 in location 1766
9999 mem: storing 0 in location 1767
9999 mem: storing 0 in location 1768
9999 mem: storing 0 in location 1769
9999 mem: storing 0 in location 1770
9999 mem: storing 0 in location 1771
9999 mem: storing 0 in location 1772
9999 mem: storing 0 in location 1773
9999 mem: storing 0 in location 1774
9999 mem: storing 0 in location 1775
9999 mem: storing 0 in location 1776
9999 mem: storing 0 in location 1777
9999 mem: storing 0 in location 1778
9999 mem: storing 0 in location 1779
9999 mem: storing 0 in location 1780
9999 mem: storing 0 in location 1781
9999 mem: storing 0 in location 1782
9999 mem: storing 0 in location 1783
9999 mem: storing 0 in location 1784
9999 mem: storing 0 in location 1785
9999 mem: storing 0 in location 1786
9999 mem: storing 0 in location 1787
9999 mem: storing 0 in location 1788
9999 mem: storing 0 in location 1789
9999 mem: storing 0 in location 1790
9999 mem: storing 0 in location 1791
9999 mem: storing 0 in location 1792
9999 mem: storing 0 in location 1793
9999 mem: storing 0 in location 1794
9999 mem: storing 0 in location 1795
9999 mem: storing 0 in location 1796
9999 mem: storing 0 in location 1797
9999 mem: storing 0 in location 1798
9999 mem: storing 0 in location 1799
9999 mem: storing 0 in location 1800
9999 mem: storing 0 in location 1801
9999 mem: storing 0 in location 1802
9999 mem: storing 0 in location 1803
9999 mem: storing 0 in location 1804
9999 mem: storing 0 in location 1805
9999 mem: storing 0 in location 1806
9999 mem: storing 0 in location 1807
9999 mem: storing 0 in location 1808
9999 mem: storing 0 in location 1809
9999 mem: storing 0 in location 1810
9999 mem: storing 0 in location 1811
9999 mem: storing 0 in location 1812
9999 mem: storing 0 in location 1813
9999 mem: storing 0 in location 1814
9999 mem: storing 0 in location 1815
9999 mem: storing 0 in location 1816
9999 mem: storing 0 in location 1817
9999 mem: storing 0 in location 1818
9999 mem: storing 0 in location 1819
9999 mem: storing 0 in location 1820
9999 mem: storing 0 in location 1821
9999 mem: storing 0 in location 1822
9999 mem: storing 0 in location 1823
9999 mem: storing 0 in location 1824
9999 mem: storing 0 in location 1825
9999 mem: storing 64 in location 1761
9999 mem: incrementing refcount of 1760: 0 -> 1
9999 mem: storing 1760 in location 1757
 105 run: rewind-ingredients 
 105 run: {i: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1758
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {capacity: "number"}
9999 mem: location 1758 is 0
9999 mem: location 1754 is 64
9999 mem: storing 0 in location 1759
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1759 is 0
9998 run: jump-if fell through
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 82 in location 1755
9999 mem: storing 1 in location 1756
 105 run: assert {exists?: "boolean"}, {"error in rewinding ingredients to new-array": "literal-string"}
9999 mem: location 1756 is 1
 105 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {i: "number"}, {curr-value: "character"}
9999 mem: location 1757 is 1760
9999 mem: skipping refcount at 1760
9999 mem: location 1758 is 0
9998 run: address to copy to is 1762
9999 mem: location 1755 is 82
9999 mem: storing 82 in location 1762
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1758 is 0
9999 mem: storing 1 in location 1758
 105 run: jump {: "offset"}
9998 run: jumping to instruction 12
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {capacity: "number"}
9999 mem: location 1758 is 1
9999 mem: location 1754 is 64
9999 mem: storing 0 in location 1759
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1759 is 0
9998 run: jump-if fell through
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 80 in location 1755
9999 mem: storing 1 in location 1756
 105 run: assert {exists?: "boolean"}, {"error in rewinding ingredients to new-array": "literal-string"}
9999 mem: location 1756 is 1
 105 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {i: "number"}, {curr-value: "character"}
9999 mem: location 1757 is 1760
9999 mem: skipping refcount at 1760
9999 mem: location 1758 is 1
9998 run: address to copy to is 1763
9999 mem: location 1755 is 80
9999 mem: storing 80 in location 1763
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1758 is 1
9999 mem: storing 2 in location 1758
 105 run: jump {: "offset"}
9998 run: jumping to instruction 12
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {capacity: "number"}
9999 mem: location 1758 is 2
9999 mem: location 1754 is 64
9999 mem: storing 0 in location 1759
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1759 is 0
9998 run: jump-if fell through
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 32 in location 1755
9999 mem: storing 1 in location 1756
 105 run: assert {exists?: "boolean"}, {"error in rewinding ingredients to new-array": "literal-string"}
9999 mem: location 1756 is 1
 105 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {i: "number"}, {curr-value: "character"}
9999 mem: location 1757 is 1760
9999 mem: skipping refcount at 1760
9999 mem: location 1758 is 2
9998 run: address to copy to is 1764
9999 mem: location 1755 is 32
9999 mem: storing 32 in location 1764
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1758 is 2
9999 mem: storing 3 in location 1758
 105 run: jump {: "offset"}
9998 run: jumping to instruction 12
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {capacity: "number"}
9999 mem: location 1758 is 3
9999 mem: location 1754 is 64
9999 mem: storing 0 in location 1759
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1759 is 0
9998 run: jump-if fell through
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 32 in location 1755
9999 mem: storing 1 in location 1756
 105 run: assert {exists?: "boolean"}, {"error in rewinding ingredients to new-array": "literal-string"}
9999 mem: location 1756 is 1
 105 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {i: "number"}, {curr-value: "character"}
9999 mem: location 1757 is 1760
9999 mem: skipping refcount at 1760
9999 mem: location 1758 is 3
9998 run: address to copy to is 1765
9999 mem: location 1755 is 32
9999 mem: storing 32 in location 1765
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1758 is 3
9999 mem: storing 4 in location 1758
 105 run: jump {: "offset"}
9998 run: jumping to instruction 12
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {capacity: "number"}
9999 mem: location 1758 is 4
9999 mem: location 1754 is 64
9999 mem: storing 0 in location 1759
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1759 is 0
9998 run: jump-if fell through
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 32 in location 1755
9999 mem: storing 1 in location 1756
 105 run: assert {exists?: "boolean"}, {"error in rewinding ingredients to new-array": "literal-string"}
9999 mem: location 1756 is 1
 105 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {i: "number"}, {curr-value: "character"}
9999 mem: location 1757 is 1760
9999 mem: skipping refcount at 1760
9999 mem: location 1758 is 4
9998 run: address to copy to is 1766
9999 mem: location 1755 is 32
9999 mem: storing 32 in location 1766
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1758 is 4
9999 mem: storing 5 in location 1758
 105 run: jump {: "offset"}
9998 run: jumping to instruction 12
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {capacity: "number"}
9999 mem: location 1758 is 5
9999 mem: location 1754 is 64
9999 mem: storing 0 in location 1759
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1759 is 0
9998 run: jump-if fell through
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 32 in location 1755
9999 mem: storing 1 in location 1756
 105 run: assert {exists?: "boolean"}, {"error in rewinding ingredients to new-array": "literal-string"}
9999 mem: location 1756 is 1
 105 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {i: "number"}, {curr-value: "character"}
9999 mem: location 1757 is 1760
9999 mem: skipping refcount at 1760
9999 mem: location 1758 is 5
9998 run: address to copy to is 1767
9999 mem: location 1755 is 32
9999 mem: storing 32 in location 1767
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1758 is 5
9999 mem: storing 6 in location 1758
 105 run: jump {: "offset"}
9998 run: jumping to instruction 12
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {capacity: "number"}
9999 mem: location 1758 is 6
9999 mem: location 1754 is 64
9999 mem: storing 0 in location 1759
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1759 is 0
9998 run: jump-if fell through
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 112 in location 1755
9999 mem: storing 1 in location 1756
 105 run: assert {exists?: "boolean"}, {"error in rewinding ingredients to new-array": "literal-string"}
9999 mem: location 1756 is 1
9990 schedule: new-array/initial-position/run_1001/scenario_making-a-move
 105 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {i: "number"}, {curr-value: "character"}
9999 mem: location 1757 is 1760
9999 mem: skipping refcount at 1760
9999 mem: location 1758 is 6
9998 run: address to copy to is 1768
9999 mem: location 1755 is 112
9999 mem: storing 112 in location 1768
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1758 is 6
9999 mem: storing 7 in location 1758
 105 run: jump {: "offset"}
9998 run: jumping to instruction 12
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {capacity: "number"}
9999 mem: location 1758 is 7
9999 mem: location 1754 is 64
9999 mem: storing 0 in location 1759
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1759 is 0
9998 run: jump-if fell through
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 114 in location 1755
9999 mem: storing 1 in location 1756
 105 run: assert {exists?: "boolean"}, {"error in rewinding ingredients to new-array": "literal-string"}
9999 mem: location 1756 is 1
 105 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {i: "number"}, {curr-value: "character"}
9999 mem: location 1757 is 1760
9999 mem: skipping refcount at 1760
9999 mem: location 1758 is 7
9998 run: address to copy to is 1769
9999 mem: location 1755 is 114
9999 mem: storing 114 in location 1769
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1758 is 7
9999 mem: storing 8 in location 1758
 105 run: jump {: "offset"}
9998 run: jumping to instruction 12
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {capacity: "number"}
9999 mem: location 1758 is 8
9999 mem: location 1754 is 64
9999 mem: storing 0 in location 1759
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1759 is 0
9998 run: jump-if fell through
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 78 in location 1755
9999 mem: storing 1 in location 1756
 105 run: assert {exists?: "boolean"}, {"error in rewinding ingredients to new-array": "literal-string"}
9999 mem: location 1756 is 1
 105 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {i: "number"}, {curr-value: "character"}
9999 mem: location 1757 is 1760
9999 mem: skipping refcount at 1760
9999 mem: location 1758 is 8
9998 run: address to copy to is 1770
9999 mem: location 1755 is 78
9999 mem: storing 78 in location 1770
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1758 is 8
9999 mem: storing 9 in location 1758
 105 run: jump {: "offset"}
9998 run: jumping to instruction 12
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {capacity: "number"}
9999 mem: location 1758 is 9
9999 mem: location 1754 is 64
9999 mem: storing 0 in location 1759
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1759 is 0
9998 run: jump-if fell through
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 80 in location 1755
9999 mem: storing 1 in location 1756
 105 run: assert {exists?: "boolean"}, {"error in rewinding ingredients to new-array": "literal-string"}
9999 mem: location 1756 is 1
 105 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {i: "number"}, {curr-value: "character"}
9999 mem: location 1757 is 1760
9999 mem: skipping refcount at 1760
9999 mem: location 1758 is 9
9998 run: address to copy to is 1771
9999 mem: location 1755 is 80
9999 mem: storing 80 in location 1771
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1758 is 9
9999 mem: storing 10 in location 1758
 105 run: jump {: "offset"}
9998 run: jumping to instruction 12
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {capacity: "number"}
9999 mem: location 1758 is 10
9999 mem: location 1754 is 64
9999 mem: storing 0 in location 1759
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1759 is 0
9998 run: jump-if fell through
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 32 in location 1755
9999 mem: storing 1 in location 1756
 105 run: assert {exists?: "boolean"}, {"error in rewinding ingredients to new-array": "literal-string"}
9999 mem: location 1756 is 1
 105 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {i: "number"}, {curr-value: "character"}
9999 mem: location 1757 is 1760
9999 mem: skipping refcount at 1760
9999 mem: location 1758 is 10
9998 run: address to copy to is 1772
9999 mem: location 1755 is 32
9999 mem: storing 32 in location 1772
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1758 is 10
9999 mem: storing 11 in location 1758
 105 run: jump {: "offset"}
9998 run: jumping to instruction 12
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {capacity: "number"}
9999 mem: location 1758 is 11
9999 mem: location 1754 is 64
9999 mem: storing 0 in location 1759
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1759 is 0
9998 run: jump-if fell through
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 32 in location 1755
9999 mem: storing 1 in location 1756
 105 run: assert {exists?: "boolean"}, {"error in rewinding ingredients to new-array": "literal-string"}
9999 mem: location 1756 is 1
 105 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {i: "number"}, {curr-value: "character"}
9999 mem: location 1757 is 1760
9999 mem: skipping refcount at 1760
9999 mem: location 1758 is 11
9998 run: address to copy to is 1773
9999 mem: location 1755 is 32
9999 mem: storing 32 in location 1773
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1758 is 11
9999 mem: storing 12 in location 1758
 105 run: jump {: "offset"}
9998 run: jumping to instruction 12
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {capacity: "number"}
9999 mem: location 1758 is 12
9999 mem: location 1754 is 64
9999 mem: storing 0 in location 1759
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1759 is 0
9998 run: jump-if fell through
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 32 in location 1755
9999 mem: storing 1 in location 1756
 105 run: assert {exists?: "boolean"}, {"error in rewinding ingredients to new-array": "literal-string"}
9999 mem: location 1756 is 1
 105 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {i: "number"}, {curr-value: "character"}
9999 mem: location 1757 is 1760
9999 mem: skipping refcount at 1760
9999 mem: location 1758 is 12
9998 run: address to copy to is 1774
9999 mem: location 1755 is 32
9999 mem: storing 32 in location 1774
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1758 is 12
9999 mem: storing 13 in location 1758
 105 run: jump {: "offset"}
9998 run: jumping to instruction 12
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {capacity: "number"}
9999 mem: location 1758 is 13
9999 mem: location 1754 is 64
9999 mem: storing 0 in location 1759
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1759 is 0
9998 run: jump-if fell through
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 32 in location 1755
9999 mem: storing 1 in location 1756
 105 run: assert {exists?: "boolean"}, {"error in rewinding ingredients to new-array": "literal-string"}
9999 mem: location 1756 is 1
 105 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {i: "number"}, {curr-value: "character"}
9999 mem: location 1757 is 1760
9999 mem: skipping refcount at 1760
9999 mem: location 1758 is 13
9998 run: address to copy to is 1775
9999 mem: location 1755 is 32
9999 mem: storing 32 in location 1775
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1758 is 13
9999 mem: storing 14 in location 1758
 105 run: jump {: "offset"}
9998 run: jumping to instruction 12
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {capacity: "number"}
9999 mem: location 1758 is 14
9999 mem: location 1754 is 64
9999 mem: storing 0 in location 1759
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1759 is 0
9998 run: jump-if fell through
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 112 in location 1755
9999 mem: storing 1 in location 1756
 105 run: assert {exists?: "boolean"}, {"error in rewinding ingredients to new-array": "literal-string"}
9999 mem: location 1756 is 1
 105 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {i: "number"}, {curr-value: "character"}
9999 mem: location 1757 is 1760
9999 mem: skipping refcount at 1760
9999 mem: location 1758 is 14
9998 run: address to copy to is 1776
9999 mem: location 1755 is 112
9999 mem: storing 112 in location 1776
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1758 is 14
9999 mem: storing 15 in location 1758
 105 run: jump {: "offset"}
9998 run: jumping to instruction 12
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {capacity: "number"}
9999 mem: location 1758 is 15
9999 mem: location 1754 is 64
9999 mem: storing 0 in location 1759
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1759 is 0
9998 run: jump-if fell through
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 110 in location 1755
9999 mem: storing 1 in location 1756
 105 run: assert {exists?: "boolean"}, {"error in rewinding ingredients to new-array": "literal-string"}
9999 mem: location 1756 is 1
 105 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {i: "number"}, {curr-value: "character"}
9999 mem: location 1757 is 1760
9999 mem: skipping refcount at 1760
9999 mem: location 1758 is 15
9998 run: address to copy to is 1777
9999 mem: location 1755 is 110
9999 mem: storing 110 in location 1777
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1758 is 15
9999 mem: storing 16 in location 1758
 105 run: jump {: "offset"}
9998 run: jumping to instruction 12
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {capacity: "number"}
9999 mem: location 1758 is 16
9999 mem: location 1754 is 64
9999 mem: storing 0 in location 1759
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1759 is 0
9998 run: jump-if fell through
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 66 in location 1755
9999 mem: storing 1 in location 1756
 105 run: assert {exists?: "boolean"}, {"error in rewinding ingredients to new-array": "literal-string"}
9999 mem: location 1756 is 1
 105 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {i: "number"}, {curr-value: "character"}
9999 mem: location 1757 is 1760
9999 mem: skipping refcount at 1760
9999 mem: location 1758 is 16
9998 run: address to copy to is 1778
9999 mem: location 1755 is 66
9999 mem: storing 66 in location 1778
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1758 is 16
9999 mem: storing 17 in location 1758
 105 run: jump {: "offset"}
9998 run: jumping to instruction 12
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {capacity: "number"}
9999 mem: location 1758 is 17
9999 mem: location 1754 is 64
9999 mem: storing 0 in location 1759
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1759 is 0
9998 run: jump-if fell through
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 80 in location 1755
9999 mem: storing 1 in location 1756
 105 run: assert {exists?: "boolean"}, {"error in rewinding ingredients to new-array": "literal-string"}
9999 mem: location 1756 is 1
 105 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {i: "number"}, {curr-value: "character"}
9999 mem: location 1757 is 1760
9999 mem: skipping refcount at 1760
9999 mem: location 1758 is 17
9998 run: address to copy to is 1779
9999 mem: location 1755 is 80
9999 mem: storing 80 in location 1779
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1758 is 17
9999 mem: storing 18 in location 1758
 105 run: jump {: "offset"}
9998 run: jumping to instruction 12
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {capacity: "number"}
9999 mem: location 1758 is 18
9999 mem: location 1754 is 64
9999 mem: storing 0 in location 1759
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1759 is 0
9998 run: jump-if fell through
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 32 in location 1755
9999 mem: storing 1 in location 1756
 105 run: assert {exists?: "boolean"}, {"error in rewinding ingredients to new-array": "literal-string"}
9999 mem: location 1756 is 1
 105 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {i: "number"}, {curr-value: "character"}
9999 mem: location 1757 is 1760
9999 mem: skipping refcount at 1760
9999 mem: location 1758 is 18
9998 run: address to copy to is 1780
9999 mem: location 1755 is 32
9999 mem: storing 32 in location 1780
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1758 is 18
9999 mem: storing 19 in location 1758
 105 run: jump {: "offset"}
9998 run: jumping to instruction 12
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {capacity: "number"}
9999 mem: location 1758 is 19
9999 mem: location 1754 is 64
9999 mem: storing 0 in location 1759
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1759 is 0
9998 run: jump-if fell through
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 32 in location 1755
9999 mem: storing 1 in location 1756
 105 run: assert {exists?: "boolean"}, {"error in rewinding ingredients to new-array": "literal-string"}
9999 mem: location 1756 is 1
 105 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {i: "number"}, {curr-value: "character"}
9999 mem: location 1757 is 1760
9999 mem: skipping refcount at 1760
9999 mem: location 1758 is 19
9998 run: address to copy to is 1781
9999 mem: location 1755 is 32
9999 mem: storing 32 in location 1781
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1758 is 19
9999 mem: storing 20 in location 1758
 105 run: jump {: "offset"}
9998 run: jumping to instruction 12
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {capacity: "number"}
9999 mem: location 1758 is 20
9999 mem: location 1754 is 64
9999 mem: storing 0 in location 1759
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1759 is 0
9998 run: jump-if fell through
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 32 in location 1755
9999 mem: storing 1 in location 1756
 105 run: assert {exists?: "boolean"}, {"error in rewinding ingredients to new-array": "literal-string"}
9999 mem: location 1756 is 1
 105 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {i: "number"}, {curr-value: "character"}
9999 mem: location 1757 is 1760
9999 mem: skipping refcount at 1760
9999 mem: location 1758 is 20
9998 run: address to copy to is 1782
9999 mem: location 1755 is 32
9999 mem: storing 32 in location 1782
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1758 is 20
9999 mem: storing 21 in location 1758
 105 run: jump {: "offset"}
9998 run: jumping to instruction 12
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {capacity: "number"}
9999 mem: location 1758 is 21
9999 mem: location 1754 is 64
9999 mem: storing 0 in location 1759
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1759 is 0
9998 run: jump-if fell through
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 32 in location 1755
9999 mem: storing 1 in location 1756
 105 run: assert {exists?: "boolean"}, {"error in rewinding ingredients to new-array": "literal-string"}
9999 mem: location 1756 is 1
 105 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {i: "number"}, {curr-value: "character"}
9999 mem: location 1757 is 1760
9999 mem: skipping refcount at 1760
9999 mem: location 1758 is 21
9998 run: address to copy to is 1783
9999 mem: location 1755 is 32
9999 mem: storing 32 in location 1783
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1758 is 21
9999 mem: storing 22 in location 1758
 105 run: jump {: "offset"}
9998 run: jumping to instruction 12
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {capacity: "number"}
9999 mem: location 1758 is 22
9999 mem: location 1754 is 64
9999 mem: storing 0 in location 1759
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1759 is 0
9998 run: jump-if fell through
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 112 in location 1755
9999 mem: storing 1 in location 1756
 105 run: assert {exists?: "boolean"}, {"error in rewinding ingredients to new-array": "literal-string"}
9999 mem: location 1756 is 1
 105 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {i: "number"}, {curr-value: "character"}
9999 mem: location 1757 is 1760
9999 mem: skipping refcount at 1760
9999 mem: location 1758 is 22
9998 run: address to copy to is 1784
9999 mem: location 1755 is 112
9999 mem: storing 112 in location 1784
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1758 is 22
9999 mem: storing 23 in location 1758
 105 run: jump {: "offset"}
9998 run: jumping to instruction 12
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {capacity: "number"}
9999 mem: location 1758 is 23
9999 mem: location 1754 is 64
9999 mem: storing 0 in location 1759
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1759 is 0
9998 run: jump-if fell through
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 98 in location 1755
9999 mem: storing 1 in location 1756
 105 run: assert {exists?: "boolean"}, {"error in rewinding ingredients to new-array": "literal-string"}
9999 mem: location 1756 is 1
 105 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {i: "number"}, {curr-value: "character"}
9999 mem: location 1757 is 1760
9999 mem: skipping refcount at 1760
9999 mem: location 1758 is 23
9998 run: address to copy to is 1785
9999 mem: location 1755 is 98
9999 mem: storing 98 in location 1785
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1758 is 23
9999 mem: storing 24 in location 1758
 105 run: jump {: "offset"}
9998 run: jumping to instruction 12
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {capacity: "number"}
9999 mem: location 1758 is 24
9999 mem: location 1754 is 64
9999 mem: storing 0 in location 1759
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1759 is 0
9998 run: jump-if fell through
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 81 in location 1755
9999 mem: storing 1 in location 1756
 105 run: assert {exists?: "boolean"}, {"error in rewinding ingredients to new-array": "literal-string"}
9999 mem: location 1756 is 1
 105 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {i: "number"}, {curr-value: "character"}
9999 mem: location 1757 is 1760
9999 mem: skipping refcount at 1760
9999 mem: location 1758 is 24
9998 run: address to copy to is 1786
9999 mem: location 1755 is 81
9999 mem: storing 81 in location 1786
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1758 is 24
9999 mem: storing 25 in location 1758
 105 run: jump {: "offset"}
9998 run: jumping to instruction 12
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {capacity: "number"}
9999 mem: location 1758 is 25
9999 mem: location 1754 is 64
9999 mem: storing 0 in location 1759
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1759 is 0
9998 run: jump-if fell through
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 80 in location 1755
9999 mem: storing 1 in location 1756
 105 run: assert {exists?: "boolean"}, {"error in rewinding ingredients to new-array": "literal-string"}
9999 mem: location 1756 is 1
 105 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {i: "number"}, {curr-value: "character"}
9999 mem: location 1757 is 1760
9999 mem: skipping refcount at 1760
9999 mem: location 1758 is 25
9998 run: address to copy to is 1787
9999 mem: location 1755 is 80
9999 mem: storing 80 in location 1787
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1758 is 25
9999 mem: storing 26 in location 1758
 105 run: jump {: "offset"}
9998 run: jumping to instruction 12
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {capacity: "number"}
9999 mem: location 1758 is 26
9999 mem: location 1754 is 64
9999 mem: storing 0 in location 1759
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1759 is 0
9998 run: jump-if fell through
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 32 in location 1755
9999 mem: storing 1 in location 1756
 105 run: assert {exists?: "boolean"}, {"error in rewinding ingredients to new-array": "literal-string"}
9999 mem: location 1756 is 1
 105 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {i: "number"}, {curr-value: "character"}
9999 mem: location 1757 is 1760
9999 mem: skipping refcount at 1760
9999 mem: location 1758 is 26
9998 run: address to copy to is 1788
9999 mem: location 1755 is 32
9999 mem: storing 32 in location 1788
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1758 is 26
9999 mem: storing 27 in location 1758
 105 run: jump {: "offset"}
9998 run: jumping to instruction 12
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {capacity: "number"}
9999 mem: location 1758 is 27
9999 mem: location 1754 is 64
9999 mem: storing 0 in location 1759
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1759 is 0
9998 run: jump-if fell through
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 32 in location 1755
9999 mem: storing 1 in location 1756
 105 run: assert {exists?: "boolean"}, {"error in rewinding ingredients to new-array": "literal-string"}
9999 mem: location 1756 is 1
 105 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {i: "number"}, {curr-value: "character"}
9999 mem: location 1757 is 1760
9999 mem: skipping refcount at 1760
9999 mem: location 1758 is 27
9998 run: address to copy to is 1789
9999 mem: location 1755 is 32
9999 mem: storing 32 in location 1789
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1758 is 27
9999 mem: storing 28 in location 1758
 105 run: jump {: "offset"}
9998 run: jumping to instruction 12
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {capacity: "number"}
9999 mem: location 1758 is 28
9999 mem: location 1754 is 64
9999 mem: storing 0 in location 1759
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1759 is 0
9998 run: jump-if fell through
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 32 in location 1755
9999 mem: storing 1 in location 1756
 105 run: assert {exists?: "boolean"}, {"error in rewinding ingredients to new-array": "literal-string"}
9999 mem: location 1756 is 1
 105 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {i: "number"}, {curr-value: "character"}
9999 mem: location 1757 is 1760
9999 mem: skipping refcount at 1760
9999 mem: location 1758 is 28
9998 run: address to copy to is 1790
9999 mem: location 1755 is 32
9999 mem: storing 32 in location 1790
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1758 is 28
9999 mem: storing 29 in location 1758
 105 run: jump {: "offset"}
9998 run: jumping to instruction 12
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {capacity: "number"}
9999 mem: location 1758 is 29
9999 mem: location 1754 is 64
9999 mem: storing 0 in location 1759
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1759 is 0
9998 run: jump-if fell through
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 32 in location 1755
9999 mem: storing 1 in location 1756
 105 run: assert {exists?: "boolean"}, {"error in rewinding ingredients to new-array": "literal-string"}
9999 mem: location 1756 is 1
 105 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {i: "number"}, {curr-value: "character"}
9999 mem: location 1757 is 1760
9999 mem: skipping refcount at 1760
9999 mem: location 1758 is 29
9998 run: address to copy to is 1791
9999 mem: location 1755 is 32
9999 mem: storing 32 in location 1791
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1758 is 29
9999 mem: storing 30 in location 1758
 105 run: jump {: "offset"}
9998 run: jumping to instruction 12
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {capacity: "number"}
9999 mem: location 1758 is 30
9999 mem: location 1754 is 64
9999 mem: storing 0 in location 1759
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1759 is 0
9998 run: jump-if fell through
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 112 in location 1755
9999 mem: storing 1 in location 1756
 105 run: assert {exists?: "boolean"}, {"error in rewinding ingredients to new-array": "literal-string"}
9999 mem: location 1756 is 1
 105 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {i: "number"}, {curr-value: "character"}
9999 mem: location 1757 is 1760
9999 mem: skipping refcount at 1760
9999 mem: location 1758 is 30
9998 run: address to copy to is 1792
9999 mem: location 1755 is 112
9999 mem: storing 112 in location 1792
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1758 is 30
9999 mem: storing 31 in location 1758
 105 run: jump {: "offset"}
9998 run: jumping to instruction 12
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {capacity: "number"}
9999 mem: location 1758 is 31
9999 mem: location 1754 is 64
9999 mem: storing 0 in location 1759
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1759 is 0
9998 run: jump-if fell through
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 113 in location 1755
9999 mem: storing 1 in location 1756
 105 run: assert {exists?: "boolean"}, {"error in rewinding ingredients to new-array": "literal-string"}
9999 mem: location 1756 is 1
 105 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {i: "number"}, {curr-value: "character"}
9999 mem: location 1757 is 1760
9999 mem: skipping refcount at 1760
9999 mem: location 1758 is 31
9998 run: address to copy to is 1793
9999 mem: location 1755 is 113
9999 mem: storing 113 in location 1793
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1758 is 31
9999 mem: storing 32 in location 1758
 105 run: jump {: "offset"}
9998 run: jumping to instruction 12
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {capacity: "number"}
9999 mem: location 1758 is 32
9999 mem: location 1754 is 64
9999 mem: storing 0 in location 1759
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1759 is 0
9998 run: jump-if fell through
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 75 in location 1755
9999 mem: storing 1 in location 1756
 105 run: assert {exists?: "boolean"}, {"error in rewinding ingredients to new-array": "literal-string"}
9999 mem: location 1756 is 1
 105 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {i: "number"}, {curr-value: "character"}
9999 mem: location 1757 is 1760
9999 mem: skipping refcount at 1760
9999 mem: location 1758 is 32
9998 run: address to copy to is 1794
9999 mem: location 1755 is 75
9999 mem: storing 75 in location 1794
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1758 is 32
9999 mem: storing 33 in location 1758
 105 run: jump {: "offset"}
9998 run: jumping to instruction 12
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {capacity: "number"}
9999 mem: location 1758 is 33
9999 mem: location 1754 is 64
9999 mem: storing 0 in location 1759
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1759 is 0
9998 run: jump-if fell through
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 80 in location 1755
9999 mem: storing 1 in location 1756
 105 run: assert {exists?: "boolean"}, {"error in rewinding ingredients to new-array": "literal-string"}
9999 mem: location 1756 is 1
 105 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {i: "number"}, {curr-value: "character"}
9999 mem: location 1757 is 1760
9999 mem: skipping refcount at 1760
9999 mem: location 1758 is 33
9998 run: address to copy to is 1795
9999 mem: location 1755 is 80
9999 mem: storing 80 in location 1795
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1758 is 33
9999 mem: storing 34 in location 1758
 105 run: jump {: "offset"}
9998 run: jumping to instruction 12
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {capacity: "number"}
9999 mem: location 1758 is 34
9999 mem: location 1754 is 64
9999 mem: storing 0 in location 1759
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1759 is 0
9998 run: jump-if fell through
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 32 in location 1755
9999 mem: storing 1 in location 1756
 105 run: assert {exists?: "boolean"}, {"error in rewinding ingredients to new-array": "literal-string"}
9999 mem: location 1756 is 1
 105 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {i: "number"}, {curr-value: "character"}
9999 mem: location 1757 is 1760
9999 mem: skipping refcount at 1760
9999 mem: location 1758 is 34
9998 run: address to copy to is 1796
9999 mem: location 1755 is 32
9999 mem: storing 32 in location 1796
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1758 is 34
9999 mem: storing 35 in location 1758
 105 run: jump {: "offset"}
9998 run: jumping to instruction 12
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {capacity: "number"}
9999 mem: location 1758 is 35
9999 mem: location 1754 is 64
9999 mem: storing 0 in location 1759
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1759 is 0
9998 run: jump-if fell through
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 32 in location 1755
9999 mem: storing 1 in location 1756
 105 run: assert {exists?: "boolean"}, {"error in rewinding ingredients to new-array": "literal-string"}
9999 mem: location 1756 is 1
 105 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {i: "number"}, {curr-value: "character"}
9999 mem: location 1757 is 1760
9999 mem: skipping refcount at 1760
9999 mem: location 1758 is 35
9998 run: address to copy to is 1797
9999 mem: location 1755 is 32
9999 mem: storing 32 in location 1797
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1758 is 35
9999 mem: storing 36 in location 1758
 105 run: jump {: "offset"}
9998 run: jumping to instruction 12
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {capacity: "number"}
9999 mem: location 1758 is 36
9999 mem: location 1754 is 64
9999 mem: storing 0 in location 1759
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1759 is 0
9998 run: jump-if fell through
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 32 in location 1755
9999 mem: storing 1 in location 1756
 105 run: assert {exists?: "boolean"}, {"error in rewinding ingredients to new-array": "literal-string"}
9999 mem: location 1756 is 1
 105 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {i: "number"}, {curr-value: "character"}
9999 mem: location 1757 is 1760
9999 mem: skipping refcount at 1760
9999 mem: location 1758 is 36
9998 run: address to copy to is 1798
9999 mem: location 1755 is 32
9999 mem: storing 32 in location 1798
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1758 is 36
9999 mem: storing 37 in location 1758
 105 run: jump {: "offset"}
9998 run: jumping to instruction 12
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {capacity: "number"}
9999 mem: location 1758 is 37
9999 mem: location 1754 is 64
9999 mem: storing 0 in location 1759
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1759 is 0
9998 run: jump-if fell through
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 32 in location 1755
9999 mem: storing 1 in location 1756
 105 run: assert {exists?: "boolean"}, {"error in rewinding ingredients to new-array": "literal-string"}
9999 mem: location 1756 is 1
 105 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {i: "number"}, {curr-value: "character"}
9999 mem: location 1757 is 1760
9999 mem: skipping refcount at 1760
9999 mem: location 1758 is 37
9998 run: address to copy to is 1799
9999 mem: location 1755 is 32
9999 mem: storing 32 in location 1799
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1758 is 37
9999 mem: storing 38 in location 1758
 105 run: jump {: "offset"}
9998 run: jumping to instruction 12
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {capacity: "number"}
9999 mem: location 1758 is 38
9999 mem: location 1754 is 64
9999 mem: storing 0 in location 1759
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1759 is 0
9998 run: jump-if fell through
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 112 in location 1755
9999 mem: storing 1 in location 1756
 105 run: assert {exists?: "boolean"}, {"error in rewinding ingredients to new-array": "literal-string"}
9999 mem: location 1756 is 1
 105 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {i: "number"}, {curr-value: "character"}
9999 mem: location 1757 is 1760
9999 mem: skipping refcount at 1760
9999 mem: location 1758 is 38
9998 run: address to copy to is 1800
9999 mem: location 1755 is 112
9999 mem: storing 112 in location 1800
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1758 is 38
9999 mem: storing 39 in location 1758
 105 run: jump {: "offset"}
9998 run: jumping to instruction 12
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {capacity: "number"}
9999 mem: location 1758 is 39
9999 mem: location 1754 is 64
9999 mem: storing 0 in location 1759
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1759 is 0
9998 run: jump-if fell through
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 107 in location 1755
9999 mem: storing 1 in location 1756
 105 run: assert {exists?: "boolean"}, {"error in rewinding ingredients to new-array": "literal-string"}
9999 mem: location 1756 is 1
 105 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {i: "number"}, {curr-value: "character"}
9999 mem: location 1757 is 1760
9999 mem: skipping refcount at 1760
9999 mem: location 1758 is 39
9998 run: address to copy to is 1801
9999 mem: location 1755 is 107
9999 mem: storing 107 in location 1801
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1758 is 39
9999 mem: storing 40 in location 1758
 105 run: jump {: "offset"}
9998 run: jumping to instruction 12
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {capacity: "number"}
9999 mem: location 1758 is 40
9999 mem: location 1754 is 64
9999 mem: storing 0 in location 1759
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1759 is 0
9998 run: jump-if fell through
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 66 in location 1755
9999 mem: storing 1 in location 1756
 105 run: assert {exists?: "boolean"}, {"error in rewinding ingredients to new-array": "literal-string"}
9999 mem: location 1756 is 1
 105 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {i: "number"}, {curr-value: "character"}
9999 mem: location 1757 is 1760
9999 mem: skipping refcount at 1760
9999 mem: location 1758 is 40
9998 run: address to copy to is 1802
9999 mem: location 1755 is 66
9999 mem: storing 66 in location 1802
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1758 is 40
9999 mem: storing 41 in location 1758
 105 run: jump {: "offset"}
9998 run: jumping to instruction 12
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {capacity: "number"}
9999 mem: location 1758 is 41
9999 mem: location 1754 is 64
9999 mem: storing 0 in location 1759
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1759 is 0
9998 run: jump-if fell through
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 80 in location 1755
9999 mem: storing 1 in location 1756
 105 run: assert {exists?: "boolean"}, {"error in rewinding ingredients to new-array": "literal-string"}
9999 mem: location 1756 is 1
 105 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {i: "number"}, {curr-value: "character"}
9999 mem: location 1757 is 1760
9999 mem: skipping refcount at 1760
9999 mem: location 1758 is 41
9998 run: address to copy to is 1803
9999 mem: location 1755 is 80
9999 mem: storing 80 in location 1803
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1758 is 41
9999 mem: storing 42 in location 1758
 105 run: jump {: "offset"}
9998 run: jumping to instruction 12
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {capacity: "number"}
9999 mem: location 1758 is 42
9999 mem: location 1754 is 64
9999 mem: storing 0 in location 1759
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1759 is 0
9998 run: jump-if fell through
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 32 in location 1755
9999 mem: storing 1 in location 1756
 105 run: assert {exists?: "boolean"}, {"error in rewinding ingredients to new-array": "literal-string"}
9999 mem: location 1756 is 1
 105 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {i: "number"}, {curr-value: "character"}
9999 mem: location 1757 is 1760
9999 mem: skipping refcount at 1760
9999 mem: location 1758 is 42
9998 run: address to copy to is 1804
9999 mem: location 1755 is 32
9999 mem: storing 32 in location 1804
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1758 is 42
9999 mem: storing 43 in location 1758
 105 run: jump {: "offset"}
9998 run: jumping to instruction 12
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {capacity: "number"}
9999 mem: location 1758 is 43
9999 mem: location 1754 is 64
9999 mem: storing 0 in location 1759
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1759 is 0
9998 run: jump-if fell through
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 32 in location 1755
9999 mem: storing 1 in location 1756
 105 run: assert {exists?: "boolean"}, {"error in rewinding ingredients to new-array": "literal-string"}
9999 mem: location 1756 is 1
 105 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {i: "number"}, {curr-value: "character"}
9999 mem: location 1757 is 1760
9999 mem: skipping refcount at 1760
9999 mem: location 1758 is 43
9998 run: address to copy to is 1805
9999 mem: location 1755 is 32
9999 mem: storing 32 in location 1805
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1758 is 43
9999 mem: storing 44 in location 1758
 105 run: jump {: "offset"}
9998 run: jumping to instruction 12
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {capacity: "number"}
9999 mem: location 1758 is 44
9999 mem: location 1754 is 64
9999 mem: storing 0 in location 1759
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1759 is 0
9998 run: jump-if fell through
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 32 in location 1755
9999 mem: storing 1 in location 1756
 105 run: assert {exists?: "boolean"}, {"error in rewinding ingredients to new-array": "literal-string"}
9999 mem: location 1756 is 1
 105 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {i: "number"}, {curr-value: "character"}
9999 mem: location 1757 is 1760
9999 mem: skipping refcount at 1760
9999 mem: location 1758 is 44
9998 run: address to copy to is 1806
9999 mem: location 1755 is 32
9999 mem: storing 32 in location 1806
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1758 is 44
9999 mem: storing 45 in location 1758
 105 run: jump {: "offset"}
9998 run: jumping to instruction 12
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {capacity: "number"}
9999 mem: location 1758 is 45
9999 mem: location 1754 is 64
9999 mem: storing 0 in location 1759
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1759 is 0
9998 run: jump-if fell through
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 32 in location 1755
9999 mem: storing 1 in location 1756
 105 run: assert {exists?: "boolean"}, {"error in rewinding ingredients to new-array": "literal-string"}
9999 mem: location 1756 is 1
 105 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {i: "number"}, {curr-value: "character"}
9999 mem: location 1757 is 1760
9999 mem: skipping refcount at 1760
9999 mem: location 1758 is 45
9998 run: address to copy to is 1807
9999 mem: location 1755 is 32
9999 mem: storing 32 in location 1807
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1758 is 45
9999 mem: storing 46 in location 1758
 105 run: jump {: "offset"}
9998 run: jumping to instruction 12
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {capacity: "number"}
9999 mem: location 1758 is 46
9999 mem: location 1754 is 64
9999 mem: storing 0 in location 1759
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1759 is 0
9998 run: jump-if fell through
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 112 in location 1755
9999 mem: storing 1 in location 1756
 105 run: assert {exists?: "boolean"}, {"error in rewinding ingredients to new-array": "literal-string"}
9999 mem: location 1756 is 1
 105 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {i: "number"}, {curr-value: "character"}
9999 mem: location 1757 is 1760
9999 mem: skipping refcount at 1760
9999 mem: location 1758 is 46
9998 run: address to copy to is 1808
9999 mem: location 1755 is 112
9999 mem: storing 112 in location 1808
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1758 is 46
9999 mem: storing 47 in location 1758
 105 run: jump {: "offset"}
9998 run: jumping to instruction 12
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {capacity: "number"}
9999 mem: location 1758 is 47
9999 mem: location 1754 is 64
9999 mem: storing 0 in location 1759
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1759 is 0
9998 run: jump-if fell through
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 98 in location 1755
9999 mem: storing 1 in location 1756
 105 run: assert {exists?: "boolean"}, {"error in rewinding ingredients to new-array": "literal-string"}
9999 mem: location 1756 is 1
 105 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {i: "number"}, {curr-value: "character"}
9999 mem: location 1757 is 1760
9999 mem: skipping refcount at 1760
9999 mem: location 1758 is 47
9998 run: address to copy to is 1809
9999 mem: location 1755 is 98
9999 mem: storing 98 in location 1809
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1758 is 47
9999 mem: storing 48 in location 1758
 105 run: jump {: "offset"}
9998 run: jumping to instruction 12
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {capacity: "number"}
9999 mem: location 1758 is 48
9999 mem: location 1754 is 64
9999 mem: storing 0 in location 1759
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1759 is 0
9998 run: jump-if fell through
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 78 in location 1755
9999 mem: storing 1 in location 1756
 105 run: assert {exists?: "boolean"}, {"error in rewinding ingredients to new-array": "literal-string"}
9999 mem: location 1756 is 1
 105 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {i: "number"}, {curr-value: "character"}
9999 mem: location 1757 is 1760
9999 mem: skipping refcount at 1760
9999 mem: location 1758 is 48
9998 run: address to copy to is 1810
9999 mem: location 1755 is 78
9999 mem: storing 78 in location 1810
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1758 is 48
9999 mem: storing 49 in location 1758
 105 run: jump {: "offset"}
9998 run: jumping to instruction 12
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {capacity: "number"}
9999 mem: location 1758 is 49
9999 mem: location 1754 is 64
9999 mem: storing 0 in location 1759
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1759 is 0
9998 run: jump-if fell through
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 80 in location 1755
9999 mem: storing 1 in location 1756
 105 run: assert {exists?: "boolean"}, {"error in rewinding ingredients to new-array": "literal-string"}
9999 mem: location 1756 is 1
 105 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {i: "number"}, {curr-value: "character"}
9999 mem: location 1757 is 1760
9999 mem: skipping refcount at 1760
9999 mem: location 1758 is 49
9998 run: address to copy to is 1811
9999 mem: location 1755 is 80
9999 mem: storing 80 in location 1811
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1758 is 49
9999 mem: storing 50 in location 1758
 105 run: jump {: "offset"}
9998 run: jumping to instruction 12
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {capacity: "number"}
9999 mem: location 1758 is 50
9999 mem: location 1754 is 64
9999 mem: storing 0 in location 1759
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1759 is 0
9998 run: jump-if fell through
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 32 in location 1755
9999 mem: storing 1 in location 1756
 105 run: assert {exists?: "boolean"}, {"error in rewinding ingredients to new-array": "literal-string"}
9999 mem: location 1756 is 1
 105 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {i: "number"}, {curr-value: "character"}
9999 mem: location 1757 is 1760
9999 mem: skipping refcount at 1760
9999 mem: location 1758 is 50
9998 run: address to copy to is 1812
9999 mem: location 1755 is 32
9999 mem: storing 32 in location 1812
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1758 is 50
9999 mem: storing 51 in location 1758
 105 run: jump {: "offset"}
9998 run: jumping to instruction 12
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {capacity: "number"}
9999 mem: location 1758 is 51
9999 mem: location 1754 is 64
9999 mem: storing 0 in location 1759
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1759 is 0
9998 run: jump-if fell through
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 32 in location 1755
9999 mem: storing 1 in location 1756
 105 run: assert {exists?: "boolean"}, {"error in rewinding ingredients to new-array": "literal-string"}
9999 mem: location 1756 is 1
 105 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {i: "number"}, {curr-value: "character"}
9999 mem: location 1757 is 1760
9999 mem: skipping refcount at 1760
9999 mem: location 1758 is 51
9998 run: address to copy to is 1813
9999 mem: location 1755 is 32
9999 mem: storing 32 in location 1813
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1758 is 51
9999 mem: storing 52 in location 1758
 105 run: jump {: "offset"}
9998 run: jumping to instruction 12
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {capacity: "number"}
9999 mem: location 1758 is 52
9999 mem: location 1754 is 64
9999 mem: storing 0 in location 1759
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1759 is 0
9998 run: jump-if fell through
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 32 in location 1755
9999 mem: storing 1 in location 1756
 105 run: assert {exists?: "boolean"}, {"error in rewinding ingredients to new-array": "literal-string"}
9999 mem: location 1756 is 1
 105 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {i: "number"}, {curr-value: "character"}
9999 mem: location 1757 is 1760
9999 mem: skipping refcount at 1760
9999 mem: location 1758 is 52
9998 run: address to copy to is 1814
9999 mem: location 1755 is 32
9999 mem: storing 32 in location 1814
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1758 is 52
9999 mem: storing 53 in location 1758
 105 run: jump {: "offset"}
9998 run: jumping to instruction 12
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {capacity: "number"}
9999 mem: location 1758 is 53
9999 mem: location 1754 is 64
9999 mem: storing 0 in location 1759
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1759 is 0
9998 run: jump-if fell through
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 32 in location 1755
9999 mem: storing 1 in location 1756
 105 run: assert {exists?: "boolean"}, {"error in rewinding ingredients to new-array": "literal-string"}
9999 mem: location 1756 is 1
 105 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {i: "number"}, {curr-value: "character"}
9999 mem: location 1757 is 1760
9999 mem: skipping refcount at 1760
9999 mem: location 1758 is 53
9998 run: address to copy to is 1815
9999 mem: location 1755 is 32
9999 mem: storing 32 in location 1815
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1758 is 53
9999 mem: storing 54 in location 1758
 105 run: jump {: "offset"}
9998 run: jumping to instruction 12
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {capacity: "number"}
9999 mem: location 1758 is 54
9999 mem: location 1754 is 64
9999 mem: storing 0 in location 1759
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1759 is 0
9998 run: jump-if fell through
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 112 in location 1755
9999 mem: storing 1 in location 1756
 105 run: assert {exists?: "boolean"}, {"error in rewinding ingredients to new-array": "literal-string"}
9999 mem: location 1756 is 1
 105 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {i: "number"}, {curr-value: "character"}
9999 mem: location 1757 is 1760
9999 mem: skipping refcount at 1760
9999 mem: location 1758 is 54
9998 run: address to copy to is 1816
9999 mem: location 1755 is 112
9999 mem: storing 112 in location 1816
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1758 is 54
9999 mem: storing 55 in location 1758
 105 run: jump {: "offset"}
9998 run: jumping to instruction 12
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {capacity: "number"}
9999 mem: location 1758 is 55
9999 mem: location 1754 is 64
9999 mem: storing 0 in location 1759
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1759 is 0
9998 run: jump-if fell through
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 110 in location 1755
9999 mem: storing 1 in location 1756
 105 run: assert {exists?: "boolean"}, {"error in rewinding ingredients to new-array": "literal-string"}
9999 mem: location 1756 is 1
 105 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {i: "number"}, {curr-value: "character"}
9999 mem: location 1757 is 1760
9999 mem: skipping refcount at 1760
9999 mem: location 1758 is 55
9998 run: address to copy to is 1817
9999 mem: location 1755 is 110
9999 mem: storing 110 in location 1817
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1758 is 55
9999 mem: storing 56 in location 1758
 105 run: jump {: "offset"}
9998 run: jumping to instruction 12
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {capacity: "number"}
9999 mem: location 1758 is 56
9999 mem: location 1754 is 64
9999 mem: storing 0 in location 1759
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1759 is 0
9998 run: jump-if fell through
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 82 in location 1755
9999 mem: storing 1 in location 1756
 105 run: assert {exists?: "boolean"}, {"error in rewinding ingredients to new-array": "literal-string"}
9999 mem: location 1756 is 1
 105 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {i: "number"}, {curr-value: "character"}
9999 mem: location 1757 is 1760
9999 mem: skipping refcount at 1760
9999 mem: location 1758 is 56
9998 run: address to copy to is 1818
9999 mem: location 1755 is 82
9999 mem: storing 82 in location 1818
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1758 is 56
9999 mem: storing 57 in location 1758
 105 run: jump {: "offset"}
9998 run: jumping to instruction 12
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {capacity: "number"}
9999 mem: location 1758 is 57
9999 mem: location 1754 is 64
9999 mem: storing 0 in location 1759
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1759 is 0
9998 run: jump-if fell through
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 80 in location 1755
9999 mem: storing 1 in location 1756
 105 run: assert {exists?: "boolean"}, {"error in rewinding ingredients to new-array": "literal-string"}
9999 mem: location 1756 is 1
 105 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {i: "number"}, {curr-value: "character"}
9999 mem: location 1757 is 1760
9999 mem: skipping refcount at 1760
9999 mem: location 1758 is 57
9998 run: address to copy to is 1819
9999 mem: location 1755 is 80
9999 mem: storing 80 in location 1819
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1758 is 57
9999 mem: storing 58 in location 1758
 105 run: jump {: "offset"}
9998 run: jumping to instruction 12
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {capacity: "number"}
9999 mem: location 1758 is 58
9999 mem: location 1754 is 64
9999 mem: storing 0 in location 1759
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1759 is 0
9998 run: jump-if fell through
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 32 in location 1755
9999 mem: storing 1 in location 1756
 105 run: assert {exists?: "boolean"}, {"error in rewinding ingredients to new-array": "literal-string"}
9999 mem: location 1756 is 1
 105 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {i: "number"}, {curr-value: "character"}
9999 mem: location 1757 is 1760
9999 mem: skipping refcount at 1760
9999 mem: location 1758 is 58
9998 run: address to copy to is 1820
9999 mem: location 1755 is 32
9999 mem: storing 32 in location 1820
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1758 is 58
9999 mem: storing 59 in location 1758
 105 run: jump {: "offset"}
9998 run: jumping to instruction 12
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {capacity: "number"}
9999 mem: location 1758 is 59
9999 mem: location 1754 is 64
9999 mem: storing 0 in location 1759
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1759 is 0
9998 run: jump-if fell through
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 32 in location 1755
9999 mem: storing 1 in location 1756
 105 run: assert {exists?: "boolean"}, {"error in rewinding ingredients to new-array": "literal-string"}
9999 mem: location 1756 is 1
 105 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {i: "number"}, {curr-value: "character"}
9999 mem: location 1757 is 1760
9999 mem: skipping refcount at 1760
9999 mem: location 1758 is 59
9998 run: address to copy to is 1821
9999 mem: location 1755 is 32
9999 mem: storing 32 in location 1821
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1758 is 59
9999 mem: storing 60 in location 1758
 105 run: jump {: "offset"}
9998 run: jumping to instruction 12
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {capacity: "number"}
9999 mem: location 1758 is 60
9999 mem: location 1754 is 64
9999 mem: storing 0 in location 1759
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1759 is 0
9998 run: jump-if fell through
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 32 in location 1755
9999 mem: storing 1 in location 1756
 105 run: assert {exists?: "boolean"}, {"error in rewinding ingredients to new-array": "literal-string"}
9999 mem: location 1756 is 1
 105 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {i: "number"}, {curr-value: "character"}
9999 mem: location 1757 is 1760
9999 mem: skipping refcount at 1760
9999 mem: location 1758 is 60
9998 run: address to copy to is 1822
9999 mem: location 1755 is 32
9999 mem: storing 32 in location 1822
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1758 is 60
9999 mem: storing 61 in location 1758
 105 run: jump {: "offset"}
9998 run: jumping to instruction 12
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {capacity: "number"}
9999 mem: location 1758 is 61
9999 mem: location 1754 is 64
9999 mem: storing 0 in location 1759
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1759 is 0
9998 run: jump-if fell through
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 32 in location 1755
9999 mem: storing 1 in location 1756
 105 run: assert {exists?: "boolean"}, {"error in rewinding ingredients to new-array": "literal-string"}
9999 mem: location 1756 is 1
 105 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {i: "number"}, {curr-value: "character"}
9999 mem: location 1757 is 1760
9999 mem: skipping refcount at 1760
9999 mem: location 1758 is 61
9998 run: address to copy to is 1823
9999 mem: location 1755 is 32
9999 mem: storing 32 in location 1823
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1758 is 61
9999 mem: storing 62 in location 1758
 105 run: jump {: "offset"}
9998 run: jumping to instruction 12
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {capacity: "number"}
9999 mem: location 1758 is 62
9999 mem: location 1754 is 64
9999 mem: storing 0 in location 1759
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1759 is 0
9998 run: jump-if fell through
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 112 in location 1755
9999 mem: storing 1 in location 1756
 105 run: assert {exists?: "boolean"}, {"error in rewinding ingredients to new-array": "literal-string"}
9999 mem: location 1756 is 1
 105 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {i: "number"}, {curr-value: "character"}
9999 mem: location 1757 is 1760
9999 mem: skipping refcount at 1760
9999 mem: location 1758 is 62
9998 run: address to copy to is 1824
9999 mem: location 1755 is 112
9999 mem: storing 112 in location 1824
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1758 is 62
9999 mem: storing 63 in location 1758
 105 run: jump {: "offset"}
9998 run: jumping to instruction 12
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {capacity: "number"}
9999 mem: location 1758 is 63
9999 mem: location 1754 is 64
9999 mem: storing 0 in location 1759
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1759 is 0
9998 run: jump-if fell through
 105 run: {curr-value: "character"}, {exists?: "boolean"} <- next-ingredient 
9999 mem: storing 114 in location 1755
9999 mem: storing 1 in location 1756
 105 run: assert {exists?: "boolean"}, {"error in rewinding ingredients to new-array": "literal-string"}
9999 mem: location 1756 is 1
 105 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {i: "number"}, {curr-value: "character"}
9999 mem: location 1757 is 1760
9999 mem: skipping refcount at 1760
9999 mem: location 1758 is 63
9998 run: address to copy to is 1825
9999 mem: location 1755 is 114
9999 mem: storing 114 in location 1825
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1758 is 63
9999 mem: storing 64 in location 1758
 105 run: jump {: "offset"}
9998 run: jumping to instruction 12
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {capacity: "number"}
9999 mem: location 1758 is 64
9999 mem: location 1754 is 64
9999 mem: storing 1 in location 1759
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1759 is 1
9998 run: jumping to instruction 19
 105 run: return {result: ("address" "array" "character")}
9999 mem: location 1757 is 1760
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1760
9999 mem: incrementing refcount of 1760: 1 -> 2
9999 mem: storing 1760 in location 1749
 104 run: {board: ("address" "array" "address" "array" "character")} <- new-board {initial-position: ("address" "array" "character")}
9999 mem: location 1749 is 1760
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1736
 105 run: {initial-position: ("address" "array" "character")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1760: 2 -> 3
9999 mem: storing 1760 in location 1739
 105 run: {len: "number"} <- length {initial-position: ("address" "array" "character"), "lookup": ()}
9999 mem: location 1739 is 1760
9999 mem: skipping refcount at 1760
9999 mem: storing 64 in location 1740
 105 run: {correct-length?: "boolean"} <- equal {len: "number"}, {64: "literal"}
9999 mem: location 1740 is 64
9999 mem: storing 1 in location 1741
 105 run: assert {correct-length?: "boolean"}, {"chessboard had incorrect size": "literal-string"}
9999 mem: location 1741 is 1
 105 run: {board: ("address" "array" "address" "array" "character")} <- new {(address array character): "type"}, {8: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 mem: new alloc: 1826
9999 mem: storing 0 in location 1826
9999 mem: storing 0 in location 1827
9999 mem: storing 0 in location 1828
9999 mem: storing 0 in location 1829
9999 mem: storing 0 in location 1830
9999 mem: storing 0 in location 1831
9999 mem: storing 0 in location 1832
9999 mem: storing 0 in location 1833
9999 mem: storing 0 in location 1834
9999 mem: storing 0 in location 1835
9999 mem: storing 8 in location 1827
9999 mem: incrementing refcount of 1826: 0 -> 1
9999 mem: storing 1826 in location 1742
 105 run: {col: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1743
 105 run: {done?: "boolean"} <- equal {col: "number"}, {8: "literal"}
9999 mem: location 1743 is 0
9999 mem: storing 0 in location 1744
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1744 is 0
9998 run: jump-if fell through
 105 run: {file: ("address" "array" "character")} <- new-file {initial-position: ("address" "array" "character")}, {col: "number"}
9999 mem: location 1739 is 1760
9999 mem: location 1743 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1751
 106 run: {position: ("address" "array" "character")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1760: 3 -> 4
9999 mem: storing 1760 in location 1754
 106 run: {index: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1755
 106 run: {index: "number"} <- multiply {index: "number"}, {8: "literal"}
9999 mem: location 1755 is 0
9999 mem: storing 0 in location 1755
 106 run: {result: ("address" "array" "character")} <- new {character: "type"}, {8: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 mem: new alloc: 1836
9999 mem: storing 0 in location 1836
9999 mem: storing 0 in location 1837
9999 mem: storing 0 in location 1838
9999 mem: storing 0 in location 1839
9999 mem: storing 0 in location 1840
9999 mem: storing 0 in location 1841
9999 mem: storing 0 in location 1842
9999 mem: storing 0 in location 1843
9999 mem: storing 0 in location 1844
9999 mem: storing 0 in location 1845
9999 mem: storing 8 in location 1837
9999 mem: incrementing refcount of 1836: 0 -> 1
9999 mem: storing 1836 in location 1756
 106 run: {row: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1757
 106 run: {done?: "boolean"} <- equal {row: "number"}, {8: "literal"}
9999 mem: location 1757 is 0
9999 mem: storing 0 in location 1758
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1758 is 0
9998 run: jump-if fell through
 106 run: {square: "character"} <- index {position: ("address" "array" "character"), "lookup": ()}, {index: "number"}
9999 mem: location 1754 is 1760
9999 mem: skipping refcount at 1760
9998 run: base address is 1761
9999 mem: location 1755 is 0
9998 run: address to copy is 1762
9998 run: its type is character
9999 mem: location 1762 is 82
9999 mem: storing 82 in location 1759
 106 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {row: "number"}, {square: "character"}
9999 mem: location 1756 is 1836
9999 mem: skipping refcount at 1836
9999 mem: location 1757 is 0
9998 run: address to copy to is 1838
9999 mem: location 1759 is 82
9999 mem: storing 82 in location 1838
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1757 is 0
9999 mem: storing 1 in location 1757
 106 run: {index: "number"} <- add {index: "number"}, {1: "literal"}
9999 mem: location 1755 is 0
9999 mem: storing 1 in location 1755
 106 run: jump {: "offset"}
9998 run: jumping to instruction 7
 106 run: {done?: "boolean"} <- equal {row: "number"}, {8: "literal"}
9999 mem: location 1757 is 1
9999 mem: storing 0 in location 1758
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1758 is 0
9998 run: jump-if fell through
 106 run: {square: "character"} <- index {position: ("address" "array" "character"), "lookup": ()}, {index: "number"}
9999 mem: location 1754 is 1760
9999 mem: skipping refcount at 1760
9998 run: base address is 1761
9999 mem: location 1755 is 1
9998 run: address to copy is 1763
9998 run: its type is character
9999 mem: location 1763 is 80
9999 mem: storing 80 in location 1759
 106 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {row: "number"}, {square: "character"}
9999 mem: location 1756 is 1836
9999 mem: skipping refcount at 1836
9999 mem: location 1757 is 1
9998 run: address to copy to is 1839
9999 mem: location 1759 is 80
9999 mem: storing 80 in location 1839
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1757 is 1
9999 mem: storing 2 in location 1757
 106 run: {index: "number"} <- add {index: "number"}, {1: "literal"}
9999 mem: location 1755 is 1
9999 mem: storing 2 in location 1755
 106 run: jump {: "offset"}
9998 run: jumping to instruction 7
 106 run: {done?: "boolean"} <- equal {row: "number"}, {8: "literal"}
9999 mem: location 1757 is 2
9999 mem: storing 0 in location 1758
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1758 is 0
9998 run: jump-if fell through
 106 run: {square: "character"} <- index {position: ("address" "array" "character"), "lookup": ()}, {index: "number"}
9999 mem: location 1754 is 1760
9999 mem: skipping refcount at 1760
9998 run: base address is 1761
9999 mem: location 1755 is 2
9998 run: address to copy is 1764
9998 run: its type is character
9999 mem: location 1764 is 32
9999 mem: storing 32 in location 1759
 106 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {row: "number"}, {square: "character"}
9999 mem: location 1756 is 1836
9999 mem: skipping refcount at 1836
9999 mem: location 1757 is 2
9998 run: address to copy to is 1840
9999 mem: location 1759 is 32
9999 mem: storing 32 in location 1840
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1757 is 2
9999 mem: storing 3 in location 1757
 106 run: {index: "number"} <- add {index: "number"}, {1: "literal"}
9999 mem: location 1755 is 2
9999 mem: storing 3 in location 1755
 106 run: jump {: "offset"}
9998 run: jumping to instruction 7
 106 run: {done?: "boolean"} <- equal {row: "number"}, {8: "literal"}
9999 mem: location 1757 is 3
9999 mem: storing 0 in location 1758
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1758 is 0
9998 run: jump-if fell through
 106 run: {square: "character"} <- index {position: ("address" "array" "character"), "lookup": ()}, {index: "number"}
9999 mem: location 1754 is 1760
9999 mem: skipping refcount at 1760
9998 run: base address is 1761
9999 mem: location 1755 is 3
9998 run: address to copy is 1765
9998 run: its type is character
9999 mem: location 1765 is 32
9999 mem: storing 32 in location 1759
 106 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {row: "number"}, {square: "character"}
9999 mem: location 1756 is 1836
9999 mem: skipping refcount at 1836
9999 mem: location 1757 is 3
9998 run: address to copy to is 1841
9999 mem: location 1759 is 32
9999 mem: storing 32 in location 1841
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1757 is 3
9999 mem: storing 4 in location 1757
 106 run: {index: "number"} <- add {index: "number"}, {1: "literal"}
9999 mem: location 1755 is 3
9999 mem: storing 4 in location 1755
 106 run: jump {: "offset"}
9998 run: jumping to instruction 7
 106 run: {done?: "boolean"} <- equal {row: "number"}, {8: "literal"}
9999 mem: location 1757 is 4
9999 mem: storing 0 in location 1758
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1758 is 0
9998 run: jump-if fell through
 106 run: {square: "character"} <- index {position: ("address" "array" "character"), "lookup": ()}, {index: "number"}
9999 mem: location 1754 is 1760
9999 mem: skipping refcount at 1760
9998 run: base address is 1761
9999 mem: location 1755 is 4
9998 run: address to copy is 1766
9998 run: its type is character
9999 mem: location 1766 is 32
9999 mem: storing 32 in location 1759
 106 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {row: "number"}, {square: "character"}
9999 mem: location 1756 is 1836
9999 mem: skipping refcount at 1836
9999 mem: location 1757 is 4
9998 run: address to copy to is 1842
9999 mem: location 1759 is 32
9999 mem: storing 32 in location 1842
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1757 is 4
9999 mem: storing 5 in location 1757
 106 run: {index: "number"} <- add {index: "number"}, {1: "literal"}
9999 mem: location 1755 is 4
9999 mem: storing 5 in location 1755
 106 run: jump {: "offset"}
9998 run: jumping to instruction 7
 106 run: {done?: "boolean"} <- equal {row: "number"}, {8: "literal"}
9999 mem: location 1757 is 5
9999 mem: storing 0 in location 1758
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1758 is 0
9998 run: jump-if fell through
 106 run: {square: "character"} <- index {position: ("address" "array" "character"), "lookup": ()}, {index: "number"}
9999 mem: location 1754 is 1760
9999 mem: skipping refcount at 1760
9998 run: base address is 1761
9999 mem: location 1755 is 5
9998 run: address to copy is 1767
9998 run: its type is character
9999 mem: location 1767 is 32
9999 mem: storing 32 in location 1759
 106 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {row: "number"}, {square: "character"}
9999 mem: location 1756 is 1836
9999 mem: skipping refcount at 1836
9999 mem: location 1757 is 5
9998 run: address to copy to is 1843
9999 mem: location 1759 is 32
9999 mem: storing 32 in location 1843
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1757 is 5
9999 mem: storing 6 in location 1757
 106 run: {index: "number"} <- add {index: "number"}, {1: "literal"}
9999 mem: location 1755 is 5
9999 mem: storing 6 in location 1755
 106 run: jump {: "offset"}
9998 run: jumping to instruction 7
 106 run: {done?: "boolean"} <- equal {row: "number"}, {8: "literal"}
9999 mem: location 1757 is 6
9999 mem: storing 0 in location 1758
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1758 is 0
9998 run: jump-if fell through
 106 run: {square: "character"} <- index {position: ("address" "array" "character"), "lookup": ()}, {index: "number"}
9999 mem: location 1754 is 1760
9999 mem: skipping refcount at 1760
9998 run: base address is 1761
9999 mem: location 1755 is 6
9998 run: address to copy is 1768
9998 run: its type is character
9999 mem: location 1768 is 112
9999 mem: storing 112 in location 1759
 106 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {row: "number"}, {square: "character"}
9999 mem: location 1756 is 1836
9999 mem: skipping refcount at 1836
9999 mem: location 1757 is 6
9998 run: address to copy to is 1844
9999 mem: location 1759 is 112
9999 mem: storing 112 in location 1844
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1757 is 6
9999 mem: storing 7 in location 1757
 106 run: {index: "number"} <- add {index: "number"}, {1: "literal"}
9999 mem: location 1755 is 6
9999 mem: storing 7 in location 1755
 106 run: jump {: "offset"}
9998 run: jumping to instruction 7
 106 run: {done?: "boolean"} <- equal {row: "number"}, {8: "literal"}
9999 mem: location 1757 is 7
9999 mem: storing 0 in location 1758
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1758 is 0
9998 run: jump-if fell through
 106 run: {square: "character"} <- index {position: ("address" "array" "character"), "lookup": ()}, {index: "number"}
9999 mem: location 1754 is 1760
9999 mem: skipping refcount at 1760
9998 run: base address is 1761
9999 mem: location 1755 is 7
9998 run: address to copy is 1769
9998 run: its type is character
9999 mem: location 1769 is 114
9999 mem: storing 114 in location 1759
 106 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {row: "number"}, {square: "character"}
9999 mem: location 1756 is 1836
9999 mem: skipping refcount at 1836
9999 mem: location 1757 is 7
9998 run: address to copy to is 1845
9999 mem: location 1759 is 114
9999 mem: storing 114 in location 1845
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1757 is 7
9999 mem: storing 8 in location 1757
 106 run: {index: "number"} <- add {index: "number"}, {1: "literal"}
9999 mem: location 1755 is 7
9999 mem: storing 8 in location 1755
 106 run: jump {: "offset"}
9998 run: jumping to instruction 7
 106 run: {done?: "boolean"} <- equal {row: "number"}, {8: "literal"}
9999 mem: location 1757 is 8
9999 mem: storing 1 in location 1758
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1758 is 1
9998 run: jumping to instruction 14
 106 run: reply {result: ("address" "array" "character")}
9999 mem: location 1756 is 1836
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1836
9999 mem: incrementing refcount of 1836: 1 -> 2
9999 mem: storing 1836 in location 1745
 105 run: {board: ("address" "array" "address" "array" "character"), "lookup": ()} <- put-index {board: ("address" "array" "address" "array" "character"), "lookup": ()}, {col: "number"}, {file: ("address" "array" "character")}
9999 mem: location 1742 is 1826
9999 mem: skipping refcount at 1826
9999 mem: location 1743 is 0
9998 run: address to copy to is 1828
9999 mem: location 1745 is 1836
9999 mem: incrementing refcount of 1836: 2 -> 3
9999 mem: storing 1836 in location 1828
 105 run: {col: "number"} <- add {col: "number"}, {1: "literal"}
9999 mem: location 1743 is 0
9999 mem: storing 1 in location 1743
 105 run: jump {: "offset"}
9998 run: jumping to instruction 8
 105 run: {done?: "boolean"} <- equal {col: "number"}, {8: "literal"}
9999 mem: location 1743 is 1
9999 mem: storing 0 in location 1744
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1744 is 0
9998 run: jump-if fell through
 105 run: {file: ("address" "array" "character")} <- new-file {initial-position: ("address" "array" "character")}, {col: "number"}
9999 mem: location 1739 is 1760
9999 mem: location 1743 is 1
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1751
 106 run: {position: ("address" "array" "character")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1760: 4 -> 5
9999 mem: storing 1760 in location 1754
 106 run: {index: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1755
 106 run: {index: "number"} <- multiply {index: "number"}, {8: "literal"}
9999 mem: location 1755 is 1
9999 mem: storing 8 in location 1755
 106 run: {result: ("address" "array" "character")} <- new {character: "type"}, {8: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 mem: new alloc: 1846
9999 mem: storing 0 in location 1846
9999 mem: storing 0 in location 1847
9999 mem: storing 0 in location 1848
9999 mem: storing 0 in location 1849
9999 mem: storing 0 in location 1850
9999 mem: storing 0 in location 1851
9999 mem: storing 0 in location 1852
9999 mem: storing 0 in location 1853
9999 mem: storing 0 in location 1854
9999 mem: storing 0 in location 1855
9999 mem: storing 8 in location 1847
9999 mem: incrementing refcount of 1846: 0 -> 1
9999 mem: storing 1846 in location 1756
 106 run: {row: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1757
 106 run: {done?: "boolean"} <- equal {row: "number"}, {8: "literal"}
9999 mem: location 1757 is 0
9999 mem: storing 0 in location 1758
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1758 is 0
9998 run: jump-if fell through
9990 schedule: new-file/new-board/initial-position/run_1001/scenario_making-a-move
 106 run: {square: "character"} <- index {position: ("address" "array" "character"), "lookup": ()}, {index: "number"}
9999 mem: location 1754 is 1760
9999 mem: skipping refcount at 1760
9998 run: base address is 1761
9999 mem: location 1755 is 8
9998 run: address to copy is 1770
9998 run: its type is character
9999 mem: location 1770 is 78
9999 mem: storing 78 in location 1759
 106 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {row: "number"}, {square: "character"}
9999 mem: location 1756 is 1846
9999 mem: skipping refcount at 1846
9999 mem: location 1757 is 0
9998 run: address to copy to is 1848
9999 mem: location 1759 is 78
9999 mem: storing 78 in location 1848
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1757 is 0
9999 mem: storing 1 in location 1757
 106 run: {index: "number"} <- add {index: "number"}, {1: "literal"}
9999 mem: location 1755 is 8
9999 mem: storing 9 in location 1755
 106 run: jump {: "offset"}
9998 run: jumping to instruction 7
 106 run: {done?: "boolean"} <- equal {row: "number"}, {8: "literal"}
9999 mem: location 1757 is 1
9999 mem: storing 0 in location 1758
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1758 is 0
9998 run: jump-if fell through
 106 run: {square: "character"} <- index {position: ("address" "array" "character"), "lookup": ()}, {index: "number"}
9999 mem: location 1754 is 1760
9999 mem: skipping refcount at 1760
9998 run: base address is 1761
9999 mem: location 1755 is 9
9998 run: address to copy is 1771
9998 run: its type is character
9999 mem: location 1771 is 80
9999 mem: storing 80 in location 1759
 106 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {row: "number"}, {square: "character"}
9999 mem: location 1756 is 1846
9999 mem: skipping refcount at 1846
9999 mem: location 1757 is 1
9998 run: address to copy to is 1849
9999 mem: location 1759 is 80
9999 mem: storing 80 in location 1849
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1757 is 1
9999 mem: storing 2 in location 1757
 106 run: {index: "number"} <- add {index: "number"}, {1: "literal"}
9999 mem: location 1755 is 9
9999 mem: storing 10 in location 1755
 106 run: jump {: "offset"}
9998 run: jumping to instruction 7
 106 run: {done?: "boolean"} <- equal {row: "number"}, {8: "literal"}
9999 mem: location 1757 is 2
9999 mem: storing 0 in location 1758
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1758 is 0
9998 run: jump-if fell through
 106 run: {square: "character"} <- index {position: ("address" "array" "character"), "lookup": ()}, {index: "number"}
9999 mem: location 1754 is 1760
9999 mem: skipping refcount at 1760
9998 run: base address is 1761
9999 mem: location 1755 is 10
9998 run: address to copy is 1772
9998 run: its type is character
9999 mem: location 1772 is 32
9999 mem: storing 32 in location 1759
 106 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {row: "number"}, {square: "character"}
9999 mem: location 1756 is 1846
9999 mem: skipping refcount at 1846
9999 mem: location 1757 is 2
9998 run: address to copy to is 1850
9999 mem: location 1759 is 32
9999 mem: storing 32 in location 1850
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1757 is 2
9999 mem: storing 3 in location 1757
 106 run: {index: "number"} <- add {index: "number"}, {1: "literal"}
9999 mem: location 1755 is 10
9999 mem: storing 11 in location 1755
 106 run: jump {: "offset"}
9998 run: jumping to instruction 7
 106 run: {done?: "boolean"} <- equal {row: "number"}, {8: "literal"}
9999 mem: location 1757 is 3
9999 mem: storing 0 in location 1758
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1758 is 0
9998 run: jump-if fell through
 106 run: {square: "character"} <- index {position: ("address" "array" "character"), "lookup": ()}, {index: "number"}
9999 mem: location 1754 is 1760
9999 mem: skipping refcount at 1760
9998 run: base address is 1761
9999 mem: location 1755 is 11
9998 run: address to copy is 1773
9998 run: its type is character
9999 mem: location 1773 is 32
9999 mem: storing 32 in location 1759
 106 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {row: "number"}, {square: "character"}
9999 mem: location 1756 is 1846
9999 mem: skipping refcount at 1846
9999 mem: location 1757 is 3
9998 run: address to copy to is 1851
9999 mem: location 1759 is 32
9999 mem: storing 32 in location 1851
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1757 is 3
9999 mem: storing 4 in location 1757
 106 run: {index: "number"} <- add {index: "number"}, {1: "literal"}
9999 mem: location 1755 is 11
9999 mem: storing 12 in location 1755
 106 run: jump {: "offset"}
9998 run: jumping to instruction 7
 106 run: {done?: "boolean"} <- equal {row: "number"}, {8: "literal"}
9999 mem: location 1757 is 4
9999 mem: storing 0 in location 1758
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1758 is 0
9998 run: jump-if fell through
 106 run: {square: "character"} <- index {position: ("address" "array" "character"), "lookup": ()}, {index: "number"}
9999 mem: location 1754 is 1760
9999 mem: skipping refcount at 1760
9998 run: base address is 1761
9999 mem: location 1755 is 12
9998 run: address to copy is 1774
9998 run: its type is character
9999 mem: location 1774 is 32
9999 mem: storing 32 in location 1759
 106 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {row: "number"}, {square: "character"}
9999 mem: location 1756 is 1846
9999 mem: skipping refcount at 1846
9999 mem: location 1757 is 4
9998 run: address to copy to is 1852
9999 mem: location 1759 is 32
9999 mem: storing 32 in location 1852
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1757 is 4
9999 mem: storing 5 in location 1757
 106 run: {index: "number"} <- add {index: "number"}, {1: "literal"}
9999 mem: location 1755 is 12
9999 mem: storing 13 in location 1755
 106 run: jump {: "offset"}
9998 run: jumping to instruction 7
 106 run: {done?: "boolean"} <- equal {row: "number"}, {8: "literal"}
9999 mem: location 1757 is 5
9999 mem: storing 0 in location 1758
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1758 is 0
9998 run: jump-if fell through
 106 run: {square: "character"} <- index {position: ("address" "array" "character"), "lookup": ()}, {index: "number"}
9999 mem: location 1754 is 1760
9999 mem: skipping refcount at 1760
9998 run: base address is 1761
9999 mem: location 1755 is 13
9998 run: address to copy is 1775
9998 run: its type is character
9999 mem: location 1775 is 32
9999 mem: storing 32 in location 1759
 106 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {row: "number"}, {square: "character"}
9999 mem: location 1756 is 1846
9999 mem: skipping refcount at 1846
9999 mem: location 1757 is 5
9998 run: address to copy to is 1853
9999 mem: location 1759 is 32
9999 mem: storing 32 in location 1853
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1757 is 5
9999 mem: storing 6 in location 1757
 106 run: {index: "number"} <- add {index: "number"}, {1: "literal"}
9999 mem: location 1755 is 13
9999 mem: storing 14 in location 1755
 106 run: jump {: "offset"}
9998 run: jumping to instruction 7
 106 run: {done?: "boolean"} <- equal {row: "number"}, {8: "literal"}
9999 mem: location 1757 is 6
9999 mem: storing 0 in location 1758
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1758 is 0
9998 run: jump-if fell through
 106 run: {square: "character"} <- index {position: ("address" "array" "character"), "lookup": ()}, {index: "number"}
9999 mem: location 1754 is 1760
9999 mem: skipping refcount at 1760
9998 run: base address is 1761
9999 mem: location 1755 is 14
9998 run: address to copy is 1776
9998 run: its type is character
9999 mem: location 1776 is 112
9999 mem: storing 112 in location 1759
 106 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {row: "number"}, {square: "character"}
9999 mem: location 1756 is 1846
9999 mem: skipping refcount at 1846
9999 mem: location 1757 is 6
9998 run: address to copy to is 1854
9999 mem: location 1759 is 112
9999 mem: storing 112 in location 1854
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1757 is 6
9999 mem: storing 7 in location 1757
 106 run: {index: "number"} <- add {index: "number"}, {1: "literal"}
9999 mem: location 1755 is 14
9999 mem: storing 15 in location 1755
 106 run: jump {: "offset"}
9998 run: jumping to instruction 7
 106 run: {done?: "boolean"} <- equal {row: "number"}, {8: "literal"}
9999 mem: location 1757 is 7
9999 mem: storing 0 in location 1758
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1758 is 0
9998 run: jump-if fell through
 106 run: {square: "character"} <- index {position: ("address" "array" "character"), "lookup": ()}, {index: "number"}
9999 mem: location 1754 is 1760
9999 mem: skipping refcount at 1760
9998 run: base address is 1761
9999 mem: location 1755 is 15
9998 run: address to copy is 1777
9998 run: its type is character
9999 mem: location 1777 is 110
9999 mem: storing 110 in location 1759
 106 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {row: "number"}, {square: "character"}
9999 mem: location 1756 is 1846
9999 mem: skipping refcount at 1846
9999 mem: location 1757 is 7
9998 run: address to copy to is 1855
9999 mem: location 1759 is 110
9999 mem: storing 110 in location 1855
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1757 is 7
9999 mem: storing 8 in location 1757
 106 run: {index: "number"} <- add {index: "number"}, {1: "literal"}
9999 mem: location 1755 is 15
9999 mem: storing 16 in location 1755
 106 run: jump {: "offset"}
9998 run: jumping to instruction 7
 106 run: {done?: "boolean"} <- equal {row: "number"}, {8: "literal"}
9999 mem: location 1757 is 8
9999 mem: storing 1 in location 1758
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1758 is 1
9998 run: jumping to instruction 14
 106 run: reply {result: ("address" "array" "character")}
9999 mem: location 1756 is 1846
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1846
9999 mem: decrementing refcount of 1836: 3 -> 2
9999 mem: incrementing refcount of 1846: 1 -> 2
9999 mem: storing 1846 in location 1745
 105 run: {board: ("address" "array" "address" "array" "character"), "lookup": ()} <- put-index {board: ("address" "array" "address" "array" "character"), "lookup": ()}, {col: "number"}, {file: ("address" "array" "character")}
9999 mem: location 1742 is 1826
9999 mem: skipping refcount at 1826
9999 mem: location 1743 is 1
9998 run: address to copy to is 1829
9999 mem: location 1745 is 1846
9999 mem: incrementing refcount of 1846: 2 -> 3
9999 mem: storing 1846 in location 1829
 105 run: {col: "number"} <- add {col: "number"}, {1: "literal"}
9999 mem: location 1743 is 1
9999 mem: storing 2 in location 1743
 105 run: jump {: "offset"}
9998 run: jumping to instruction 8
 105 run: {done?: "boolean"} <- equal {col: "number"}, {8: "literal"}
9999 mem: location 1743 is 2
9999 mem: storing 0 in location 1744
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1744 is 0
9998 run: jump-if fell through
 105 run: {file: ("address" "array" "character")} <- new-file {initial-position: ("address" "array" "character")}, {col: "number"}
9999 mem: location 1739 is 1760
9999 mem: location 1743 is 2
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1751
 106 run: {position: ("address" "array" "character")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1760: 5 -> 6
9999 mem: storing 1760 in location 1754
 106 run: {index: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1755
 106 run: {index: "number"} <- multiply {index: "number"}, {8: "literal"}
9999 mem: location 1755 is 2
9999 mem: storing 16 in location 1755
 106 run: {result: ("address" "array" "character")} <- new {character: "type"}, {8: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 mem: new alloc: 1856
9999 mem: storing 0 in location 1856
9999 mem: storing 0 in location 1857
9999 mem: storing 0 in location 1858
9999 mem: storing 0 in location 1859
9999 mem: storing 0 in location 1860
9999 mem: storing 0 in location 1861
9999 mem: storing 0 in location 1862
9999 mem: storing 0 in location 1863
9999 mem: storing 0 in location 1864
9999 mem: storing 0 in location 1865
9999 mem: storing 8 in location 1857
9999 mem: incrementing refcount of 1856: 0 -> 1
9999 mem: storing 1856 in location 1756
 106 run: {row: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1757
 106 run: {done?: "boolean"} <- equal {row: "number"}, {8: "literal"}
9999 mem: location 1757 is 0
9999 mem: storing 0 in location 1758
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1758 is 0
9998 run: jump-if fell through
 106 run: {square: "character"} <- index {position: ("address" "array" "character"), "lookup": ()}, {index: "number"}
9999 mem: location 1754 is 1760
9999 mem: skipping refcount at 1760
9998 run: base address is 1761
9999 mem: location 1755 is 16
9998 run: address to copy is 1778
9998 run: its type is character
9999 mem: location 1778 is 66
9999 mem: storing 66 in location 1759
 106 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {row: "number"}, {square: "character"}
9999 mem: location 1756 is 1856
9999 mem: skipping refcount at 1856
9999 mem: location 1757 is 0
9998 run: address to copy to is 1858
9999 mem: location 1759 is 66
9999 mem: storing 66 in location 1858
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1757 is 0
9999 mem: storing 1 in location 1757
 106 run: {index: "number"} <- add {index: "number"}, {1: "literal"}
9999 mem: location 1755 is 16
9999 mem: storing 17 in location 1755
 106 run: jump {: "offset"}
9998 run: jumping to instruction 7
 106 run: {done?: "boolean"} <- equal {row: "number"}, {8: "literal"}
9999 mem: location 1757 is 1
9999 mem: storing 0 in location 1758
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1758 is 0
9998 run: jump-if fell through
 106 run: {square: "character"} <- index {position: ("address" "array" "character"), "lookup": ()}, {index: "number"}
9999 mem: location 1754 is 1760
9999 mem: skipping refcount at 1760
9998 run: base address is 1761
9999 mem: location 1755 is 17
9998 run: address to copy is 1779
9998 run: its type is character
9999 mem: location 1779 is 80
9999 mem: storing 80 in location 1759
 106 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {row: "number"}, {square: "character"}
9999 mem: location 1756 is 1856
9999 mem: skipping refcount at 1856
9999 mem: location 1757 is 1
9998 run: address to copy to is 1859
9999 mem: location 1759 is 80
9999 mem: storing 80 in location 1859
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1757 is 1
9999 mem: storing 2 in location 1757
 106 run: {index: "number"} <- add {index: "number"}, {1: "literal"}
9999 mem: location 1755 is 17
9999 mem: storing 18 in location 1755
 106 run: jump {: "offset"}
9998 run: jumping to instruction 7
 106 run: {done?: "boolean"} <- equal {row: "number"}, {8: "literal"}
9999 mem: location 1757 is 2
9999 mem: storing 0 in location 1758
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1758 is 0
9998 run: jump-if fell through
 106 run: {square: "character"} <- index {position: ("address" "array" "character"), "lookup": ()}, {index: "number"}
9999 mem: location 1754 is 1760
9999 mem: skipping refcount at 1760
9998 run: base address is 1761
9999 mem: location 1755 is 18
9998 run: address to copy is 1780
9998 run: its type is character
9999 mem: location 1780 is 32
9999 mem: storing 32 in location 1759
 106 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {row: "number"}, {square: "character"}
9999 mem: location 1756 is 1856
9999 mem: skipping refcount at 1856
9999 mem: location 1757 is 2
9998 run: address to copy to is 1860
9999 mem: location 1759 is 32
9999 mem: storing 32 in location 1860
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1757 is 2
9999 mem: storing 3 in location 1757
 106 run: {index: "number"} <- add {index: "number"}, {1: "literal"}
9999 mem: location 1755 is 18
9999 mem: storing 19 in location 1755
 106 run: jump {: "offset"}
9998 run: jumping to instruction 7
 106 run: {done?: "boolean"} <- equal {row: "number"}, {8: "literal"}
9999 mem: location 1757 is 3
9999 mem: storing 0 in location 1758
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1758 is 0
9998 run: jump-if fell through
 106 run: {square: "character"} <- index {position: ("address" "array" "character"), "lookup": ()}, {index: "number"}
9999 mem: location 1754 is 1760
9999 mem: skipping refcount at 1760
9998 run: base address is 1761
9999 mem: location 1755 is 19
9998 run: address to copy is 1781
9998 run: its type is character
9999 mem: location 1781 is 32
9999 mem: storing 32 in location 1759
 106 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {row: "number"}, {square: "character"}
9999 mem: location 1756 is 1856
9999 mem: skipping refcount at 1856
9999 mem: location 1757 is 3
9998 run: address to copy to is 1861
9999 mem: location 1759 is 32
9999 mem: storing 32 in location 1861
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1757 is 3
9999 mem: storing 4 in location 1757
 106 run: {index: "number"} <- add {index: "number"}, {1: "literal"}
9999 mem: location 1755 is 19
9999 mem: storing 20 in location 1755
 106 run: jump {: "offset"}
9998 run: jumping to instruction 7
 106 run: {done?: "boolean"} <- equal {row: "number"}, {8: "literal"}
9999 mem: location 1757 is 4
9999 mem: storing 0 in location 1758
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1758 is 0
9998 run: jump-if fell through
 106 run: {square: "character"} <- index {position: ("address" "array" "character"), "lookup": ()}, {index: "number"}
9999 mem: location 1754 is 1760
9999 mem: skipping refcount at 1760
9998 run: base address is 1761
9999 mem: location 1755 is 20
9998 run: address to copy is 1782
9998 run: its type is character
9999 mem: location 1782 is 32
9999 mem: storing 32 in location 1759
 106 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {row: "number"}, {square: "character"}
9999 mem: location 1756 is 1856
9999 mem: skipping refcount at 1856
9999 mem: location 1757 is 4
9998 run: address to copy to is 1862
9999 mem: location 1759 is 32
9999 mem: storing 32 in location 1862
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1757 is 4
9999 mem: storing 5 in location 1757
 106 run: {index: "number"} <- add {index: "number"}, {1: "literal"}
9999 mem: location 1755 is 20
9999 mem: storing 21 in location 1755
 106 run: jump {: "offset"}
9998 run: jumping to instruction 7
 106 run: {done?: "boolean"} <- equal {row: "number"}, {8: "literal"}
9999 mem: location 1757 is 5
9999 mem: storing 0 in location 1758
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1758 is 0
9998 run: jump-if fell through
 106 run: {square: "character"} <- index {position: ("address" "array" "character"), "lookup": ()}, {index: "number"}
9999 mem: location 1754 is 1760
9999 mem: skipping refcount at 1760
9998 run: base address is 1761
9999 mem: location 1755 is 21
9998 run: address to copy is 1783
9998 run: its type is character
9999 mem: location 1783 is 32
9999 mem: storing 32 in location 1759
 106 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {row: "number"}, {square: "character"}
9999 mem: location 1756 is 1856
9999 mem: skipping refcount at 1856
9999 mem: location 1757 is 5
9998 run: address to copy to is 1863
9999 mem: location 1759 is 32
9999 mem: storing 32 in location 1863
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1757 is 5
9999 mem: storing 6 in location 1757
 106 run: {index: "number"} <- add {index: "number"}, {1: "literal"}
9999 mem: location 1755 is 21
9999 mem: storing 22 in location 1755
 106 run: jump {: "offset"}
9998 run: jumping to instruction 7
 106 run: {done?: "boolean"} <- equal {row: "number"}, {8: "literal"}
9999 mem: location 1757 is 6
9999 mem: storing 0 in location 1758
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1758 is 0
9998 run: jump-if fell through
 106 run: {square: "character"} <- index {position: ("address" "array" "character"), "lookup": ()}, {index: "number"}
9999 mem: location 1754 is 1760
9999 mem: skipping refcount at 1760
9998 run: base address is 1761
9999 mem: location 1755 is 22
9998 run: address to copy is 1784
9998 run: its type is character
9999 mem: location 1784 is 112
9999 mem: storing 112 in location 1759
 106 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {row: "number"}, {square: "character"}
9999 mem: location 1756 is 1856
9999 mem: skipping refcount at 1856
9999 mem: location 1757 is 6
9998 run: address to copy to is 1864
9999 mem: location 1759 is 112
9999 mem: storing 112 in location 1864
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1757 is 6
9999 mem: storing 7 in location 1757
 106 run: {index: "number"} <- add {index: "number"}, {1: "literal"}
9999 mem: location 1755 is 22
9999 mem: storing 23 in location 1755
 106 run: jump {: "offset"}
9998 run: jumping to instruction 7
 106 run: {done?: "boolean"} <- equal {row: "number"}, {8: "literal"}
9999 mem: location 1757 is 7
9999 mem: storing 0 in location 1758
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1758 is 0
9998 run: jump-if fell through
 106 run: {square: "character"} <- index {position: ("address" "array" "character"), "lookup": ()}, {index: "number"}
9999 mem: location 1754 is 1760
9999 mem: skipping refcount at 1760
9998 run: base address is 1761
9999 mem: location 1755 is 23
9998 run: address to copy is 1785
9998 run: its type is character
9999 mem: location 1785 is 98
9999 mem: storing 98 in location 1759
 106 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {row: "number"}, {square: "character"}
9999 mem: location 1756 is 1856
9999 mem: skipping refcount at 1856
9999 mem: location 1757 is 7
9998 run: address to copy to is 1865
9999 mem: location 1759 is 98
9999 mem: storing 98 in location 1865
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1757 is 7
9999 mem: storing 8 in location 1757
 106 run: {index: "number"} <- add {index: "number"}, {1: "literal"}
9999 mem: location 1755 is 23
9999 mem: storing 24 in location 1755
 106 run: jump {: "offset"}
9998 run: jumping to instruction 7
 106 run: {done?: "boolean"} <- equal {row: "number"}, {8: "literal"}
9999 mem: location 1757 is 8
9999 mem: storing 1 in location 1758
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1758 is 1
9998 run: jumping to instruction 14
 106 run: reply {result: ("address" "array" "character")}
9999 mem: location 1756 is 1856
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1856
9999 mem: decrementing refcount of 1846: 3 -> 2
9999 mem: incrementing refcount of 1856: 1 -> 2
9999 mem: storing 1856 in location 1745
 105 run: {board: ("address" "array" "address" "array" "character"), "lookup": ()} <- put-index {board: ("address" "array" "address" "array" "character"), "lookup": ()}, {col: "number"}, {file: ("address" "array" "character")}
9999 mem: location 1742 is 1826
9999 mem: skipping refcount at 1826
9999 mem: location 1743 is 2
9998 run: address to copy to is 1830
9999 mem: location 1745 is 1856
9999 mem: incrementing refcount of 1856: 2 -> 3
9999 mem: storing 1856 in location 1830
 105 run: {col: "number"} <- add {col: "number"}, {1: "literal"}
9999 mem: location 1743 is 2
9999 mem: storing 3 in location 1743
 105 run: jump {: "offset"}
9998 run: jumping to instruction 8
 105 run: {done?: "boolean"} <- equal {col: "number"}, {8: "literal"}
9999 mem: location 1743 is 3
9999 mem: storing 0 in location 1744
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1744 is 0
9998 run: jump-if fell through
 105 run: {file: ("address" "array" "character")} <- new-file {initial-position: ("address" "array" "character")}, {col: "number"}
9999 mem: location 1739 is 1760
9999 mem: location 1743 is 3
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1751
 106 run: {position: ("address" "array" "character")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1760: 6 -> 7
9999 mem: storing 1760 in location 1754
 106 run: {index: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1755
 106 run: {index: "number"} <- multiply {index: "number"}, {8: "literal"}
9999 mem: location 1755 is 3
9999 mem: storing 24 in location 1755
 106 run: {result: ("address" "array" "character")} <- new {character: "type"}, {8: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 mem: new alloc: 1866
9999 mem: storing 0 in location 1866
9999 mem: storing 0 in location 1867
9999 mem: storing 0 in location 1868
9999 mem: storing 0 in location 1869
9999 mem: storing 0 in location 1870
9999 mem: storing 0 in location 1871
9999 mem: storing 0 in location 1872
9999 mem: storing 0 in location 1873
9999 mem: storing 0 in location 1874
9999 mem: storing 0 in location 1875
9999 mem: storing 8 in location 1867
9999 mem: incrementing refcount of 1866: 0 -> 1
9999 mem: storing 1866 in location 1756
 106 run: {row: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1757
 106 run: {done?: "boolean"} <- equal {row: "number"}, {8: "literal"}
9999 mem: location 1757 is 0
9999 mem: storing 0 in location 1758
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1758 is 0
9998 run: jump-if fell through
 106 run: {square: "character"} <- index {position: ("address" "array" "character"), "lookup": ()}, {index: "number"}
9999 mem: location 1754 is 1760
9999 mem: skipping refcount at 1760
9998 run: base address is 1761
9999 mem: location 1755 is 24
9998 run: address to copy is 1786
9998 run: its type is character
9999 mem: location 1786 is 81
9999 mem: storing 81 in location 1759
 106 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {row: "number"}, {square: "character"}
9999 mem: location 1756 is 1866
9999 mem: skipping refcount at 1866
9999 mem: location 1757 is 0
9998 run: address to copy to is 1868
9999 mem: location 1759 is 81
9999 mem: storing 81 in location 1868
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1757 is 0
9999 mem: storing 1 in location 1757
 106 run: {index: "number"} <- add {index: "number"}, {1: "literal"}
9999 mem: location 1755 is 24
9999 mem: storing 25 in location 1755
 106 run: jump {: "offset"}
9998 run: jumping to instruction 7
 106 run: {done?: "boolean"} <- equal {row: "number"}, {8: "literal"}
9999 mem: location 1757 is 1
9999 mem: storing 0 in location 1758
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1758 is 0
9998 run: jump-if fell through
 106 run: {square: "character"} <- index {position: ("address" "array" "character"), "lookup": ()}, {index: "number"}
9999 mem: location 1754 is 1760
9999 mem: skipping refcount at 1760
9998 run: base address is 1761
9999 mem: location 1755 is 25
9998 run: address to copy is 1787
9998 run: its type is character
9999 mem: location 1787 is 80
9999 mem: storing 80 in location 1759
 106 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {row: "number"}, {square: "character"}
9999 mem: location 1756 is 1866
9999 mem: skipping refcount at 1866
9999 mem: location 1757 is 1
9998 run: address to copy to is 1869
9999 mem: location 1759 is 80
9999 mem: storing 80 in location 1869
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1757 is 1
9999 mem: storing 2 in location 1757
 106 run: {index: "number"} <- add {index: "number"}, {1: "literal"}
9999 mem: location 1755 is 25
9999 mem: storing 26 in location 1755
 106 run: jump {: "offset"}
9998 run: jumping to instruction 7
 106 run: {done?: "boolean"} <- equal {row: "number"}, {8: "literal"}
9999 mem: location 1757 is 2
9999 mem: storing 0 in location 1758
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1758 is 0
9998 run: jump-if fell through
 106 run: {square: "character"} <- index {position: ("address" "array" "character"), "lookup": ()}, {index: "number"}
9999 mem: location 1754 is 1760
9999 mem: skipping refcount at 1760
9998 run: base address is 1761
9999 mem: location 1755 is 26
9998 run: address to copy is 1788
9998 run: its type is character
9999 mem: location 1788 is 32
9999 mem: storing 32 in location 1759
 106 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {row: "number"}, {square: "character"}
9999 mem: location 1756 is 1866
9999 mem: skipping refcount at 1866
9999 mem: location 1757 is 2
9998 run: address to copy to is 1870
9999 mem: location 1759 is 32
9999 mem: storing 32 in location 1870
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1757 is 2
9999 mem: storing 3 in location 1757
 106 run: {index: "number"} <- add {index: "number"}, {1: "literal"}
9999 mem: location 1755 is 26
9999 mem: storing 27 in location 1755
 106 run: jump {: "offset"}
9998 run: jumping to instruction 7
 106 run: {done?: "boolean"} <- equal {row: "number"}, {8: "literal"}
9999 mem: location 1757 is 3
9999 mem: storing 0 in location 1758
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1758 is 0
9998 run: jump-if fell through
 106 run: {square: "character"} <- index {position: ("address" "array" "character"), "lookup": ()}, {index: "number"}
9999 mem: location 1754 is 1760
9999 mem: skipping refcount at 1760
9998 run: base address is 1761
9999 mem: location 1755 is 27
9998 run: address to copy is 1789
9998 run: its type is character
9999 mem: location 1789 is 32
9999 mem: storing 32 in location 1759
 106 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {row: "number"}, {square: "character"}
9999 mem: location 1756 is 1866
9999 mem: skipping refcount at 1866
9999 mem: location 1757 is 3
9998 run: address to copy to is 1871
9999 mem: location 1759 is 32
9999 mem: storing 32 in location 1871
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1757 is 3
9999 mem: storing 4 in location 1757
 106 run: {index: "number"} <- add {index: "number"}, {1: "literal"}
9999 mem: location 1755 is 27
9999 mem: storing 28 in location 1755
 106 run: jump {: "offset"}
9998 run: jumping to instruction 7
 106 run: {done?: "boolean"} <- equal {row: "number"}, {8: "literal"}
9999 mem: location 1757 is 4
9999 mem: storing 0 in location 1758
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1758 is 0
9998 run: jump-if fell through
 106 run: {square: "character"} <- index {position: ("address" "array" "character"), "lookup": ()}, {index: "number"}
9999 mem: location 1754 is 1760
9999 mem: skipping refcount at 1760
9998 run: base address is 1761
9999 mem: location 1755 is 28
9998 run: address to copy is 1790
9998 run: its type is character
9999 mem: location 1790 is 32
9999 mem: storing 32 in location 1759
 106 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {row: "number"}, {square: "character"}
9999 mem: location 1756 is 1866
9999 mem: skipping refcount at 1866
9999 mem: location 1757 is 4
9998 run: address to copy to is 1872
9999 mem: location 1759 is 32
9999 mem: storing 32 in location 1872
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1757 is 4
9999 mem: storing 5 in location 1757
 106 run: {index: "number"} <- add {index: "number"}, {1: "literal"}
9999 mem: location 1755 is 28
9999 mem: storing 29 in location 1755
 106 run: jump {: "offset"}
9998 run: jumping to instruction 7
 106 run: {done?: "boolean"} <- equal {row: "number"}, {8: "literal"}
9999 mem: location 1757 is 5
9999 mem: storing 0 in location 1758
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1758 is 0
9998 run: jump-if fell through
 106 run: {square: "character"} <- index {position: ("address" "array" "character"), "lookup": ()}, {index: "number"}
9999 mem: location 1754 is 1760
9999 mem: skipping refcount at 1760
9998 run: base address is 1761
9999 mem: location 1755 is 29
9998 run: address to copy is 1791
9998 run: its type is character
9999 mem: location 1791 is 32
9999 mem: storing 32 in location 1759
 106 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {row: "number"}, {square: "character"}
9999 mem: location 1756 is 1866
9999 mem: skipping refcount at 1866
9999 mem: location 1757 is 5
9998 run: address to copy to is 1873
9999 mem: location 1759 is 32
9999 mem: storing 32 in location 1873
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1757 is 5
9999 mem: storing 6 in location 1757
 106 run: {index: "number"} <- add {index: "number"}, {1: "literal"}
9999 mem: location 1755 is 29
9999 mem: storing 30 in location 1755
 106 run: jump {: "offset"}
9998 run: jumping to instruction 7
 106 run: {done?: "boolean"} <- equal {row: "number"}, {8: "literal"}
9999 mem: location 1757 is 6
9999 mem: storing 0 in location 1758
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1758 is 0
9998 run: jump-if fell through
 106 run: {square: "character"} <- index {position: ("address" "array" "character"), "lookup": ()}, {index: "number"}
9999 mem: location 1754 is 1760
9999 mem: skipping refcount at 1760
9998 run: base address is 1761
9999 mem: location 1755 is 30
9998 run: address to copy is 1792
9998 run: its type is character
9999 mem: location 1792 is 112
9999 mem: storing 112 in location 1759
 106 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {row: "number"}, {square: "character"}
9999 mem: location 1756 is 1866
9999 mem: skipping refcount at 1866
9999 mem: location 1757 is 6
9998 run: address to copy to is 1874
9999 mem: location 1759 is 112
9999 mem: storing 112 in location 1874
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1757 is 6
9999 mem: storing 7 in location 1757
 106 run: {index: "number"} <- add {index: "number"}, {1: "literal"}
9999 mem: location 1755 is 30
9999 mem: storing 31 in location 1755
 106 run: jump {: "offset"}
9998 run: jumping to instruction 7
 106 run: {done?: "boolean"} <- equal {row: "number"}, {8: "literal"}
9999 mem: location 1757 is 7
9999 mem: storing 0 in location 1758
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1758 is 0
9998 run: jump-if fell through
 106 run: {square: "character"} <- index {position: ("address" "array" "character"), "lookup": ()}, {index: "number"}
9999 mem: location 1754 is 1760
9999 mem: skipping refcount at 1760
9998 run: base address is 1761
9999 mem: location 1755 is 31
9998 run: address to copy is 1793
9998 run: its type is character
9999 mem: location 1793 is 113
9999 mem: storing 113 in location 1759
 106 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {row: "number"}, {square: "character"}
9999 mem: location 1756 is 1866
9999 mem: skipping refcount at 1866
9999 mem: location 1757 is 7
9998 run: address to copy to is 1875
9999 mem: location 1759 is 113
9999 mem: storing 113 in location 1875
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1757 is 7
9999 mem: storing 8 in location 1757
 106 run: {index: "number"} <- add {index: "number"}, {1: "literal"}
9999 mem: location 1755 is 31
9999 mem: storing 32 in location 1755
 106 run: jump {: "offset"}
9998 run: jumping to instruction 7
 106 run: {done?: "boolean"} <- equal {row: "number"}, {8: "literal"}
9999 mem: location 1757 is 8
9999 mem: storing 1 in location 1758
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1758 is 1
9998 run: jumping to instruction 14
 106 run: reply {result: ("address" "array" "character")}
9999 mem: location 1756 is 1866
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1866
9999 mem: decrementing refcount of 1856: 3 -> 2
9999 mem: incrementing refcount of 1866: 1 -> 2
9999 mem: storing 1866 in location 1745
 105 run: {board: ("address" "array" "address" "array" "character"), "lookup": ()} <- put-index {board: ("address" "array" "address" "array" "character"), "lookup": ()}, {col: "number"}, {file: ("address" "array" "character")}
9999 mem: location 1742 is 1826
9999 mem: skipping refcount at 1826
9999 mem: location 1743 is 3
9998 run: address to copy to is 1831
9999 mem: location 1745 is 1866
9999 mem: incrementing refcount of 1866: 2 -> 3
9999 mem: storing 1866 in location 1831
 105 run: {col: "number"} <- add {col: "number"}, {1: "literal"}
9999 mem: location 1743 is 3
9999 mem: storing 4 in location 1743
 105 run: jump {: "offset"}
9998 run: jumping to instruction 8
 105 run: {done?: "boolean"} <- equal {col: "number"}, {8: "literal"}
9999 mem: location 1743 is 4
9999 mem: storing 0 in location 1744
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1744 is 0
9998 run: jump-if fell through
 105 run: {file: ("address" "array" "character")} <- new-file {initial-position: ("address" "array" "character")}, {col: "number"}
9999 mem: location 1739 is 1760
9999 mem: location 1743 is 4
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1751
 106 run: {position: ("address" "array" "character")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1760: 7 -> 8
9999 mem: storing 1760 in location 1754
 106 run: {index: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1755
 106 run: {index: "number"} <- multiply {index: "number"}, {8: "literal"}
9999 mem: location 1755 is 4
9999 mem: storing 32 in location 1755
 106 run: {result: ("address" "array" "character")} <- new {character: "type"}, {8: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 mem: new alloc: 1876
9999 mem: storing 0 in location 1876
9999 mem: storing 0 in location 1877
9999 mem: storing 0 in location 1878
9999 mem: storing 0 in location 1879
9999 mem: storing 0 in location 1880
9999 mem: storing 0 in location 1881
9999 mem: storing 0 in location 1882
9999 mem: storing 0 in location 1883
9999 mem: storing 0 in location 1884
9999 mem: storing 0 in location 1885
9999 mem: storing 8 in location 1877
9999 mem: incrementing refcount of 1876: 0 -> 1
9999 mem: storing 1876 in location 1756
 106 run: {row: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1757
 106 run: {done?: "boolean"} <- equal {row: "number"}, {8: "literal"}
9999 mem: location 1757 is 0
9999 mem: storing 0 in location 1758
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1758 is 0
9998 run: jump-if fell through
 106 run: {square: "character"} <- index {position: ("address" "array" "character"), "lookup": ()}, {index: "number"}
9999 mem: location 1754 is 1760
9999 mem: skipping refcount at 1760
9998 run: base address is 1761
9999 mem: location 1755 is 32
9998 run: address to copy is 1794
9998 run: its type is character
9999 mem: location 1794 is 75
9999 mem: storing 75 in location 1759
 106 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {row: "number"}, {square: "character"}
9999 mem: location 1756 is 1876
9999 mem: skipping refcount at 1876
9999 mem: location 1757 is 0
9998 run: address to copy to is 1878
9999 mem: location 1759 is 75
9999 mem: storing 75 in location 1878
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1757 is 0
9999 mem: storing 1 in location 1757
 106 run: {index: "number"} <- add {index: "number"}, {1: "literal"}
9999 mem: location 1755 is 32
9999 mem: storing 33 in location 1755
 106 run: jump {: "offset"}
9998 run: jumping to instruction 7
 106 run: {done?: "boolean"} <- equal {row: "number"}, {8: "literal"}
9999 mem: location 1757 is 1
9999 mem: storing 0 in location 1758
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1758 is 0
9998 run: jump-if fell through
 106 run: {square: "character"} <- index {position: ("address" "array" "character"), "lookup": ()}, {index: "number"}
9999 mem: location 1754 is 1760
9999 mem: skipping refcount at 1760
9998 run: base address is 1761
9999 mem: location 1755 is 33
9998 run: address to copy is 1795
9998 run: its type is character
9999 mem: location 1795 is 80
9999 mem: storing 80 in location 1759
 106 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {row: "number"}, {square: "character"}
9999 mem: location 1756 is 1876
9999 mem: skipping refcount at 1876
9999 mem: location 1757 is 1
9998 run: address to copy to is 1879
9999 mem: location 1759 is 80
9999 mem: storing 80 in location 1879
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1757 is 1
9999 mem: storing 2 in location 1757
 106 run: {index: "number"} <- add {index: "number"}, {1: "literal"}
9999 mem: location 1755 is 33
9999 mem: storing 34 in location 1755
 106 run: jump {: "offset"}
9998 run: jumping to instruction 7
 106 run: {done?: "boolean"} <- equal {row: "number"}, {8: "literal"}
9999 mem: location 1757 is 2
9999 mem: storing 0 in location 1758
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1758 is 0
9998 run: jump-if fell through
 106 run: {square: "character"} <- index {position: ("address" "array" "character"), "lookup": ()}, {index: "number"}
9999 mem: location 1754 is 1760
9999 mem: skipping refcount at 1760
9998 run: base address is 1761
9999 mem: location 1755 is 34
9998 run: address to copy is 1796
9998 run: its type is character
9999 mem: location 1796 is 32
9999 mem: storing 32 in location 1759
 106 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {row: "number"}, {square: "character"}
9999 mem: location 1756 is 1876
9999 mem: skipping refcount at 1876
9999 mem: location 1757 is 2
9998 run: address to copy to is 1880
9999 mem: location 1759 is 32
9999 mem: storing 32 in location 1880
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1757 is 2
9999 mem: storing 3 in location 1757
 106 run: {index: "number"} <- add {index: "number"}, {1: "literal"}
9999 mem: location 1755 is 34
9999 mem: storing 35 in location 1755
 106 run: jump {: "offset"}
9998 run: jumping to instruction 7
 106 run: {done?: "boolean"} <- equal {row: "number"}, {8: "literal"}
9999 mem: location 1757 is 3
9999 mem: storing 0 in location 1758
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1758 is 0
9998 run: jump-if fell through
 106 run: {square: "character"} <- index {position: ("address" "array" "character"), "lookup": ()}, {index: "number"}
9999 mem: location 1754 is 1760
9999 mem: skipping refcount at 1760
9998 run: base address is 1761
9999 mem: location 1755 is 35
9998 run: address to copy is 1797
9998 run: its type is character
9999 mem: location 1797 is 32
9999 mem: storing 32 in location 1759
 106 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {row: "number"}, {square: "character"}
9999 mem: location 1756 is 1876
9999 mem: skipping refcount at 1876
9999 mem: location 1757 is 3
9998 run: address to copy to is 1881
9999 mem: location 1759 is 32
9999 mem: storing 32 in location 1881
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1757 is 3
9999 mem: storing 4 in location 1757
 106 run: {index: "number"} <- add {index: "number"}, {1: "literal"}
9999 mem: location 1755 is 35
9999 mem: storing 36 in location 1755
 106 run: jump {: "offset"}
9998 run: jumping to instruction 7
 106 run: {done?: "boolean"} <- equal {row: "number"}, {8: "literal"}
9999 mem: location 1757 is 4
9999 mem: storing 0 in location 1758
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1758 is 0
9998 run: jump-if fell through
 106 run: {square: "character"} <- index {position: ("address" "array" "character"), "lookup": ()}, {index: "number"}
9999 mem: location 1754 is 1760
9999 mem: skipping refcount at 1760
9998 run: base address is 1761
9999 mem: location 1755 is 36
9998 run: address to copy is 1798
9998 run: its type is character
9999 mem: location 1798 is 32
9999 mem: storing 32 in location 1759
 106 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {row: "number"}, {square: "character"}
9999 mem: location 1756 is 1876
9999 mem: skipping refcount at 1876
9999 mem: location 1757 is 4
9998 run: address to copy to is 1882
9999 mem: location 1759 is 32
9999 mem: storing 32 in location 1882
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1757 is 4
9999 mem: storing 5 in location 1757
 106 run: {index: "number"} <- add {index: "number"}, {1: "literal"}
9999 mem: location 1755 is 36
9999 mem: storing 37 in location 1755
 106 run: jump {: "offset"}
9998 run: jumping to instruction 7
 106 run: {done?: "boolean"} <- equal {row: "number"}, {8: "literal"}
9999 mem: location 1757 is 5
9999 mem: storing 0 in location 1758
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1758 is 0
9998 run: jump-if fell through
 106 run: {square: "character"} <- index {position: ("address" "array" "character"), "lookup": ()}, {index: "number"}
9999 mem: location 1754 is 1760
9999 mem: skipping refcount at 1760
9998 run: base address is 1761
9999 mem: location 1755 is 37
9998 run: address to copy is 1799
9998 run: its type is character
9999 mem: location 1799 is 32
9999 mem: storing 32 in location 1759
 106 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {row: "number"}, {square: "character"}
9999 mem: location 1756 is 1876
9999 mem: skipping refcount at 1876
9999 mem: location 1757 is 5
9998 run: address to copy to is 1883
9999 mem: location 1759 is 32
9999 mem: storing 32 in location 1883
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1757 is 5
9999 mem: storing 6 in location 1757
 106 run: {index: "number"} <- add {index: "number"}, {1: "literal"}
9999 mem: location 1755 is 37
9999 mem: storing 38 in location 1755
 106 run: jump {: "offset"}
9998 run: jumping to instruction 7
 106 run: {done?: "boolean"} <- equal {row: "number"}, {8: "literal"}
9999 mem: location 1757 is 6
9999 mem: storing 0 in location 1758
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1758 is 0
9998 run: jump-if fell through
 106 run: {square: "character"} <- index {position: ("address" "array" "character"), "lookup": ()}, {index: "number"}
9999 mem: location 1754 is 1760
9999 mem: skipping refcount at 1760
9998 run: base address is 1761
9999 mem: location 1755 is 38
9998 run: address to copy is 1800
9998 run: its type is character
9999 mem: location 1800 is 112
9999 mem: storing 112 in location 1759
 106 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {row: "number"}, {square: "character"}
9999 mem: location 1756 is 1876
9999 mem: skipping refcount at 1876
9999 mem: location 1757 is 6
9998 run: address to copy to is 1884
9999 mem: location 1759 is 112
9999 mem: storing 112 in location 1884
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1757 is 6
9999 mem: storing 7 in location 1757
 106 run: {index: "number"} <- add {index: "number"}, {1: "literal"}
9999 mem: location 1755 is 38
9999 mem: storing 39 in location 1755
 106 run: jump {: "offset"}
9998 run: jumping to instruction 7
 106 run: {done?: "boolean"} <- equal {row: "number"}, {8: "literal"}
9999 mem: location 1757 is 7
9999 mem: storing 0 in location 1758
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1758 is 0
9998 run: jump-if fell through
 106 run: {square: "character"} <- index {position: ("address" "array" "character"), "lookup": ()}, {index: "number"}
9999 mem: location 1754 is 1760
9999 mem: skipping refcount at 1760
9998 run: base address is 1761
9999 mem: location 1755 is 39
9998 run: address to copy is 1801
9998 run: its type is character
9999 mem: location 1801 is 107
9999 mem: storing 107 in location 1759
 106 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {row: "number"}, {square: "character"}
9999 mem: location 1756 is 1876
9999 mem: skipping refcount at 1876
9999 mem: location 1757 is 7
9998 run: address to copy to is 1885
9999 mem: location 1759 is 107
9999 mem: storing 107 in location 1885
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1757 is 7
9999 mem: storing 8 in location 1757
 106 run: {index: "number"} <- add {index: "number"}, {1: "literal"}
9999 mem: location 1755 is 39
9999 mem: storing 40 in location 1755
 106 run: jump {: "offset"}
9998 run: jumping to instruction 7
 106 run: {done?: "boolean"} <- equal {row: "number"}, {8: "literal"}
9999 mem: location 1757 is 8
9999 mem: storing 1 in location 1758
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1758 is 1
9998 run: jumping to instruction 14
 106 run: reply {result: ("address" "array" "character")}
9999 mem: location 1756 is 1876
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1876
9999 mem: decrementing refcount of 1866: 3 -> 2
9999 mem: incrementing refcount of 1876: 1 -> 2
9999 mem: storing 1876 in location 1745
 105 run: {board: ("address" "array" "address" "array" "character"), "lookup": ()} <- put-index {board: ("address" "array" "address" "array" "character"), "lookup": ()}, {col: "number"}, {file: ("address" "array" "character")}
9999 mem: location 1742 is 1826
9999 mem: skipping refcount at 1826
9999 mem: location 1743 is 4
9998 run: address to copy to is 1832
9999 mem: location 1745 is 1876
9999 mem: incrementing refcount of 1876: 2 -> 3
9999 mem: storing 1876 in location 1832
 105 run: {col: "number"} <- add {col: "number"}, {1: "literal"}
9999 mem: location 1743 is 4
9999 mem: storing 5 in location 1743
 105 run: jump {: "offset"}
9998 run: jumping to instruction 8
 105 run: {done?: "boolean"} <- equal {col: "number"}, {8: "literal"}
9999 mem: location 1743 is 5
9999 mem: storing 0 in location 1744
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1744 is 0
9998 run: jump-if fell through
 105 run: {file: ("address" "array" "character")} <- new-file {initial-position: ("address" "array" "character")}, {col: "number"}
9999 mem: location 1739 is 1760
9999 mem: location 1743 is 5
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1751
 106 run: {position: ("address" "array" "character")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1760: 8 -> 9
9999 mem: storing 1760 in location 1754
 106 run: {index: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1755
 106 run: {index: "number"} <- multiply {index: "number"}, {8: "literal"}
9999 mem: location 1755 is 5
9999 mem: storing 40 in location 1755
 106 run: {result: ("address" "array" "character")} <- new {character: "type"}, {8: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 mem: new alloc: 1886
9999 mem: storing 0 in location 1886
9999 mem: storing 0 in location 1887
9999 mem: storing 0 in location 1888
9999 mem: storing 0 in location 1889
9999 mem: storing 0 in location 1890
9999 mem: storing 0 in location 1891
9999 mem: storing 0 in location 1892
9999 mem: storing 0 in location 1893
9999 mem: storing 0 in location 1894
9999 mem: storing 0 in location 1895
9999 mem: storing 8 in location 1887
9999 mem: incrementing refcount of 1886: 0 -> 1
9999 mem: storing 1886 in location 1756
 106 run: {row: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1757
 106 run: {done?: "boolean"} <- equal {row: "number"}, {8: "literal"}
9999 mem: location 1757 is 0
9999 mem: storing 0 in location 1758
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1758 is 0
9998 run: jump-if fell through
 106 run: {square: "character"} <- index {position: ("address" "array" "character"), "lookup": ()}, {index: "number"}
9999 mem: location 1754 is 1760
9999 mem: skipping refcount at 1760
9998 run: base address is 1761
9999 mem: location 1755 is 40
9998 run: address to copy is 1802
9998 run: its type is character
9999 mem: location 1802 is 66
9999 mem: storing 66 in location 1759
 106 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {row: "number"}, {square: "character"}
9999 mem: location 1756 is 1886
9999 mem: skipping refcount at 1886
9999 mem: location 1757 is 0
9998 run: address to copy to is 1888
9999 mem: location 1759 is 66
9999 mem: storing 66 in location 1888
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1757 is 0
9999 mem: storing 1 in location 1757
 106 run: {index: "number"} <- add {index: "number"}, {1: "literal"}
9999 mem: location 1755 is 40
9999 mem: storing 41 in location 1755
 106 run: jump {: "offset"}
9998 run: jumping to instruction 7
 106 run: {done?: "boolean"} <- equal {row: "number"}, {8: "literal"}
9999 mem: location 1757 is 1
9999 mem: storing 0 in location 1758
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1758 is 0
9998 run: jump-if fell through
 106 run: {square: "character"} <- index {position: ("address" "array" "character"), "lookup": ()}, {index: "number"}
9999 mem: location 1754 is 1760
9999 mem: skipping refcount at 1760
9998 run: base address is 1761
9999 mem: location 1755 is 41
9998 run: address to copy is 1803
9998 run: its type is character
9999 mem: location 1803 is 80
9999 mem: storing 80 in location 1759
 106 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {row: "number"}, {square: "character"}
9999 mem: location 1756 is 1886
9999 mem: skipping refcount at 1886
9999 mem: location 1757 is 1
9998 run: address to copy to is 1889
9999 mem: location 1759 is 80
9999 mem: storing 80 in location 1889
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1757 is 1
9999 mem: storing 2 in location 1757
 106 run: {index: "number"} <- add {index: "number"}, {1: "literal"}
9999 mem: location 1755 is 41
9999 mem: storing 42 in location 1755
 106 run: jump {: "offset"}
9998 run: jumping to instruction 7
 106 run: {done?: "boolean"} <- equal {row: "number"}, {8: "literal"}
9999 mem: location 1757 is 2
9999 mem: storing 0 in location 1758
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1758 is 0
9998 run: jump-if fell through
 106 run: {square: "character"} <- index {position: ("address" "array" "character"), "lookup": ()}, {index: "number"}
9999 mem: location 1754 is 1760
9999 mem: skipping refcount at 1760
9998 run: base address is 1761
9999 mem: location 1755 is 42
9998 run: address to copy is 1804
9998 run: its type is character
9999 mem: location 1804 is 32
9999 mem: storing 32 in location 1759
 106 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {row: "number"}, {square: "character"}
9999 mem: location 1756 is 1886
9999 mem: skipping refcount at 1886
9999 mem: location 1757 is 2
9998 run: address to copy to is 1890
9999 mem: location 1759 is 32
9999 mem: storing 32 in location 1890
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1757 is 2
9999 mem: storing 3 in location 1757
 106 run: {index: "number"} <- add {index: "number"}, {1: "literal"}
9999 mem: location 1755 is 42
9999 mem: storing 43 in location 1755
 106 run: jump {: "offset"}
9998 run: jumping to instruction 7
 106 run: {done?: "boolean"} <- equal {row: "number"}, {8: "literal"}
9999 mem: location 1757 is 3
9999 mem: storing 0 in location 1758
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1758 is 0
9998 run: jump-if fell through
 106 run: {square: "character"} <- index {position: ("address" "array" "character"), "lookup": ()}, {index: "number"}
9999 mem: location 1754 is 1760
9999 mem: skipping refcount at 1760
9998 run: base address is 1761
9999 mem: location 1755 is 43
9998 run: address to copy is 1805
9998 run: its type is character
9999 mem: location 1805 is 32
9999 mem: storing 32 in location 1759
 106 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {row: "number"}, {square: "character"}
9999 mem: location 1756 is 1886
9999 mem: skipping refcount at 1886
9999 mem: location 1757 is 3
9998 run: address to copy to is 1891
9999 mem: location 1759 is 32
9999 mem: storing 32 in location 1891
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1757 is 3
9999 mem: storing 4 in location 1757
 106 run: {index: "number"} <- add {index: "number"}, {1: "literal"}
9999 mem: location 1755 is 43
9999 mem: storing 44 in location 1755
 106 run: jump {: "offset"}
9998 run: jumping to instruction 7
 106 run: {done?: "boolean"} <- equal {row: "number"}, {8: "literal"}
9999 mem: location 1757 is 4
9999 mem: storing 0 in location 1758
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1758 is 0
9998 run: jump-if fell through
 106 run: {square: "character"} <- index {position: ("address" "array" "character"), "lookup": ()}, {index: "number"}
9999 mem: location 1754 is 1760
9999 mem: skipping refcount at 1760
9998 run: base address is 1761
9999 mem: location 1755 is 44
9998 run: address to copy is 1806
9998 run: its type is character
9999 mem: location 1806 is 32
9999 mem: storing 32 in location 1759
 106 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {row: "number"}, {square: "character"}
9999 mem: location 1756 is 1886
9999 mem: skipping refcount at 1886
9999 mem: location 1757 is 4
9998 run: address to copy to is 1892
9999 mem: location 1759 is 32
9999 mem: storing 32 in location 1892
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1757 is 4
9999 mem: storing 5 in location 1757
 106 run: {index: "number"} <- add {index: "number"}, {1: "literal"}
9999 mem: location 1755 is 44
9999 mem: storing 45 in location 1755
 106 run: jump {: "offset"}
9998 run: jumping to instruction 7
 106 run: {done?: "boolean"} <- equal {row: "number"}, {8: "literal"}
9999 mem: location 1757 is 5
9999 mem: storing 0 in location 1758
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1758 is 0
9998 run: jump-if fell through
 106 run: {square: "character"} <- index {position: ("address" "array" "character"), "lookup": ()}, {index: "number"}
9999 mem: location 1754 is 1760
9999 mem: skipping refcount at 1760
9998 run: base address is 1761
9999 mem: location 1755 is 45
9998 run: address to copy is 1807
9998 run: its type is character
9999 mem: location 1807 is 32
9999 mem: storing 32 in location 1759
 106 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {row: "number"}, {square: "character"}
9999 mem: location 1756 is 1886
9999 mem: skipping refcount at 1886
9999 mem: location 1757 is 5
9998 run: address to copy to is 1893
9999 mem: location 1759 is 32
9999 mem: storing 32 in location 1893
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1757 is 5
9999 mem: storing 6 in location 1757
 106 run: {index: "number"} <- add {index: "number"}, {1: "literal"}
9999 mem: location 1755 is 45
9999 mem: storing 46 in location 1755
 106 run: jump {: "offset"}
9998 run: jumping to instruction 7
 106 run: {done?: "boolean"} <- equal {row: "number"}, {8: "literal"}
9999 mem: location 1757 is 6
9999 mem: storing 0 in location 1758
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1758 is 0
9998 run: jump-if fell through
 106 run: {square: "character"} <- index {position: ("address" "array" "character"), "lookup": ()}, {index: "number"}
9999 mem: location 1754 is 1760
9999 mem: skipping refcount at 1760
9998 run: base address is 1761
9999 mem: location 1755 is 46
9998 run: address to copy is 1808
9998 run: its type is character
9999 mem: location 1808 is 112
9999 mem: storing 112 in location 1759
 106 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {row: "number"}, {square: "character"}
9999 mem: location 1756 is 1886
9999 mem: skipping refcount at 1886
9999 mem: location 1757 is 6
9998 run: address to copy to is 1894
9999 mem: location 1759 is 112
9999 mem: storing 112 in location 1894
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1757 is 6
9999 mem: storing 7 in location 1757
 106 run: {index: "number"} <- add {index: "number"}, {1: "literal"}
9999 mem: location 1755 is 46
9999 mem: storing 47 in location 1755
 106 run: jump {: "offset"}
9998 run: jumping to instruction 7
 106 run: {done?: "boolean"} <- equal {row: "number"}, {8: "literal"}
9999 mem: location 1757 is 7
9999 mem: storing 0 in location 1758
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1758 is 0
9998 run: jump-if fell through
 106 run: {square: "character"} <- index {position: ("address" "array" "character"), "lookup": ()}, {index: "number"}
9999 mem: location 1754 is 1760
9999 mem: skipping refcount at 1760
9998 run: base address is 1761
9999 mem: location 1755 is 47
9998 run: address to copy is 1809
9998 run: its type is character
9999 mem: location 1809 is 98
9999 mem: storing 98 in location 1759
 106 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {row: "number"}, {square: "character"}
9999 mem: location 1756 is 1886
9999 mem: skipping refcount at 1886
9999 mem: location 1757 is 7
9998 run: address to copy to is 1895
9999 mem: location 1759 is 98
9999 mem: storing 98 in location 1895
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1757 is 7
9999 mem: storing 8 in location 1757
 106 run: {index: "number"} <- add {index: "number"}, {1: "literal"}
9999 mem: location 1755 is 47
9999 mem: storing 48 in location 1755
 106 run: jump {: "offset"}
9998 run: jumping to instruction 7
 106 run: {done?: "boolean"} <- equal {row: "number"}, {8: "literal"}
9999 mem: location 1757 is 8
9999 mem: storing 1 in location 1758
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1758 is 1
9998 run: jumping to instruction 14
 106 run: reply {result: ("address" "array" "character")}
9999 mem: location 1756 is 1886
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1886
9999 mem: decrementing refcount of 1876: 3 -> 2
9999 mem: incrementing refcount of 1886: 1 -> 2
9999 mem: storing 1886 in location 1745
 105 run: {board: ("address" "array" "address" "array" "character"), "lookup": ()} <- put-index {board: ("address" "array" "address" "array" "character"), "lookup": ()}, {col: "number"}, {file: ("address" "array" "character")}
9999 mem: location 1742 is 1826
9999 mem: skipping refcount at 1826
9999 mem: location 1743 is 5
9998 run: address to copy to is 1833
9999 mem: location 1745 is 1886
9999 mem: incrementing refcount of 1886: 2 -> 3
9999 mem: storing 1886 in location 1833
 105 run: {col: "number"} <- add {col: "number"}, {1: "literal"}
9999 mem: location 1743 is 5
9999 mem: storing 6 in location 1743
 105 run: jump {: "offset"}
9998 run: jumping to instruction 8
 105 run: {done?: "boolean"} <- equal {col: "number"}, {8: "literal"}
9999 mem: location 1743 is 6
9999 mem: storing 0 in location 1744
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1744 is 0
9998 run: jump-if fell through
 105 run: {file: ("address" "array" "character")} <- new-file {initial-position: ("address" "array" "character")}, {col: "number"}
9999 mem: location 1739 is 1760
9999 mem: location 1743 is 6
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1751
 106 run: {position: ("address" "array" "character")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1760: 9 -> 10
9999 mem: storing 1760 in location 1754
 106 run: {index: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 6 in location 1755
 106 run: {index: "number"} <- multiply {index: "number"}, {8: "literal"}
9999 mem: location 1755 is 6
9999 mem: storing 48 in location 1755
 106 run: {result: ("address" "array" "character")} <- new {character: "type"}, {8: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 mem: new alloc: 1896
9999 mem: storing 0 in location 1896
9999 mem: storing 0 in location 1897
9999 mem: storing 0 in location 1898
9999 mem: storing 0 in location 1899
9999 mem: storing 0 in location 1900
9999 mem: storing 0 in location 1901
9999 mem: storing 0 in location 1902
9999 mem: storing 0 in location 1903
9999 mem: storing 0 in location 1904
9999 mem: storing 0 in location 1905
9999 mem: storing 8 in location 1897
9999 mem: incrementing refcount of 1896: 0 -> 1
9999 mem: storing 1896 in location 1756
 106 run: {row: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1757
 106 run: {done?: "boolean"} <- equal {row: "number"}, {8: "literal"}
9999 mem: location 1757 is 0
9999 mem: storing 0 in location 1758
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1758 is 0
9998 run: jump-if fell through
 106 run: {square: "character"} <- index {position: ("address" "array" "character"), "lookup": ()}, {index: "number"}
9999 mem: location 1754 is 1760
9999 mem: skipping refcount at 1760
9998 run: base address is 1761
9999 mem: location 1755 is 48
9998 run: address to copy is 1810
9998 run: its type is character
9999 mem: location 1810 is 78
9999 mem: storing 78 in location 1759
 106 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {row: "number"}, {square: "character"}
9999 mem: location 1756 is 1896
9999 mem: skipping refcount at 1896
9999 mem: location 1757 is 0
9998 run: address to copy to is 1898
9999 mem: location 1759 is 78
9999 mem: storing 78 in location 1898
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1757 is 0
9999 mem: storing 1 in location 1757
 106 run: {index: "number"} <- add {index: "number"}, {1: "literal"}
9999 mem: location 1755 is 48
9999 mem: storing 49 in location 1755
 106 run: jump {: "offset"}
9998 run: jumping to instruction 7
 106 run: {done?: "boolean"} <- equal {row: "number"}, {8: "literal"}
9999 mem: location 1757 is 1
9999 mem: storing 0 in location 1758
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1758 is 0
9998 run: jump-if fell through
 106 run: {square: "character"} <- index {position: ("address" "array" "character"), "lookup": ()}, {index: "number"}
9999 mem: location 1754 is 1760
9999 mem: skipping refcount at 1760
9998 run: base address is 1761
9999 mem: location 1755 is 49
9998 run: address to copy is 1811
9998 run: its type is character
9999 mem: location 1811 is 80
9999 mem: storing 80 in location 1759
 106 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {row: "number"}, {square: "character"}
9999 mem: location 1756 is 1896
9999 mem: skipping refcount at 1896
9999 mem: location 1757 is 1
9998 run: address to copy to is 1899
9999 mem: location 1759 is 80
9999 mem: storing 80 in location 1899
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1757 is 1
9999 mem: storing 2 in location 1757
 106 run: {index: "number"} <- add {index: "number"}, {1: "literal"}
9999 mem: location 1755 is 49
9999 mem: storing 50 in location 1755
 106 run: jump {: "offset"}
9998 run: jumping to instruction 7
 106 run: {done?: "boolean"} <- equal {row: "number"}, {8: "literal"}
9999 mem: location 1757 is 2
9999 mem: storing 0 in location 1758
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1758 is 0
9998 run: jump-if fell through
 106 run: {square: "character"} <- index {position: ("address" "array" "character"), "lookup": ()}, {index: "number"}
9999 mem: location 1754 is 1760
9999 mem: skipping refcount at 1760
9998 run: base address is 1761
9999 mem: location 1755 is 50
9998 run: address to copy is 1812
9998 run: its type is character
9999 mem: location 1812 is 32
9999 mem: storing 32 in location 1759
 106 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {row: "number"}, {square: "character"}
9999 mem: location 1756 is 1896
9999 mem: skipping refcount at 1896
9999 mem: location 1757 is 2
9998 run: address to copy to is 1900
9999 mem: location 1759 is 32
9999 mem: storing 32 in location 1900
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1757 is 2
9999 mem: storing 3 in location 1757
 106 run: {index: "number"} <- add {index: "number"}, {1: "literal"}
9999 mem: location 1755 is 50
9999 mem: storing 51 in location 1755
 106 run: jump {: "offset"}
9998 run: jumping to instruction 7
 106 run: {done?: "boolean"} <- equal {row: "number"}, {8: "literal"}
9999 mem: location 1757 is 3
9999 mem: storing 0 in location 1758
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1758 is 0
9998 run: jump-if fell through
 106 run: {square: "character"} <- index {position: ("address" "array" "character"), "lookup": ()}, {index: "number"}
9999 mem: location 1754 is 1760
9999 mem: skipping refcount at 1760
9998 run: base address is 1761
9999 mem: location 1755 is 51
9998 run: address to copy is 1813
9998 run: its type is character
9999 mem: location 1813 is 32
9999 mem: storing 32 in location 1759
 106 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {row: "number"}, {square: "character"}
9999 mem: location 1756 is 1896
9999 mem: skipping refcount at 1896
9999 mem: location 1757 is 3
9998 run: address to copy to is 1901
9999 mem: location 1759 is 32
9999 mem: storing 32 in location 1901
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1757 is 3
9999 mem: storing 4 in location 1757
 106 run: {index: "number"} <- add {index: "number"}, {1: "literal"}
9999 mem: location 1755 is 51
9999 mem: storing 52 in location 1755
 106 run: jump {: "offset"}
9998 run: jumping to instruction 7
 106 run: {done?: "boolean"} <- equal {row: "number"}, {8: "literal"}
9999 mem: location 1757 is 4
9999 mem: storing 0 in location 1758
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1758 is 0
9998 run: jump-if fell through
 106 run: {square: "character"} <- index {position: ("address" "array" "character"), "lookup": ()}, {index: "number"}
9999 mem: location 1754 is 1760
9999 mem: skipping refcount at 1760
9998 run: base address is 1761
9999 mem: location 1755 is 52
9998 run: address to copy is 1814
9998 run: its type is character
9999 mem: location 1814 is 32
9999 mem: storing 32 in location 1759
 106 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {row: "number"}, {square: "character"}
9999 mem: location 1756 is 1896
9999 mem: skipping refcount at 1896
9999 mem: location 1757 is 4
9998 run: address to copy to is 1902
9999 mem: location 1759 is 32
9999 mem: storing 32 in location 1902
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1757 is 4
9999 mem: storing 5 in location 1757
 106 run: {index: "number"} <- add {index: "number"}, {1: "literal"}
9999 mem: location 1755 is 52
9999 mem: storing 53 in location 1755
 106 run: jump {: "offset"}
9998 run: jumping to instruction 7
 106 run: {done?: "boolean"} <- equal {row: "number"}, {8: "literal"}
9999 mem: location 1757 is 5
9999 mem: storing 0 in location 1758
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1758 is 0
9998 run: jump-if fell through
 106 run: {square: "character"} <- index {position: ("address" "array" "character"), "lookup": ()}, {index: "number"}
9999 mem: location 1754 is 1760
9999 mem: skipping refcount at 1760
9998 run: base address is 1761
9999 mem: location 1755 is 53
9998 run: address to copy is 1815
9998 run: its type is character
9999 mem: location 1815 is 32
9999 mem: storing 32 in location 1759
 106 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {row: "number"}, {square: "character"}
9999 mem: location 1756 is 1896
9999 mem: skipping refcount at 1896
9999 mem: location 1757 is 5
9998 run: address to copy to is 1903
9999 mem: location 1759 is 32
9999 mem: storing 32 in location 1903
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1757 is 5
9999 mem: storing 6 in location 1757
 106 run: {index: "number"} <- add {index: "number"}, {1: "literal"}
9999 mem: location 1755 is 53
9999 mem: storing 54 in location 1755
 106 run: jump {: "offset"}
9998 run: jumping to instruction 7
 106 run: {done?: "boolean"} <- equal {row: "number"}, {8: "literal"}
9999 mem: location 1757 is 6
9999 mem: storing 0 in location 1758
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1758 is 0
9998 run: jump-if fell through
 106 run: {square: "character"} <- index {position: ("address" "array" "character"), "lookup": ()}, {index: "number"}
9999 mem: location 1754 is 1760
9999 mem: skipping refcount at 1760
9998 run: base address is 1761
9999 mem: location 1755 is 54
9998 run: address to copy is 1816
9998 run: its type is character
9999 mem: location 1816 is 112
9999 mem: storing 112 in location 1759
 106 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {row: "number"}, {square: "character"}
9999 mem: location 1756 is 1896
9999 mem: skipping refcount at 1896
9999 mem: location 1757 is 6
9998 run: address to copy to is 1904
9999 mem: location 1759 is 112
9999 mem: storing 112 in location 1904
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1757 is 6
9999 mem: storing 7 in location 1757
 106 run: {index: "number"} <- add {index: "number"}, {1: "literal"}
9999 mem: location 1755 is 54
9999 mem: storing 55 in location 1755
 106 run: jump {: "offset"}
9998 run: jumping to instruction 7
 106 run: {done?: "boolean"} <- equal {row: "number"}, {8: "literal"}
9999 mem: location 1757 is 7
9999 mem: storing 0 in location 1758
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1758 is 0
9998 run: jump-if fell through
 106 run: {square: "character"} <- index {position: ("address" "array" "character"), "lookup": ()}, {index: "number"}
9999 mem: location 1754 is 1760
9999 mem: skipping refcount at 1760
9998 run: base address is 1761
9999 mem: location 1755 is 55
9998 run: address to copy is 1817
9998 run: its type is character
9999 mem: location 1817 is 110
9999 mem: storing 110 in location 1759
 106 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {row: "number"}, {square: "character"}
9999 mem: location 1756 is 1896
9999 mem: skipping refcount at 1896
9999 mem: location 1757 is 7
9998 run: address to copy to is 1905
9999 mem: location 1759 is 110
9999 mem: storing 110 in location 1905
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1757 is 7
9999 mem: storing 8 in location 1757
 106 run: {index: "number"} <- add {index: "number"}, {1: "literal"}
9999 mem: location 1755 is 55
9999 mem: storing 56 in location 1755
 106 run: jump {: "offset"}
9998 run: jumping to instruction 7
 106 run: {done?: "boolean"} <- equal {row: "number"}, {8: "literal"}
9999 mem: location 1757 is 8
9999 mem: storing 1 in location 1758
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1758 is 1
9998 run: jumping to instruction 14
 106 run: reply {result: ("address" "array" "character")}
9999 mem: location 1756 is 1896
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1896
9999 mem: decrementing refcount of 1886: 3 -> 2
9999 mem: incrementing refcount of 1896: 1 -> 2
9999 mem: storing 1896 in location 1745
 105 run: {board: ("address" "array" "address" "array" "character"), "lookup": ()} <- put-index {board: ("address" "array" "address" "array" "character"), "lookup": ()}, {col: "number"}, {file: ("address" "array" "character")}
9999 mem: location 1742 is 1826
9999 mem: skipping refcount at 1826
9999 mem: location 1743 is 6
9998 run: address to copy to is 1834
9999 mem: location 1745 is 1896
9999 mem: incrementing refcount of 1896: 2 -> 3
9999 mem: storing 1896 in location 1834
 105 run: {col: "number"} <- add {col: "number"}, {1: "literal"}
9999 mem: location 1743 is 6
9999 mem: storing 7 in location 1743
 105 run: jump {: "offset"}
9998 run: jumping to instruction 8
 105 run: {done?: "boolean"} <- equal {col: "number"}, {8: "literal"}
9999 mem: location 1743 is 7
9999 mem: storing 0 in location 1744
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1744 is 0
9998 run: jump-if fell through
 105 run: {file: ("address" "array" "character")} <- new-file {initial-position: ("address" "array" "character")}, {col: "number"}
9999 mem: location 1739 is 1760
9999 mem: location 1743 is 7
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1751
 106 run: {position: ("address" "array" "character")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1760: 10 -> 11
9999 mem: storing 1760 in location 1754
 106 run: {index: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1755
 106 run: {index: "number"} <- multiply {index: "number"}, {8: "literal"}
9999 mem: location 1755 is 7
9999 mem: storing 56 in location 1755
 106 run: {result: ("address" "array" "character")} <- new {character: "type"}, {8: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 mem: new alloc: 1906
9999 mem: storing 0 in location 1906
9999 mem: storing 0 in location 1907
9999 mem: storing 0 in location 1908
9999 mem: storing 0 in location 1909
9999 mem: storing 0 in location 1910
9999 mem: storing 0 in location 1911
9999 mem: storing 0 in location 1912
9999 mem: storing 0 in location 1913
9999 mem: storing 0 in location 1914
9999 mem: storing 0 in location 1915
9999 mem: storing 8 in location 1907
9999 mem: incrementing refcount of 1906: 0 -> 1
9999 mem: storing 1906 in location 1756
 106 run: {row: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1757
 106 run: {done?: "boolean"} <- equal {row: "number"}, {8: "literal"}
9999 mem: location 1757 is 0
9999 mem: storing 0 in location 1758
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1758 is 0
9998 run: jump-if fell through
 106 run: {square: "character"} <- index {position: ("address" "array" "character"), "lookup": ()}, {index: "number"}
9999 mem: location 1754 is 1760
9999 mem: skipping refcount at 1760
9998 run: base address is 1761
9999 mem: location 1755 is 56
9998 run: address to copy is 1818
9998 run: its type is character
9999 mem: location 1818 is 82
9999 mem: storing 82 in location 1759
 106 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {row: "number"}, {square: "character"}
9999 mem: location 1756 is 1906
9999 mem: skipping refcount at 1906
9999 mem: location 1757 is 0
9998 run: address to copy to is 1908
9999 mem: location 1759 is 82
9999 mem: storing 82 in location 1908
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1757 is 0
9999 mem: storing 1 in location 1757
 106 run: {index: "number"} <- add {index: "number"}, {1: "literal"}
9999 mem: location 1755 is 56
9999 mem: storing 57 in location 1755
 106 run: jump {: "offset"}
9998 run: jumping to instruction 7
 106 run: {done?: "boolean"} <- equal {row: "number"}, {8: "literal"}
9999 mem: location 1757 is 1
9999 mem: storing 0 in location 1758
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1758 is 0
9998 run: jump-if fell through
 106 run: {square: "character"} <- index {position: ("address" "array" "character"), "lookup": ()}, {index: "number"}
9999 mem: location 1754 is 1760
9999 mem: skipping refcount at 1760
9998 run: base address is 1761
9999 mem: location 1755 is 57
9998 run: address to copy is 1819
9998 run: its type is character
9999 mem: location 1819 is 80
9999 mem: storing 80 in location 1759
 106 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {row: "number"}, {square: "character"}
9999 mem: location 1756 is 1906
9999 mem: skipping refcount at 1906
9999 mem: location 1757 is 1
9998 run: address to copy to is 1909
9999 mem: location 1759 is 80
9999 mem: storing 80 in location 1909
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1757 is 1
9999 mem: storing 2 in location 1757
 106 run: {index: "number"} <- add {index: "number"}, {1: "literal"}
9999 mem: location 1755 is 57
9999 mem: storing 58 in location 1755
 106 run: jump {: "offset"}
9998 run: jumping to instruction 7
 106 run: {done?: "boolean"} <- equal {row: "number"}, {8: "literal"}
9999 mem: location 1757 is 2
9999 mem: storing 0 in location 1758
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1758 is 0
9998 run: jump-if fell through
 106 run: {square: "character"} <- index {position: ("address" "array" "character"), "lookup": ()}, {index: "number"}
9999 mem: location 1754 is 1760
9999 mem: skipping refcount at 1760
9998 run: base address is 1761
9999 mem: location 1755 is 58
9998 run: address to copy is 1820
9998 run: its type is character
9999 mem: location 1820 is 32
9999 mem: storing 32 in location 1759
 106 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {row: "number"}, {square: "character"}
9999 mem: location 1756 is 1906
9999 mem: skipping refcount at 1906
9999 mem: location 1757 is 2
9998 run: address to copy to is 1910
9999 mem: location 1759 is 32
9999 mem: storing 32 in location 1910
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1757 is 2
9999 mem: storing 3 in location 1757
 106 run: {index: "number"} <- add {index: "number"}, {1: "literal"}
9999 mem: location 1755 is 58
9999 mem: storing 59 in location 1755
 106 run: jump {: "offset"}
9998 run: jumping to instruction 7
 106 run: {done?: "boolean"} <- equal {row: "number"}, {8: "literal"}
9999 mem: location 1757 is 3
9999 mem: storing 0 in location 1758
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1758 is 0
9998 run: jump-if fell through
 106 run: {square: "character"} <- index {position: ("address" "array" "character"), "lookup": ()}, {index: "number"}
9999 mem: location 1754 is 1760
9999 mem: skipping refcount at 1760
9998 run: base address is 1761
9999 mem: location 1755 is 59
9998 run: address to copy is 1821
9998 run: its type is character
9999 mem: location 1821 is 32
9999 mem: storing 32 in location 1759
 106 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {row: "number"}, {square: "character"}
9999 mem: location 1756 is 1906
9999 mem: skipping refcount at 1906
9999 mem: location 1757 is 3
9998 run: address to copy to is 1911
9999 mem: location 1759 is 32
9999 mem: storing 32 in location 1911
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1757 is 3
9999 mem: storing 4 in location 1757
 106 run: {index: "number"} <- add {index: "number"}, {1: "literal"}
9999 mem: location 1755 is 59
9999 mem: storing 60 in location 1755
 106 run: jump {: "offset"}
9998 run: jumping to instruction 7
 106 run: {done?: "boolean"} <- equal {row: "number"}, {8: "literal"}
9999 mem: location 1757 is 4
9999 mem: storing 0 in location 1758
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1758 is 0
9998 run: jump-if fell through
 106 run: {square: "character"} <- index {position: ("address" "array" "character"), "lookup": ()}, {index: "number"}
9999 mem: location 1754 is 1760
9999 mem: skipping refcount at 1760
9998 run: base address is 1761
9999 mem: location 1755 is 60
9998 run: address to copy is 1822
9998 run: its type is character
9999 mem: location 1822 is 32
9999 mem: storing 32 in location 1759
 106 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {row: "number"}, {square: "character"}
9999 mem: location 1756 is 1906
9999 mem: skipping refcount at 1906
9999 mem: location 1757 is 4
9998 run: address to copy to is 1912
9999 mem: location 1759 is 32
9999 mem: storing 32 in location 1912
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1757 is 4
9999 mem: storing 5 in location 1757
 106 run: {index: "number"} <- add {index: "number"}, {1: "literal"}
9999 mem: location 1755 is 60
9999 mem: storing 61 in location 1755
 106 run: jump {: "offset"}
9998 run: jumping to instruction 7
 106 run: {done?: "boolean"} <- equal {row: "number"}, {8: "literal"}
9999 mem: location 1757 is 5
9999 mem: storing 0 in location 1758
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1758 is 0
9998 run: jump-if fell through
 106 run: {square: "character"} <- index {position: ("address" "array" "character"), "lookup": ()}, {index: "number"}
9999 mem: location 1754 is 1760
9999 mem: skipping refcount at 1760
9998 run: base address is 1761
9999 mem: location 1755 is 61
9998 run: address to copy is 1823
9998 run: its type is character
9999 mem: location 1823 is 32
9999 mem: storing 32 in location 1759
 106 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {row: "number"}, {square: "character"}
9999 mem: location 1756 is 1906
9999 mem: skipping refcount at 1906
9999 mem: location 1757 is 5
9998 run: address to copy to is 1913
9999 mem: location 1759 is 32
9999 mem: storing 32 in location 1913
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1757 is 5
9999 mem: storing 6 in location 1757
 106 run: {index: "number"} <- add {index: "number"}, {1: "literal"}
9999 mem: location 1755 is 61
9999 mem: storing 62 in location 1755
 106 run: jump {: "offset"}
9998 run: jumping to instruction 7
 106 run: {done?: "boolean"} <- equal {row: "number"}, {8: "literal"}
9999 mem: location 1757 is 6
9999 mem: storing 0 in location 1758
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1758 is 0
9998 run: jump-if fell through
 106 run: {square: "character"} <- index {position: ("address" "array" "character"), "lookup": ()}, {index: "number"}
9999 mem: location 1754 is 1760
9999 mem: skipping refcount at 1760
9998 run: base address is 1761
9999 mem: location 1755 is 62
9998 run: address to copy is 1824
9998 run: its type is character
9999 mem: location 1824 is 112
9999 mem: storing 112 in location 1759
 106 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {row: "number"}, {square: "character"}
9999 mem: location 1756 is 1906
9999 mem: skipping refcount at 1906
9999 mem: location 1757 is 6
9998 run: address to copy to is 1914
9999 mem: location 1759 is 112
9999 mem: storing 112 in location 1914
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1757 is 6
9999 mem: storing 7 in location 1757
 106 run: {index: "number"} <- add {index: "number"}, {1: "literal"}
9999 mem: location 1755 is 62
9999 mem: storing 63 in location 1755
 106 run: jump {: "offset"}
9998 run: jumping to instruction 7
 106 run: {done?: "boolean"} <- equal {row: "number"}, {8: "literal"}
9999 mem: location 1757 is 7
9999 mem: storing 0 in location 1758
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1758 is 0
9998 run: jump-if fell through
 106 run: {square: "character"} <- index {position: ("address" "array" "character"), "lookup": ()}, {index: "number"}
9999 mem: location 1754 is 1760
9999 mem: skipping refcount at 1760
9998 run: base address is 1761
9999 mem: location 1755 is 63
9998 run: address to copy is 1825
9998 run: its type is character
9999 mem: location 1825 is 114
9999 mem: storing 114 in location 1759
 106 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {row: "number"}, {square: "character"}
9999 mem: location 1756 is 1906
9999 mem: skipping refcount at 1906
9999 mem: location 1757 is 7
9998 run: address to copy to is 1915
9999 mem: location 1759 is 114
9999 mem: storing 114 in location 1915
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1757 is 7
9999 mem: storing 8 in location 1757
 106 run: {index: "number"} <- add {index: "number"}, {1: "literal"}
9999 mem: location 1755 is 63
9999 mem: storing 64 in location 1755
 106 run: jump {: "offset"}
9998 run: jumping to instruction 7
 106 run: {done?: "boolean"} <- equal {row: "number"}, {8: "literal"}
9999 mem: location 1757 is 8
9999 mem: storing 1 in location 1758
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1758 is 1
9998 run: jumping to instruction 14
 106 run: reply {result: ("address" "array" "character")}
9999 mem: location 1756 is 1906
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1906
9999 mem: decrementing refcount of 1896: 3 -> 2
9999 mem: incrementing refcount of 1906: 1 -> 2
9999 mem: storing 1906 in location 1745
 105 run: {board: ("address" "array" "address" "array" "character"), "lookup": ()} <- put-index {board: ("address" "array" "address" "array" "character"), "lookup": ()}, {col: "number"}, {file: ("address" "array" "character")}
9999 mem: location 1742 is 1826
9999 mem: skipping refcount at 1826
9999 mem: location 1743 is 7
9998 run: address to copy to is 1835
9999 mem: location 1745 is 1906
9999 mem: incrementing refcount of 1906: 2 -> 3
9999 mem: storing 1906 in location 1835
 105 run: {col: "number"} <- add {col: "number"}, {1: "literal"}
9999 mem: location 1743 is 7
9999 mem: storing 8 in location 1743
 105 run: jump {: "offset"}
9998 run: jumping to instruction 8
 105 run: {done?: "boolean"} <- equal {col: "number"}, {8: "literal"}
9999 mem: location 1743 is 8
9999 mem: storing 1 in location 1744
9990 schedule: new-board/initial-position/run_1001/scenario_making-a-move
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1744 is 1
9998 run: jumping to instruction 14
 105 run: reply {board: ("address" "array" "address" "array" "character")}
9999 mem: location 1742 is 1826
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1826
9999 mem: incrementing refcount of 1826: 1 -> 2
9999 mem: storing 1826 in location 1750
 104 run: reply {board: ("address" "array" "address" "array" "character")}
9999 mem: location 1750 is 1826
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1826
9999 mem: incrementing refcount of 1826: 2 -> 3
9999 mem: storing 1826 in location 2
 103 run: {3: ("address" "move")} <- new {move: "type"}
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1746
9999 mem: incrementing refcount of 1746: 0 -> 1
9999 mem: storing 1746 in location 3
 103 run: {3: ("address" "move"), "lookup": ()} <- merge {6: "literal", "g": ()}, {1: "literal", "'2'": ()}, {6: "literal", "g": ()}, {3: "literal", "'4'": ()}
9999 mem: location 3 is 1746
9999 mem: skipping refcount at 1746
9999 mem: location 3 is 1746
9999 mem: skipping refcount at 1746
9999 mem: storing 6 in location 1747
9999 mem: storing 1 in location 1748
9999 mem: storing 6 in location 1749
9999 mem: storing 3 in location 1750
 103 run: {2: ("address" "array" "address" "array" "character"), "board": ()} <- make-move {2: ("address" "array" "address" "array" "character"), "board": ()}, {3: ("address" "move")}
9999 mem: location 2 is 1826
9999 mem: location 3 is 1746
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 mem: new alloc: 1916
9999 mem: storing 0 in location 1916
9999 mem: storing 0 in location 1917
9999 mem: storing 0 in location 1918
9999 mem: storing 0 in location 1919
9999 mem: storing 0 in location 1920
9999 mem: storing 0 in location 1921
9999 mem: storing 0 in location 1922
9999 mem: storing 0 in location 1923
9999 mem: storing 0 in location 1924
9999 mem: storing 0 in location 1925
9999 mem: storing 0 in location 1926
9999 mem: storing 0 in location 1927
9999 mem: storing 10 in location 1917
 104 run: {board: ("address" "array" "address" "array" "character")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1826: 3 -> 4
9999 mem: storing 1826 in location 1919
 104 run: {m: ("address" "move")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1746: 1 -> 2
9999 mem: storing 1746 in location 1920
 104 run: {from-file: "number"} <- get {m: ("address" "move"), "lookup": ()}, {from-file: "offset"}
9999 mem: location 1920 is 1746
9999 mem: skipping refcount at 1746
9999 mem: location 1747 is 6
9999 mem: location 1748 is 1
9999 mem: location 1749 is 6
9999 mem: location 1750 is 3
9999 mem: location 1920 is 1746
9999 mem: skipping refcount at 1746
9998 run: address to copy is 1747
9998 run: its type is "number"
9999 mem: location 1747 is 6
9999 mem: storing 6 in location 1921
 104 run: {from-rank: "number"} <- get {m: ("address" "move"), "lookup": ()}, {from-rank: "offset"}
9999 mem: location 1920 is 1746
9999 mem: skipping refcount at 1746
9999 mem: location 1747 is 6
9999 mem: location 1748 is 1
9999 mem: location 1749 is 6
9999 mem: location 1750 is 3
9999 mem: location 1920 is 1746
9999 mem: skipping refcount at 1746
9998 run: address to copy is 1748
9998 run: its type is "number"
9999 mem: location 1748 is 1
9999 mem: storing 1 in location 1922
 104 run: {to-file: "number"} <- get {m: ("address" "move"), "lookup": ()}, {to-file: "offset"}
9999 mem: location 1920 is 1746
9999 mem: skipping refcount at 1746
9999 mem: location 1747 is 6
9999 mem: location 1748 is 1
9999 mem: location 1749 is 6
9999 mem: location 1750 is 3
9999 mem: location 1920 is 1746
9999 mem: skipping refcount at 1746
9998 run: address to copy is 1749
9998 run: its type is "number"
9999 mem: location 1749 is 6
9999 mem: storing 6 in location 1923
 104 run: {to-rank: "number"} <- get {m: ("address" "move"), "lookup": ()}, {to-rank: "offset"}
9999 mem: location 1920 is 1746
9999 mem: skipping refcount at 1746
9999 mem: location 1747 is 6
9999 mem: location 1748 is 1
9999 mem: location 1749 is 6
9999 mem: location 1750 is 3
9999 mem: location 1920 is 1746
9999 mem: skipping refcount at 1746
9998 run: address to copy is 1750
9998 run: its type is "number"
9999 mem: location 1750 is 3
9999 mem: storing 3 in location 1924
 104 run: {from-f: ("address" "array" "character")} <- index {board: ("address" "array" "address" "array" "character"), "lookup": ()}, {from-file: "number"}
9999 mem: location 1919 is 1826
9999 mem: skipping refcount at 1826
9998 run: base address is 1827
9999 mem: location 1921 is 6
9998 run: address to copy is 1834
9998 run: its type is address
9999 mem: location 1834 is 1896
9999 mem: incrementing refcount of 1896: 2 -> 3
9999 mem: storing 1896 in location 1925
 104 run: {to-f: ("address" "array" "character")} <- index {board: ("address" "array" "address" "array" "character"), "lookup": ()}, {to-file: "number"}
9999 mem: location 1919 is 1826
9999 mem: skipping refcount at 1826
9998 run: base address is 1827
9999 mem: location 1923 is 6
9998 run: address to copy is 1834
9998 run: its type is address
9999 mem: location 1834 is 1896
9999 mem: incrementing refcount of 1896: 3 -> 4
9999 mem: storing 1896 in location 1926
 104 run: {src: "character", "square": ()} <- index {from-f: ("address" "array" "character"), "lookup": ()}, {from-rank: "number"}
9999 mem: location 1925 is 1896
9999 mem: skipping refcount at 1896
9998 run: base address is 1897
9999 mem: location 1922 is 1
9998 run: address to copy is 1899
9998 run: its type is character
9999 mem: location 1899 is 80
9999 mem: storing 80 in location 1927
 104 run: {to-f: ("address" "array" "character"), "lookup": ()} <- put-index {to-f: ("address" "array" "character"), "lookup": ()}, {to-rank: "number"}, {src: "character"}
9999 mem: location 1926 is 1896
9999 mem: skipping refcount at 1896
9999 mem: location 1924 is 3
9998 run: address to copy to is 1901
9999 mem: location 1927 is 80
9999 mem: storing 80 in location 1901
 104 run: {from-f: ("address" "array" "character"), "lookup": ()} <- put-index {from-f: ("address" "array" "character"), "lookup": ()}, {from-rank: "number"}, {32: "literal", "space": ()}
9999 mem: location 1925 is 1896
9999 mem: skipping refcount at 1896
9999 mem: location 1922 is 1
9998 run: address to copy to is 1899
9999 mem: storing 32 in location 1899
 104 run: reply {board: ("address" "array" "address" "array" "character"), "same-as-ingredient": "0"}
9999 mem: location 1919 is 1826
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1826
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 1826 in location 2
 103 run: {screen: ("address" "screen")} <- print-board {screen: ("address" "screen")}, {2: ("address" "array" "address" "array" "character"), "board": ()}
9999 mem: location 900 is 1008
9999 mem: location 2 is 1826
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 13
9999 mem: allocating size 15
9999 mem: new alloc: 1928
9999 mem: storing 0 in location 1928
9999 mem: storing 0 in location 1929
9999 mem: storing 0 in location 1930
9999 mem: storing 0 in location 1931
9999 mem: storing 0 in location 1932
9999 mem: storing 0 in location 1933
9999 mem: storing 0 in location 1934
9999 mem: storing 0 in location 1935
9999 mem: storing 0 in location 1936
9999 mem: storing 0 in location 1937
9999 mem: storing 0 in location 1938
9999 mem: storing 0 in location 1939
9999 mem: storing 0 in location 1940
9999 mem: storing 0 in location 1941
9999 mem: storing 0 in location 1942
9999 mem: storing 13 in location 1929
 104 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 3 -> 4
9999 mem: storing 1008 in location 1931
 104 run: {board: ("address" "array" "address" "array" "character")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1826: 4 -> 5
9999 mem: storing 1826 in location 1932
 104 run: {row: "number"} <- copy {7: "literal"}
9999 mem: storing 7 in location 1933
 104 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1934
 104 run: {done?: "boolean"} <- lesser-than {row: "number"}, {0: "literal"}
9999 mem: location 1933 is 7
9999 mem: storing 0 in location 1935
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1935 is 0
9998 run: jump-if fell through
 104 run: {rank: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1933 is 7
9999 mem: storing 8 in location 1936
 104 run: print-integer {screen: ("address" "screen")}, {rank: "number"}
9999 mem: location 1931 is 1008
9999 mem: location 1936 is 8
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1736
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 4 -> 5
9999 mem: storing 1008 in location 1739
 105 run: {n: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 8 in location 1740
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1741
9999 mem: storing 0 in location 1742
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1742 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1741
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1743
9999 mem: storing 0 in location 1744
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1744 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1743
 105 run: {s: ("address" "array" "character")} <- to-text_3 {n: "number"}
9999 mem: location 1740 is 8
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 16
9999 mem: allocating size 18
9999 mem: new alloc: 1943
9999 mem: storing 0 in location 1943
9999 mem: storing 0 in location 1944
9999 mem: storing 0 in location 1945
9999 mem: storing 0 in location 1946
9999 mem: storing 0 in location 1947
9999 mem: storing 0 in location 1948
9999 mem: storing 0 in location 1949
9999 mem: storing 0 in location 1950
9999 mem: storing 0 in location 1951
9999 mem: storing 0 in location 1952
9999 mem: storing 0 in location 1953
9999 mem: storing 0 in location 1954
9999 mem: storing 0 in location 1955
9999 mem: storing 0 in location 1956
9999 mem: storing 0 in location 1957
9999 mem: storing 0 in location 1958
9999 mem: storing 0 in location 1959
9999 mem: storing 0 in location 1960
9999 mem: storing 16 in location 1944
 106 run: {n: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 8 in location 1946
 106 run: jump-if {n: "number"}, {: "offset"}
9999 mem: location 1946 is 8
9998 run: jumping to instruction 6
 106 run: {negate-result: "boolean"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1948
 106 run: {negative?: "boolean"} <- lesser-than {n: "number"}, {0: "literal"}
9999 mem: location 1946 is 8
9999 mem: storing 0 in location 1949
 106 run: jump-unless {negative?: "boolean"}, {: "offset"}
9999 mem: location 1949 is 0
9998 run: jumping to instruction 13
 106 run: {tmp: ("address" "buffer")} <- new-buffer {30: "literal"}
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 mem: new alloc: 1961
9999 mem: storing 0 in location 1961
9999 mem: storing 0 in location 1962
9999 mem: storing 0 in location 1963
9999 mem: storing 0 in location 1964
9999 mem: storing 0 in location 1965
9999 mem: storing 0 in location 1966
9999 mem: storing 4 in location 1962
 107 run: {capacity: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 30 in location 1964
 107 run: {result: ("address" "buffer")} <- new {buffer: "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1967
9999 mem: storing 0 in location 1967
9999 mem: storing 0 in location 1968
9999 mem: storing 0 in location 1969
9999 mem: incrementing refcount of 1967: 0 -> 1
9999 mem: storing 1967 in location 1965
 107 run: {result: ("address" "buffer"), "lookup": ()} <- put {result: ("address" "buffer"), "lookup": ()}, {length: "offset"}, {0: "literal"}
9999 mem: location 1965 is 1967
9999 mem: skipping refcount at 1967
9999 mem: location 1968 is 0
9999 mem: location 1969 is 0
9999 mem: location 1965 is 1967
9999 mem: skipping refcount at 1967
9998 run: address to copy to is 1968
9999 mem: storing 0 in location 1968
 107 run: {data: ("address" "array" "character")} <- new {character: "type"}, {capacity: "number"}
9999 mem: location 1964 is 30
9999 mem: array size is 30
9999 mem: allocating size 32
9999 mem: new alloc: 1970
9999 mem: storing 0 in location 1970
9999 mem: storing 0 in location 1971
9999 mem: storing 0 in location 1972
9999 mem: storing 0 in location 1973
9999 mem: storing 0 in location 1974
9999 mem: storing 0 in location 1975
9999 mem: storing 0 in location 1976
9999 mem: storing 0 in location 1977
9999 mem: storing 0 in location 1978
9999 mem: storing 0 in location 1979
9999 mem: storing 0 in location 1980
9999 mem: storing 0 in location 1981
9999 mem: storing 0 in location 1982
9999 mem: storing 0 in location 1983
9999 mem: storing 0 in location 1984
9999 mem: storing 0 in location 1985
9999 mem: storing 0 in location 1986
9999 mem: storing 0 in location 1987
9999 mem: storing 0 in location 1988
9999 mem: storing 0 in location 1989
9999 mem: storing 0 in location 1990
9999 mem: storing 0 in location 1991
9999 mem: storing 0 in location 1992
9999 mem: storing 0 in location 1993
9999 mem: storing 0 in location 1994
9999 mem: storing 0 in location 1995
9999 mem: storing 0 in location 1996
9999 mem: storing 0 in location 1997
9999 mem: storing 0 in location 1998
9999 mem: storing 0 in location 1999
9999 mem: storing 0 in location 2000
9999 mem: storing 0 in location 2001
9999 mem: storing 30 in location 1971
9999 mem: incrementing refcount of 1970: 0 -> 1
9999 mem: storing 1970 in location 1966
 107 run: {result: ("address" "buffer"), "lookup": ()} <- put {result: ("address" "buffer"), "lookup": ()}, {data: "offset"}, {data: ("address" "array" "character")}
9999 mem: location 1965 is 1967
9999 mem: skipping refcount at 1967
9999 mem: location 1968 is 0
9999 mem: location 1969 is 0
9999 mem: location 1966 is 1970
9999 mem: location 1965 is 1967
9999 mem: skipping refcount at 1967
9998 run: address to copy to is 1969
9999 mem: incrementing refcount of 1970: 1 -> 2
9999 mem: storing 1970 in location 1969
 107 run: return {result: ("address" "buffer")}
9999 mem: location 1965 is 1967
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1967
9999 mem: incrementing refcount of 1967: 1 -> 2
9999 mem: storing 1967 in location 1950
 106 run: {digit-base: "number"} <- copy {48: "literal"}
9999 mem: storing 48 in location 1951
 106 run: {done?: "boolean"} <- equal {n: "number"}, {0: "literal"}
9999 mem: location 1946 is 8
9999 mem: storing 0 in location 1952
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1952 is 0
9998 run: jump-if fell through
 106 run: {n: "number"}, {digit: "number"} <- divide-with-remainder {n: "number"}, {10: "literal"}
9999 mem: location 1946 is 8
9999 mem: storing 0 in location 1946
9999 mem: storing 8 in location 1953
 106 run: {c: "character"} <- add {digit-base: "number"}, {digit: "number"}
9999 mem: location 1951 is 48
9999 mem: location 1953 is 8
9999 mem: storing 56 in location 1954
 106 run: {tmp: ("address" "buffer")} <- append_2 {tmp: ("address" "buffer")}, {c: "character"}
9999 mem: location 1950 is 1967
9999 mem: location 1954 is 56
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 mem: new alloc: 2002
9999 mem: storing 0 in location 2002
9999 mem: storing 0 in location 2003
9999 mem: storing 0 in location 2004
9999 mem: storing 0 in location 2005
9999 mem: storing 0 in location 2006
9999 mem: storing 0 in location 2007
9999 mem: storing 0 in location 2008
9999 mem: storing 0 in location 2009
9999 mem: storing 0 in location 2010
9999 mem: storing 0 in location 2011
9999 mem: storing 8 in location 2003
 107 run: {in: ("address" "buffer")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1967: 2 -> 3
9999 mem: storing 1967 in location 2005
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 56 in location 2006
 107 run: {len: "number"} <- get {in: ("address" "buffer"), "lookup": ()}, {length: "offset"}
9999 mem: location 2005 is 1967
9999 mem: skipping refcount at 1967
9999 mem: location 1968 is 0
9999 mem: location 1969 is 1970
9999 mem: location 2005 is 1967
9999 mem: skipping refcount at 1967
9998 run: address to copy is 1968
9998 run: its type is "number"
9999 mem: location 1968 is 0
9999 mem: storing 0 in location 2007
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal", "backspace": ()}
9999 mem: location 2006 is 56
9999 mem: storing 0 in location 2008
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2008 is 0
9998 run: jumping to instruction 15
 107 run: {full?: "boolean"} <- buffer-full? {in: ("address" "buffer")}
9999 mem: location 2005 is 1967
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 108 run: {in: ("address" "buffer")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1967: 3 -> 4
9999 mem: storing 1967 in location 1003
 108 run: {len: "number"} <- get {in: ("address" "buffer"), "lookup": ()}, {length: "offset"}
9999 mem: location 1003 is 1967
9999 mem: skipping refcount at 1967
9999 mem: location 1968 is 0
9999 mem: location 1969 is 1970
9999 mem: location 1003 is 1967
9999 mem: skipping refcount at 1967
9998 run: address to copy is 1968
9998 run: its type is "number"
9999 mem: location 1968 is 0
9999 mem: storing 0 in location 1004
 108 run: {s: ("address" "array" "character")} <- get {in: ("address" "buffer"), "lookup": ()}, {data: "offset"}
9999 mem: location 1003 is 1967
9999 mem: skipping refcount at 1967
9999 mem: location 1968 is 0
9999 mem: location 1969 is 1970
9999 mem: location 1003 is 1967
9999 mem: skipping refcount at 1967
9998 run: address to copy is 1969
9998 run: its type is ("address" "array" "character")
9999 mem: location 1969 is 1970
9999 mem: incrementing refcount of 1970: 2 -> 3
9999 mem: storing 1970 in location 1005
 108 run: {capacity: "number"} <- length {s: ("address" "array" "character"), "lookup": ()}
9999 mem: location 1005 is 1970
9999 mem: skipping refcount at 1970
9999 mem: storing 30 in location 1006
 108 run: {result: "boolean"} <- greater-or-equal {len: "number"}, {capacity: "number"}
9999 mem: location 1004 is 0
9999 mem: location 1006 is 30
9999 mem: storing 0 in location 1007
 108 run: reply {result: "boolean"}
9999 mem: location 1007 is 0
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 0
9999 mem: storing 0 in location 2010
 107 run: jump-unless {full?: "boolean"}, {: "offset"}
9999 mem: location 2010 is 0
9998 run: jumping to instruction 20
 107 run: {s: ("address" "array" "character")} <- get {in: ("address" "buffer"), "lookup": ()}, {data: "offset"}
9999 mem: location 2005 is 1967
9999 mem: skipping refcount at 1967
9999 mem: location 1968 is 0
9999 mem: location 1969 is 1970
9999 mem: location 2005 is 1967
9999 mem: skipping refcount at 1967
9998 run: address to copy is 1969
9998 run: its type is ("address" "array" "character")
9999 mem: location 1969 is 1970
9999 mem: incrementing refcount of 1970: 3 -> 4
9999 mem: storing 1970 in location 2011
 107 run: {s: ("address" "array" "character"), "lookup": ()} <- put-index {s: ("address" "array" "character"), "lookup": ()}, {len: "number"}, {c: "character"}
9999 mem: location 2011 is 1970
9999 mem: skipping refcount at 1970
9999 mem: location 2007 is 0
9998 run: address to copy to is 1972
9999 mem: location 2006 is 56
9999 mem: storing 56 in location 1972
 107 run: {len: "number"} <- add {len: "number"}, {1: "literal"}
9999 mem: location 2007 is 0
9999 mem: storing 1 in location 2007
 107 run: {in: ("address" "buffer"), "lookup": ()} <- put {in: ("address" "buffer"), "lookup": ()}, {length: "offset"}, {len: "number"}
9999 mem: location 2005 is 1967
9999 mem: skipping refcount at 1967
9999 mem: location 1968 is 0
9999 mem: location 1969 is 1970
9999 mem: location 2007 is 1
9999 mem: location 2005 is 1967
9999 mem: skipping refcount at 1967
9998 run: address to copy to is 1968
9999 mem: storing 1 in location 1968
 107 run: reply {in: ("address" "buffer"), "same-as-ingredient": "0"}
9999 mem: location 2005 is 1967
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1967
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 1967 in location 1950
 106 run: jump {: "offset"}
9998 run: jumping to instruction 17
 106 run: {done?: "boolean"} <- equal {n: "number"}, {0: "literal"}
9999 mem: location 1946 is 0
9999 mem: storing 1 in location 1952
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1952 is 1
9998 run: jumping to instruction 23
 106 run: jump-unless {negate-result: "boolean"}, {: "offset"}
9999 mem: location 1948 is 0
9998 run: jumping to instruction 28
 106 run: {len: "number"} <- get {tmp: ("address" "buffer"), "lookup": ()}, {length: "offset"}
9999 mem: location 1950 is 1967
9999 mem: skipping refcount at 1967
9999 mem: location 1968 is 1
9999 mem: location 1969 is 1970
9999 mem: location 1950 is 1967
9999 mem: skipping refcount at 1967
9998 run: address to copy is 1968
9998 run: its type is "number"
9999 mem: location 1968 is 1
9999 mem: storing 1 in location 1956
 106 run: {buf: ("address" "array" "character")} <- get {tmp: ("address" "buffer"), "lookup": ()}, {data: "offset"}
9999 mem: location 1950 is 1967
9999 mem: skipping refcount at 1967
9999 mem: location 1968 is 1
9999 mem: location 1969 is 1970
9999 mem: location 1950 is 1967
9999 mem: skipping refcount at 1967
9998 run: address to copy is 1969
9998 run: its type is ("address" "array" "character")
9999 mem: location 1969 is 1970
9999 mem: incrementing refcount of 1970: 4 -> 5
9999 mem: storing 1970 in location 1957
 106 run: {result: ("address" "array" "character")} <- new {character: "type"}, {len: "number"}
9999 mem: location 1956 is 1
9999 mem: array size is 1
9999 mem: allocating size 3
9999 mem: new alloc: 2012
9999 mem: storing 0 in location 2012
9999 mem: storing 0 in location 2013
9999 mem: storing 0 in location 2014
9999 mem: storing 1 in location 2013
9999 mem: incrementing refcount of 2012: 0 -> 1
9999 mem: storing 2012 in location 1947
 106 run: {i: "number"} <- subtract {len: "number"}, {1: "literal"}
9999 mem: location 1956 is 1
9999 mem: storing 0 in location 1958
 106 run: {j: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1959
 106 run: {done?: "boolean"} <- lesser-than {i: "number"}, {0: "literal"}
9999 mem: location 1958 is 0
9999 mem: storing 0 in location 1952
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1952 is 0
9998 run: jump-if fell through
 106 run: {src: "character"} <- index {buf: ("address" "array" "character"), "lookup": ()}, {i: "number"}
9999 mem: location 1957 is 1970
9999 mem: skipping refcount at 1970
9998 run: base address is 1971
9999 mem: location 1958 is 0
9998 run: address to copy is 1972
9998 run: its type is character
9999 mem: location 1972 is 56
9999 mem: storing 56 in location 1960
 106 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {j: "number"}, {src: "character"}
9999 mem: location 1947 is 2012
9999 mem: skipping refcount at 2012
9999 mem: location 1959 is 0
9998 run: address to copy to is 2014
9999 mem: location 1960 is 56
9999 mem: storing 56 in location 2014
 106 run: {i: "number"} <- subtract {i: "number"}, {1: "literal"}
9999 mem: location 1958 is 0
9999 mem: storing -1 in location 1958
 106 run: {j: "number"} <- add {j: "number"}, {1: "literal"}
9999 mem: location 1959 is 0
9999 mem: storing 1 in location 1959
 106 run: jump {: "offset"}
9998 run: jumping to instruction 35
 106 run: {done?: "boolean"} <- lesser-than {i: "number"}, {0: "literal"}
9999 mem: location 1958 is -1
9999 mem: storing 1 in location 1952
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1952 is 1
9998 run: jumping to instruction 42
 106 run: reply {result: ("address" "array" "character")}
9999 mem: location 1947 is 2012
9999 abandon: saving in free-list of size 18
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 2012
9999 mem: incrementing refcount of 2012: 1 -> 2
9999 mem: storing 2012 in location 1745
 105 run: {screen: ("address" "screen")} <- print_2 {screen: ("address" "screen")}, {s: ("address" "array" "character")}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1739 is 1008
9999 mem: location 1745 is 2012
9999 mem: location 1741 is 7
9999 mem: location 1743 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 11
9999 mem: allocating size 13
9999 mem: new alloc: 2015
9999 mem: storing 0 in location 2015
9999 mem: storing 0 in location 2016
9999 mem: storing 0 in location 2017
9999 mem: storing 0 in location 2018
9999 mem: storing 0 in location 2019
9999 mem: storing 0 in location 2020
9999 mem: storing 0 in location 2021
9999 mem: storing 0 in location 2022
9999 mem: storing 0 in location 2023
9999 mem: storing 0 in location 2024
9999 mem: storing 0 in location 2025
9999 mem: storing 0 in location 2026
9999 mem: storing 0 in location 2027
9999 mem: storing 11 in location 2016
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 5 -> 6
9999 mem: storing 1008 in location 2018
 106 run: {s: ("address" "array" "character")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 2012: 2 -> 3
9999 mem: storing 2012 in location 2019
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 2020
9999 mem: storing 1 in location 2021
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2021 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2022
9999 mem: storing 1 in location 2023
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2023 is 1
9998 run: jumping to instruction 12
 106 run: {len: "number"} <- length {s: ("address" "array" "character"), "lookup": ()}
9999 mem: location 2019 is 2012
9999 mem: skipping refcount at 2012
9999 mem: storing 1 in location 2024
 106 run: {i: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 2025
 106 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 2025 is 0
9999 mem: location 2024 is 1
9999 mem: storing 0 in location 2026
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 2026 is 0
9998 run: jump-if fell through
 106 run: {c: "character"} <- index {s: ("address" "array" "character"), "lookup": ()}, {i: "number"}
9999 mem: location 2019 is 2012
9999 mem: skipping refcount at 2012
9998 run: base address is 2013
9999 mem: location 2025 is 0
9998 run: address to copy is 2014
9998 run: its type is character
9999 mem: location 2014 is 56
9999 mem: storing 56 in location 2027
 106 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 2018 is 1008
9999 mem: location 2027 is 56
9999 mem: location 2020 is 7
9999 mem: location 2022 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 mem: new alloc: 2028
9999 mem: storing 0 in location 2028
9999 mem: storing 0 in location 2029
9999 mem: storing 0 in location 2030
9999 mem: storing 0 in location 2031
9999 mem: storing 0 in location 2032
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
9999 mem: storing 0 in location 2037
9999 mem: storing 0 in location 2038
9999 mem: storing 0 in location 2039
9999 mem: storing 0 in location 2040
9999 mem: storing 0 in location 2041
9999 mem: storing 0 in location 2042
9999 mem: storing 0 in location 2043
9999 mem: storing 0 in location 2044
9999 mem: storing 0 in location 2045
9999 mem: storing 0 in location 2046
9999 mem: storing 0 in location 2047
9999 mem: storing 0 in location 2048
9999 mem: storing 0 in location 2049
9999 mem: storing 0 in location 2050
9999 mem: storing 0 in location 2051
9999 mem: storing 0 in location 2052
9999 mem: storing 0 in location 2053
9999 mem: storing 24 in location 2029
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 6 -> 7
9999 mem: storing 1008 in location 2031
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 56 in location 2032
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 2033
9999 mem: storing 1 in location 2034
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 1 in location 2036
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 56
  90 print-character: 56 
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 0
9999 mem: storing 0 in location 2039
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 0
9999 mem: storing 1 in location 2040
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 0
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 2041
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 0
9999 mem: storing 1 in location 2040
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 0
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 56
9999 mem: storing 0 in location 2042
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 0
9999 mem: location 2037 is 30
9999 mem: storing 0 in location 2045
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 0
9999 mem: location 2041 is 0
9999 mem: storing 0 in location 2045
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 2 -> 3
9999 mem: storing 1014 in location 2046
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 56
9999 mem: storing 0 in location 2048
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 56
9999 mem: location 2033 is 7
9999 mem: storing 56 in location 2050
9999 mem: storing 7 in location 2051
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 0
9998 run: address to copy to is 1016
9999 mem: location 2050 is 56
9999 mem: location 2051 is 7
9999 mem: storing 56 in location 1016
9999 mem: storing 7 in location 1017
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 0
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 0
9999 mem: storing 1 in location 2041
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 1
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
 106 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 2025 is 0
9999 mem: storing 1 in location 2025
 106 run: jump {: "offset"}
9998 run: jumping to instruction 16
 106 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 2025 is 1
9999 mem: location 2024 is 1
9999 mem: storing 1 in location 2026
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 2026 is 1
9998 run: jumping to instruction 22
 106 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2018 is 1008
9999 abandon: saving in free-list of size 13
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 1008 in location 1739
 105 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1739 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 4
 104 run: {print_10_1: ("address" "array" "character")} <- new {" | ": "literal-string"}
9999 mem: new string alloc: 2054
9999 mem: incrementing refcount of 2054: 0 -> 1
9999 mem: storing 2054 in location 1937
 104 run: print_2 {screen: ("address" "screen")}, {print_10_1: ("address" "array" "character")}
9999 mem: location 1931 is 1008
9999 mem: location 1937 is 2054
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 11
9999 mem: allocating size 13
9999 abandon: picking up space from free-list of size 13
9999 mem: new alloc from free list: 2015
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 7 -> 8
9999 mem: storing 1008 in location 2018
 105 run: {s: ("address" "array" "character")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 2054: 1 -> 2
9999 mem: storing 2054 in location 2019
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2020
9999 mem: storing 0 in location 2021
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2021 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2020
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2022
9999 mem: storing 0 in location 2023
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2023 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2022
 105 run: {len: "number"} <- length {s: ("address" "array" "character"), "lookup": ()}
9999 mem: location 2019 is 2054
9999 mem: skipping refcount at 2054
9999 mem: storing 3 in location 2024
 105 run: {i: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 2025
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 2025 is 0
9999 mem: location 2024 is 3
9999 mem: storing 0 in location 2026
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 2026 is 0
9998 run: jump-if fell through
 105 run: {c: "character"} <- index {s: ("address" "array" "character"), "lookup": ()}, {i: "number"}
9999 mem: location 2019 is 2054
9999 mem: skipping refcount at 2054
9998 run: base address is 2055
9999 mem: location 2025 is 0
9998 run: address to copy is 2056
9998 run: its type is character
9999 mem: location 2056 is 32
9999 mem: storing 32 in location 2027
 105 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 2018 is 1008
9999 mem: location 2027 is 32
9999 mem: location 2020 is 7
9999 mem: location 2022 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 8 -> 9
9999 mem: storing 1008 in location 2031
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 2033
9999 mem: storing 1 in location 2034
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 1 in location 2036
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 0
9999 mem: storing 0 in location 2039
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 0
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 0
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 2041
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 1
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 1
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 0
9999 mem: location 2037 is 30
9999 mem: storing 0 in location 2045
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 0
9999 mem: location 2041 is 1
9999 mem: storing 1 in location 2045
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 3 -> 4
9999 mem: storing 1014 in location 2046
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 1
9998 run: address to copy to is 1018
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1018
9999 mem: storing 7 in location 1019
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 1
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 1
9999 mem: storing 2 in location 2041
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 2
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 2025 is 0
9999 mem: storing 1 in location 2025
 105 run: jump {: "offset"}
9998 run: jumping to instruction 16
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 2025 is 1
9999 mem: location 2024 is 3
9999 mem: storing 0 in location 2026
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 2026 is 0
9998 run: jump-if fell through
 105 run: {c: "character"} <- index {s: ("address" "array" "character"), "lookup": ()}, {i: "number"}
9999 mem: location 2019 is 2054
9999 mem: skipping refcount at 2054
9998 run: base address is 2055
9999 mem: location 2025 is 1
9998 run: address to copy is 2057
9998 run: its type is character
9999 mem: location 2057 is 124
9999 mem: storing 124 in location 2027
 105 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 2018 is 1008
9999 mem: location 2027 is 124
9999 mem: location 2020 is 7
9999 mem: location 2022 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 9 -> 10
9999 mem: storing 1008 in location 2031
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 124 in location 2032
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 2033
9999 mem: storing 1 in location 2034
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 1 in location 2036
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 124
  90 print-character: 124 
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 0
9999 mem: storing 0 in location 2039
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 0
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 0
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 2041
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 2
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 2
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 124
9999 mem: storing 0 in location 2042
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 0
9999 mem: location 2037 is 30
9999 mem: storing 0 in location 2045
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 0
9999 mem: location 2041 is 2
9999 mem: storing 2 in location 2045
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 4 -> 5
9999 mem: storing 1014 in location 2046
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 124
9999 mem: storing 0 in location 2048
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 124
9999 mem: location 2033 is 7
9999 mem: storing 124 in location 2050
9999 mem: storing 7 in location 2051
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 2
9998 run: address to copy to is 1020
9999 mem: location 2050 is 124
9999 mem: location 2051 is 7
9999 mem: storing 124 in location 1020
9999 mem: storing 7 in location 1021
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 2
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 2
9999 mem: storing 3 in location 2041
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 3
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 2025 is 1
9999 mem: storing 2 in location 2025
 105 run: jump {: "offset"}
9998 run: jumping to instruction 16
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 2025 is 2
9999 mem: location 2024 is 3
9999 mem: storing 0 in location 2026
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 2026 is 0
9998 run: jump-if fell through
 105 run: {c: "character"} <- index {s: ("address" "array" "character"), "lookup": ()}, {i: "number"}
9999 mem: location 2019 is 2054
9999 mem: skipping refcount at 2054
9998 run: base address is 2055
9999 mem: location 2025 is 2
9998 run: address to copy is 2058
9998 run: its type is character
9999 mem: location 2058 is 32
9999 mem: storing 32 in location 2027
 105 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 2018 is 1008
9999 mem: location 2027 is 32
9999 mem: location 2020 is 7
9999 mem: location 2022 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 10 -> 11
9999 mem: storing 1008 in location 2031
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 2033
9999 mem: storing 1 in location 2034
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 1 in location 2036
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 0
9999 mem: storing 0 in location 2039
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 0
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 0
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 2041
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 3
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 3
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 0
9999 mem: location 2037 is 30
9999 mem: storing 0 in location 2045
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 0
9999 mem: location 2041 is 3
9999 mem: storing 3 in location 2045
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 5 -> 6
9999 mem: storing 1014 in location 2046
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 3
9998 run: address to copy to is 1022
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1022
9999 mem: storing 7 in location 1023
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 3
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 3
9999 mem: storing 4 in location 2041
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 4
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 2025 is 2
9999 mem: storing 3 in location 2025
 105 run: jump {: "offset"}
9998 run: jumping to instruction 16
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 2025 is 3
9999 mem: location 2024 is 3
9999 mem: storing 1 in location 2026
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 2026 is 1
9998 run: jumping to instruction 22
 105 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2018 is 1008
9999 abandon: saving in free-list of size 13
9999 trace: reply: decrementing callstack depth from 4
 104 run: {col: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1938
 104 run: {done?: "boolean"} <- equal {col: "number"}, {8: "literal"}
9999 mem: location 1938 is 0
9999 mem: storing 0 in location 1935
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1935 is 0
9998 run: jump-if fell through
 104 run: {f: ("address" "array" "character")} <- index {board: ("address" "array" "address" "array" "character"), "lookup": ()}, {col: "number"}
9999 mem: location 1932 is 1826
9999 mem: skipping refcount at 1826
9998 run: base address is 1827
9999 mem: location 1938 is 0
9998 run: address to copy is 1828
9998 run: its type is address
9999 mem: location 1828 is 1836
9999 mem: incrementing refcount of 1836: 2 -> 3
9999 mem: storing 1836 in location 1939
 104 run: {c: "character"} <- index {f: ("address" "array" "character"), "lookup": ()}, {row: "number"}
9999 mem: location 1939 is 1836
9999 mem: skipping refcount at 1836
9998 run: base address is 1837
9999 mem: location 1933 is 7
9998 run: address to copy is 1845
9998 run: its type is character
9999 mem: location 1845 is 114
9999 mem: storing 114 in location 1940
 104 run: print {screen: ("address" "screen")}, {c: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1940 is 114
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 11 -> 12
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 114 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 114
  90 print-character: 114 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 0
9999 mem: storing 0 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 0
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 0
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 4
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 4
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 114
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 0
9999 mem: location 2037 is 30
9999 mem: storing 0 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 0
9999 mem: location 2041 is 4
9999 mem: storing 4 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 6 -> 7
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 114
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 114
9999 mem: location 2033 is 7
9999 mem: storing 114 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 4
9998 run: address to copy to is 1024
9999 mem: location 2050 is 114
9999 mem: location 2051 is 7
9999 mem: storing 114 in location 1024
9999 mem: storing 7 in location 1025
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 4
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 4
9999 mem: storing 5 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 5
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: print {screen: ("address" "screen")}, {space: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1934 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 12 -> 13
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 0
9999 mem: storing 0 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 0
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 0
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
9990 schedule: print/print-board/run_1001/scenario_making-a-move
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 5
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 5
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 0
9999 mem: location 2037 is 30
9999 mem: storing 0 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 0
9999 mem: location 2041 is 5
9999 mem: storing 5 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 7 -> 8
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 5
9998 run: address to copy to is 1026
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1026
9999 mem: storing 7 in location 1027
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 5
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 5
9999 mem: storing 6 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 6
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {col: "number"} <- add {col: "number"}, {1: "literal"}
9999 mem: location 1938 is 0
9999 mem: storing 1 in location 1938
 104 run: jump {: "offset"}
9998 run: jumping to instruction 14
 104 run: {done?: "boolean"} <- equal {col: "number"}, {8: "literal"}
9999 mem: location 1938 is 1
9999 mem: storing 0 in location 1935
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1935 is 0
9998 run: jump-if fell through
 104 run: {f: ("address" "array" "character")} <- index {board: ("address" "array" "address" "array" "character"), "lookup": ()}, {col: "number"}
9999 mem: location 1932 is 1826
9999 mem: skipping refcount at 1826
9998 run: base address is 1827
9999 mem: location 1938 is 1
9998 run: address to copy is 1829
9998 run: its type is address
9999 mem: location 1829 is 1846
9999 mem: decrementing refcount of 1836: 3 -> 2
9999 mem: incrementing refcount of 1846: 2 -> 3
9999 mem: storing 1846 in location 1939
 104 run: {c: "character"} <- index {f: ("address" "array" "character"), "lookup": ()}, {row: "number"}
9999 mem: location 1939 is 1846
9999 mem: skipping refcount at 1846
9998 run: base address is 1847
9999 mem: location 1933 is 7
9998 run: address to copy is 1855
9998 run: its type is character
9999 mem: location 1855 is 110
9999 mem: storing 110 in location 1940
 104 run: print {screen: ("address" "screen")}, {c: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1940 is 110
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 13 -> 14
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 110 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 110
  90 print-character: 110 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 0
9999 mem: storing 0 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 0
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 0
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 6
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 6
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 110
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 0
9999 mem: location 2037 is 30
9999 mem: storing 0 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 0
9999 mem: location 2041 is 6
9999 mem: storing 6 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 8 -> 9
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 110
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 110
9999 mem: location 2033 is 7
9999 mem: storing 110 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 6
9998 run: address to copy to is 1028
9999 mem: location 2050 is 110
9999 mem: location 2051 is 7
9999 mem: storing 110 in location 1028
9999 mem: storing 7 in location 1029
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 6
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 6
9999 mem: storing 7 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 7
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: print {screen: ("address" "screen")}, {space: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1934 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 14 -> 15
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 0
9999 mem: storing 0 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 0
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 0
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 7
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 7
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 0
9999 mem: location 2037 is 30
9999 mem: storing 0 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 0
9999 mem: location 2041 is 7
9999 mem: storing 7 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 9 -> 10
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 7
9998 run: address to copy to is 1030
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1030
9999 mem: storing 7 in location 1031
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 7
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 7
9999 mem: storing 8 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 8
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {col: "number"} <- add {col: "number"}, {1: "literal"}
9999 mem: location 1938 is 1
9999 mem: storing 2 in location 1938
 104 run: jump {: "offset"}
9998 run: jumping to instruction 14
 104 run: {done?: "boolean"} <- equal {col: "number"}, {8: "literal"}
9999 mem: location 1938 is 2
9999 mem: storing 0 in location 1935
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1935 is 0
9998 run: jump-if fell through
 104 run: {f: ("address" "array" "character")} <- index {board: ("address" "array" "address" "array" "character"), "lookup": ()}, {col: "number"}
9999 mem: location 1932 is 1826
9999 mem: skipping refcount at 1826
9998 run: base address is 1827
9999 mem: location 1938 is 2
9998 run: address to copy is 1830
9998 run: its type is address
9999 mem: location 1830 is 1856
9999 mem: decrementing refcount of 1846: 3 -> 2
9999 mem: incrementing refcount of 1856: 2 -> 3
9999 mem: storing 1856 in location 1939
 104 run: {c: "character"} <- index {f: ("address" "array" "character"), "lookup": ()}, {row: "number"}
9999 mem: location 1939 is 1856
9999 mem: skipping refcount at 1856
9998 run: base address is 1857
9999 mem: location 1933 is 7
9998 run: address to copy is 1865
9998 run: its type is character
9999 mem: location 1865 is 98
9999 mem: storing 98 in location 1940
 104 run: print {screen: ("address" "screen")}, {c: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1940 is 98
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 15 -> 16
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 98
  90 print-character: 98 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 0
9999 mem: storing 0 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 0
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 0
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 8
9999 mem: storing 8 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 8
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 8
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 98
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 0
9999 mem: location 2037 is 30
9999 mem: storing 0 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 0
9999 mem: location 2041 is 8
9999 mem: storing 8 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 10 -> 11
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 98
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 98
9999 mem: location 2033 is 7
9999 mem: storing 98 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 8
9998 run: address to copy to is 1032
9999 mem: location 2050 is 98
9999 mem: location 2051 is 7
9999 mem: storing 98 in location 1032
9999 mem: storing 7 in location 1033
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 8
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 8
9999 mem: storing 9 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 9
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 9 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: print {screen: ("address" "screen")}, {space: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1934 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 16 -> 17
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 0
9999 mem: storing 0 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 0
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 0
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 9
9999 mem: storing 9 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 9
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 9
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 0
9999 mem: location 2037 is 30
9999 mem: storing 0 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 0
9999 mem: location 2041 is 9
9999 mem: storing 9 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 11 -> 12
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 9
9998 run: address to copy to is 1034
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1034
9999 mem: storing 7 in location 1035
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 9
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 9
9999 mem: storing 10 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 10
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 10 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {col: "number"} <- add {col: "number"}, {1: "literal"}
9999 mem: location 1938 is 2
9999 mem: storing 3 in location 1938
 104 run: jump {: "offset"}
9998 run: jumping to instruction 14
 104 run: {done?: "boolean"} <- equal {col: "number"}, {8: "literal"}
9999 mem: location 1938 is 3
9999 mem: storing 0 in location 1935
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1935 is 0
9998 run: jump-if fell through
 104 run: {f: ("address" "array" "character")} <- index {board: ("address" "array" "address" "array" "character"), "lookup": ()}, {col: "number"}
9999 mem: location 1932 is 1826
9999 mem: skipping refcount at 1826
9998 run: base address is 1827
9999 mem: location 1938 is 3
9998 run: address to copy is 1831
9998 run: its type is address
9999 mem: location 1831 is 1866
9999 mem: decrementing refcount of 1856: 3 -> 2
9999 mem: incrementing refcount of 1866: 2 -> 3
9999 mem: storing 1866 in location 1939
 104 run: {c: "character"} <- index {f: ("address" "array" "character"), "lookup": ()}, {row: "number"}
9999 mem: location 1939 is 1866
9999 mem: skipping refcount at 1866
9998 run: base address is 1867
9999 mem: location 1933 is 7
9998 run: address to copy is 1875
9998 run: its type is character
9999 mem: location 1875 is 113
9999 mem: storing 113 in location 1940
 104 run: print {screen: ("address" "screen")}, {c: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1940 is 113
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 17 -> 18
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 113 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 113
  90 print-character: 113 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 0
9999 mem: storing 0 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 0
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 0
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 10
9999 mem: storing 10 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 10
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 10
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 113
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 0
9999 mem: location 2037 is 30
9999 mem: storing 0 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 0
9999 mem: location 2041 is 10
9999 mem: storing 10 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 12 -> 13
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 113
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 113
9999 mem: location 2033 is 7
9999 mem: storing 113 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 10
9998 run: address to copy to is 1036
9999 mem: location 2050 is 113
9999 mem: location 2051 is 7
9999 mem: storing 113 in location 1036
9999 mem: storing 7 in location 1037
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 10
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 10
9999 mem: storing 11 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 11
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 11 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: print {screen: ("address" "screen")}, {space: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1934 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 18 -> 19
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 0
9999 mem: storing 0 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 0
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 0
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 11
9999 mem: storing 11 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 11
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 11
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 0
9999 mem: location 2037 is 30
9999 mem: storing 0 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 0
9999 mem: location 2041 is 11
9999 mem: storing 11 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 13 -> 14
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 11
9998 run: address to copy to is 1038
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1038
9999 mem: storing 7 in location 1039
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 11
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 11
9999 mem: storing 12 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 12
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 12 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {col: "number"} <- add {col: "number"}, {1: "literal"}
9999 mem: location 1938 is 3
9999 mem: storing 4 in location 1938
 104 run: jump {: "offset"}
9998 run: jumping to instruction 14
 104 run: {done?: "boolean"} <- equal {col: "number"}, {8: "literal"}
9999 mem: location 1938 is 4
9999 mem: storing 0 in location 1935
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1935 is 0
9998 run: jump-if fell through
 104 run: {f: ("address" "array" "character")} <- index {board: ("address" "array" "address" "array" "character"), "lookup": ()}, {col: "number"}
9999 mem: location 1932 is 1826
9999 mem: skipping refcount at 1826
9998 run: base address is 1827
9999 mem: location 1938 is 4
9998 run: address to copy is 1832
9998 run: its type is address
9999 mem: location 1832 is 1876
9999 mem: decrementing refcount of 1866: 3 -> 2
9999 mem: incrementing refcount of 1876: 2 -> 3
9999 mem: storing 1876 in location 1939
 104 run: {c: "character"} <- index {f: ("address" "array" "character"), "lookup": ()}, {row: "number"}
9999 mem: location 1939 is 1876
9999 mem: skipping refcount at 1876
9998 run: base address is 1877
9999 mem: location 1933 is 7
9998 run: address to copy is 1885
9998 run: its type is character
9999 mem: location 1885 is 107
9999 mem: storing 107 in location 1940
 104 run: print {screen: ("address" "screen")}, {c: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1940 is 107
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 19 -> 20
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 107 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 107
  90 print-character: 107 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 0
9999 mem: storing 0 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 0
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 0
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 12
9999 mem: storing 12 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 12
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 107
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 0
9999 mem: location 2037 is 30
9999 mem: storing 0 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 0
9999 mem: location 2041 is 12
9999 mem: storing 12 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 14 -> 15
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 107
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 107
9999 mem: location 2033 is 7
9999 mem: storing 107 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 12
9998 run: address to copy to is 1040
9999 mem: location 2050 is 107
9999 mem: location 2051 is 7
9999 mem: storing 107 in location 1040
9999 mem: storing 7 in location 1041
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 12
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 12
9999 mem: storing 13 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 13
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 13 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: print {screen: ("address" "screen")}, {space: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1934 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 20 -> 21
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 0
9999 mem: storing 0 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 0
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 0
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 13
9999 mem: storing 13 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 13
9999 mem: storing 1 in location 2040
9990 schedule: print/print-board/run_1001/scenario_making-a-move
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 13
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 0
9999 mem: location 2037 is 30
9999 mem: storing 0 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 0
9999 mem: location 2041 is 13
9999 mem: storing 13 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 15 -> 16
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 13
9998 run: address to copy to is 1042
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1042
9999 mem: storing 7 in location 1043
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 13
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 13
9999 mem: storing 14 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 14
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 14 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {col: "number"} <- add {col: "number"}, {1: "literal"}
9999 mem: location 1938 is 4
9999 mem: storing 5 in location 1938
 104 run: jump {: "offset"}
9998 run: jumping to instruction 14
 104 run: {done?: "boolean"} <- equal {col: "number"}, {8: "literal"}
9999 mem: location 1938 is 5
9999 mem: storing 0 in location 1935
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1935 is 0
9998 run: jump-if fell through
 104 run: {f: ("address" "array" "character")} <- index {board: ("address" "array" "address" "array" "character"), "lookup": ()}, {col: "number"}
9999 mem: location 1932 is 1826
9999 mem: skipping refcount at 1826
9998 run: base address is 1827
9999 mem: location 1938 is 5
9998 run: address to copy is 1833
9998 run: its type is address
9999 mem: location 1833 is 1886
9999 mem: decrementing refcount of 1876: 3 -> 2
9999 mem: incrementing refcount of 1886: 2 -> 3
9999 mem: storing 1886 in location 1939
 104 run: {c: "character"} <- index {f: ("address" "array" "character"), "lookup": ()}, {row: "number"}
9999 mem: location 1939 is 1886
9999 mem: skipping refcount at 1886
9998 run: base address is 1887
9999 mem: location 1933 is 7
9998 run: address to copy is 1895
9998 run: its type is character
9999 mem: location 1895 is 98
9999 mem: storing 98 in location 1940
 104 run: print {screen: ("address" "screen")}, {c: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1940 is 98
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 21 -> 22
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 98
  90 print-character: 98 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 0
9999 mem: storing 0 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 0
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 0
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 14
9999 mem: storing 14 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 14
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 14
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 98
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 0
9999 mem: location 2037 is 30
9999 mem: storing 0 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 0
9999 mem: location 2041 is 14
9999 mem: storing 14 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 16 -> 17
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 98
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 98
9999 mem: location 2033 is 7
9999 mem: storing 98 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 14
9998 run: address to copy to is 1044
9999 mem: location 2050 is 98
9999 mem: location 2051 is 7
9999 mem: storing 98 in location 1044
9999 mem: storing 7 in location 1045
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 14
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 14
9999 mem: storing 15 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 15
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 15 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: print {screen: ("address" "screen")}, {space: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1934 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 22 -> 23
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 0
9999 mem: storing 0 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 0
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 0
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 15
9999 mem: storing 15 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 15
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 15
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 0
9999 mem: location 2037 is 30
9999 mem: storing 0 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 0
9999 mem: location 2041 is 15
9999 mem: storing 15 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 17 -> 18
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 15
9998 run: address to copy to is 1046
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1046
9999 mem: storing 7 in location 1047
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 15
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 15
9999 mem: storing 16 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 16
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 16 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {col: "number"} <- add {col: "number"}, {1: "literal"}
9999 mem: location 1938 is 5
9999 mem: storing 6 in location 1938
 104 run: jump {: "offset"}
9998 run: jumping to instruction 14
 104 run: {done?: "boolean"} <- equal {col: "number"}, {8: "literal"}
9999 mem: location 1938 is 6
9999 mem: storing 0 in location 1935
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1935 is 0
9998 run: jump-if fell through
 104 run: {f: ("address" "array" "character")} <- index {board: ("address" "array" "address" "array" "character"), "lookup": ()}, {col: "number"}
9999 mem: location 1932 is 1826
9999 mem: skipping refcount at 1826
9998 run: base address is 1827
9999 mem: location 1938 is 6
9998 run: address to copy is 1834
9998 run: its type is address
9999 mem: location 1834 is 1896
9999 mem: decrementing refcount of 1886: 3 -> 2
9999 mem: incrementing refcount of 1896: 4 -> 5
9999 mem: storing 1896 in location 1939
 104 run: {c: "character"} <- index {f: ("address" "array" "character"), "lookup": ()}, {row: "number"}
9999 mem: location 1939 is 1896
9999 mem: skipping refcount at 1896
9998 run: base address is 1897
9999 mem: location 1933 is 7
9998 run: address to copy is 1905
9998 run: its type is character
9999 mem: location 1905 is 110
9999 mem: storing 110 in location 1940
 104 run: print {screen: ("address" "screen")}, {c: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1940 is 110
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 23 -> 24
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 110 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 110
  90 print-character: 110 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 0
9999 mem: storing 0 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 0
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 0
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 16
9999 mem: storing 16 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 16
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 16
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 110
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 0
9999 mem: location 2037 is 30
9999 mem: storing 0 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 0
9999 mem: location 2041 is 16
9999 mem: storing 16 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 18 -> 19
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 110
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 110
9999 mem: location 2033 is 7
9999 mem: storing 110 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 16
9998 run: address to copy to is 1048
9999 mem: location 2050 is 110
9999 mem: location 2051 is 7
9999 mem: storing 110 in location 1048
9999 mem: storing 7 in location 1049
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 16
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 16
9999 mem: storing 17 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 17
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 17 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: print {screen: ("address" "screen")}, {space: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1934 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 24 -> 25
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 0
9999 mem: storing 0 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 0
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 0
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 17
9999 mem: storing 17 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 17
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 17
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 0
9999 mem: location 2037 is 30
9999 mem: storing 0 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 0
9999 mem: location 2041 is 17
9999 mem: storing 17 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 19 -> 20
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 17
9998 run: address to copy to is 1050
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1050
9999 mem: storing 7 in location 1051
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 17
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 17
9999 mem: storing 18 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 18
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 18 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {col: "number"} <- add {col: "number"}, {1: "literal"}
9999 mem: location 1938 is 6
9999 mem: storing 7 in location 1938
 104 run: jump {: "offset"}
9998 run: jumping to instruction 14
 104 run: {done?: "boolean"} <- equal {col: "number"}, {8: "literal"}
9999 mem: location 1938 is 7
9999 mem: storing 0 in location 1935
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1935 is 0
9998 run: jump-if fell through
 104 run: {f: ("address" "array" "character")} <- index {board: ("address" "array" "address" "array" "character"), "lookup": ()}, {col: "number"}
9999 mem: location 1932 is 1826
9999 mem: skipping refcount at 1826
9998 run: base address is 1827
9999 mem: location 1938 is 7
9998 run: address to copy is 1835
9998 run: its type is address
9999 mem: location 1835 is 1906
9999 mem: decrementing refcount of 1896: 5 -> 4
9999 mem: incrementing refcount of 1906: 3 -> 4
9999 mem: storing 1906 in location 1939
 104 run: {c: "character"} <- index {f: ("address" "array" "character"), "lookup": ()}, {row: "number"}
9999 mem: location 1939 is 1906
9999 mem: skipping refcount at 1906
9998 run: base address is 1907
9999 mem: location 1933 is 7
9998 run: address to copy is 1915
9998 run: its type is character
9999 mem: location 1915 is 114
9999 mem: storing 114 in location 1940
 104 run: print {screen: ("address" "screen")}, {c: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1940 is 114
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 25 -> 26
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 114 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 114
  90 print-character: 114 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 0
9999 mem: storing 0 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 0
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 0
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 18
9999 mem: storing 18 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 18
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 18
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 114
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 0
9999 mem: location 2037 is 30
9999 mem: storing 0 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 0
9999 mem: location 2041 is 18
9999 mem: storing 18 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 20 -> 21
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 114
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 114
9999 mem: location 2033 is 7
9999 mem: storing 114 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 18
9998 run: address to copy to is 1052
9999 mem: location 2050 is 114
9999 mem: location 2051 is 7
9999 mem: storing 114 in location 1052
9999 mem: storing 7 in location 1053
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 18
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 18
9999 mem: storing 19 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 19
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 19 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: print {screen: ("address" "screen")}, {space: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1934 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 26 -> 27
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 0
9999 mem: storing 0 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 0
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 0
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 19
9999 mem: storing 19 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 19
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 19
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 0
9999 mem: location 2037 is 30
9999 mem: storing 0 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 0
9999 mem: location 2041 is 19
9999 mem: storing 19 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 21 -> 22
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 19
9998 run: address to copy to is 1054
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1054
9999 mem: storing 7 in location 1055
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 19
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 19
9999 mem: storing 20 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 20
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 20 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {col: "number"} <- add {col: "number"}, {1: "literal"}
9999 mem: location 1938 is 7
9999 mem: storing 8 in location 1938
 104 run: jump {: "offset"}
9998 run: jumping to instruction 14
 104 run: {done?: "boolean"} <- equal {col: "number"}, {8: "literal"}
9999 mem: location 1938 is 8
9999 mem: storing 1 in location 1935
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1935 is 1
9998 run: jumping to instruction 22
 104 run: {row: "number"} <- subtract {row: "number"}, {1: "literal"}
9999 mem: location 1933 is 7
9999 mem: storing 6 in location 1933
 104 run: cursor-to-next-line {screen: ("address" "screen")}
9999 mem: location 1931 is 1008
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 2
9999 mem: allocating size 4
9999 mem: new alloc: 2059
9999 mem: storing 0 in location 2059
9999 mem: storing 0 in location 2060
9999 mem: storing 0 in location 2061
9999 mem: storing 0 in location 2062
9999 mem: storing 2 in location 2060
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 27 -> 28
9999 mem: storing 1008 in location 2062
 105 run: {screen: ("address" "screen")} <- cursor-down {screen: ("address" "screen")}
9999 mem: location 2062 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 28 -> 29
9999 mem: storing 1008 in location 1003
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1004
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 0
9999 mem: storing 0 in location 1005
 106 run: {max: "number"} <- subtract {height: "number"}, {1: "literal"}
9999 mem: location 1004 is 12
9999 mem: storing 11 in location 1006
 106 run: {at-bottom?: "boolean"} <- greater-or-equal {row: "number"}, {max: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1006 is 11
9999 mem: storing 0 in location 1007
 106 run: jump-if {at-bottom?: "boolean"}, {: "offset"}
9999 mem: location 1007 is 0
9998 run: jump-if fell through
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1005 is 0
9999 mem: storing 1 in location 1005
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {row: "number"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 0
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 1005 is 1
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 1008 in location 2062
 105 run: {screen: ("address" "screen")} <- cursor-to-start-of-line {screen: ("address" "screen")}
9999 mem: location 2062 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1961
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 29 -> 30
9999 mem: storing 1008 in location 1964
 106 run: {row: "number"} <- cursor-position {screen: ("address" "screen")}
9999 mem: location 1964 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 mem: new alloc: 2063
9999 mem: storing 0 in location 2063
9999 mem: storing 0 in location 2064
9999 mem: storing 0 in location 2065
9999 mem: storing 0 in location 2066
9999 mem: storing 0 in location 2067
9999 mem: storing 0 in location 2068
9999 mem: storing 4 in location 2064
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 30 -> 31
9999 mem: storing 1008 in location 2066
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2066 is 1008
9998 run: jump-unless fell through
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2066 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 2066 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 2067
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2066 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 2066 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 20
9999 mem: storing 20 in location 2068
 107 run: return {row: "number"}, {column: "number"}
9999 mem: location 2067 is 1
9999 mem: location 2068 is 20
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1
9999 mem: storing 1 in location 1965
 106 run: {column: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1966
 106 run: {screen: ("address" "screen")} <- move-cursor {screen: ("address" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1964 is 1008
9999 mem: location 1965 is 1
9999 mem: location 1966 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 2063
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 31 -> 32
9999 mem: storing 1008 in location 2066
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 2067
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 2068
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2066 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 2066 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 2067 is 1
9999 mem: location 2066 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 2066 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 2068 is 0
9999 mem: location 2066 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2066 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 1008 in location 1964
 106 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1964 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 1008 in location 2062
 105 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2062 is 1008
9999 abandon: saving in free-list of size 4
9999 trace: reply: decrementing callstack depth from 4
 104 run: jump {: "offset"}
9998 run: jumping to instruction 6
 104 run: {done?: "boolean"} <- lesser-than {row: "number"}, {0: "literal"}
9999 mem: location 1933 is 6
9999 mem: storing 0 in location 1935
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1935 is 0
9998 run: jump-if fell through
 104 run: {rank: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1933 is 6
9999 mem: storing 7 in location 1936
 104 run: print-integer {screen: ("address" "screen")}, {rank: "number"}
9999 mem: location 1931 is 1008
9999 mem: location 1936 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1736
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 32 -> 33
9999 mem: storing 1008 in location 1739
 105 run: {n: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1740
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1741
9999 mem: storing 0 in location 1742
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1742 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1741
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1743
9999 mem: storing 0 in location 1744
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1744 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1743
 105 run: {s: ("address" "array" "character")} <- to-text_3 {n: "number"}
9999 mem: location 1740 is 7
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 16
9999 mem: allocating size 18
9999 abandon: picking up space from free-list of size 18
9999 mem: new alloc from free list: 1943
 106 run: {n: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1946
 106 run: jump-if {n: "number"}, {: "offset"}
9999 mem: location 1946 is 7
9998 run: jumping to instruction 6
 106 run: {negate-result: "boolean"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1948
 106 run: {negative?: "boolean"} <- lesser-than {n: "number"}, {0: "literal"}
9999 mem: location 1946 is 7
9999 mem: storing 0 in location 1949
 106 run: jump-unless {negative?: "boolean"}, {: "offset"}
9999 mem: location 1949 is 0
9998 run: jumping to instruction 13
 106 run: {tmp: ("address" "buffer")} <- new-buffer {30: "literal"}
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1961
 107 run: {capacity: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 30 in location 1964
 107 run: {result: ("address" "buffer")} <- new {buffer: "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 2069
9999 mem: storing 0 in location 2069
9999 mem: storing 0 in location 2070
9999 mem: storing 0 in location 2071
9999 mem: incrementing refcount of 2069: 0 -> 1
9999 mem: storing 2069 in location 1965
 107 run: {result: ("address" "buffer"), "lookup": ()} <- put {result: ("address" "buffer"), "lookup": ()}, {length: "offset"}, {0: "literal"}
9999 mem: location 1965 is 2069
9999 mem: skipping refcount at 2069
9999 mem: location 2070 is 0
9999 mem: location 2071 is 0
9999 mem: location 1965 is 2069
9999 mem: skipping refcount at 2069
9998 run: address to copy to is 2070
9999 mem: storing 0 in location 2070
 107 run: {data: ("address" "array" "character")} <- new {character: "type"}, {capacity: "number"}
9999 mem: location 1964 is 30
9999 mem: array size is 30
9999 mem: allocating size 32
9999 mem: new alloc: 2072
9999 mem: storing 0 in location 2072
9999 mem: storing 0 in location 2073
9999 mem: storing 0 in location 2074
9999 mem: storing 0 in location 2075
9999 mem: storing 0 in location 2076
9999 mem: storing 0 in location 2077
9999 mem: storing 0 in location 2078
9999 mem: storing 0 in location 2079
9999 mem: storing 0 in location 2080
9999 mem: storing 0 in location 2081
9999 mem: storing 0 in location 2082
9999 mem: storing 0 in location 2083
9999 mem: storing 0 in location 2084
9999 mem: storing 0 in location 2085
9999 mem: storing 0 in location 2086
9999 mem: storing 0 in location 2087
9999 mem: storing 0 in location 2088
9999 mem: storing 0 in location 2089
9999 mem: storing 0 in location 2090
9999 mem: storing 0 in location 2091
9999 mem: storing 0 in location 2092
9999 mem: storing 0 in location 2093
9999 mem: storing 0 in location 2094
9999 mem: storing 0 in location 2095
9999 mem: storing 0 in location 2096
9999 mem: storing 0 in location 2097
9999 mem: storing 0 in location 2098
9999 mem: storing 0 in location 2099
9999 mem: storing 0 in location 2100
9999 mem: storing 0 in location 2101
9999 mem: storing 0 in location 2102
9999 mem: storing 0 in location 2103
9999 mem: storing 30 in location 2073
9999 mem: incrementing refcount of 2072: 0 -> 1
9999 mem: storing 2072 in location 1966
 107 run: {result: ("address" "buffer"), "lookup": ()} <- put {result: ("address" "buffer"), "lookup": ()}, {data: "offset"}, {data: ("address" "array" "character")}
9999 mem: location 1965 is 2069
9999 mem: skipping refcount at 2069
9999 mem: location 2070 is 0
9999 mem: location 2071 is 0
9999 mem: location 1966 is 2072
9999 mem: location 1965 is 2069
9999 mem: skipping refcount at 2069
9998 run: address to copy to is 2071
9999 mem: incrementing refcount of 2072: 1 -> 2
9999 mem: storing 2072 in location 2071
 107 run: return {result: ("address" "buffer")}
9999 mem: location 1965 is 2069
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 2069
9999 mem: incrementing refcount of 2069: 1 -> 2
9999 mem: storing 2069 in location 1950
 106 run: {digit-base: "number"} <- copy {48: "literal"}
9999 mem: storing 48 in location 1951
 106 run: {done?: "boolean"} <- equal {n: "number"}, {0: "literal"}
9999 mem: location 1946 is 7
9999 mem: storing 0 in location 1952
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1952 is 0
9998 run: jump-if fell through
 106 run: {n: "number"}, {digit: "number"} <- divide-with-remainder {n: "number"}, {10: "literal"}
9999 mem: location 1946 is 7
9999 mem: storing 0 in location 1946
9999 mem: storing 7 in location 1953
 106 run: {c: "character"} <- add {digit-base: "number"}, {digit: "number"}
9999 mem: location 1951 is 48
9999 mem: location 1953 is 7
9999 mem: storing 55 in location 1954
 106 run: {tmp: ("address" "buffer")} <- append_2 {tmp: ("address" "buffer")}, {c: "character"}
9999 mem: location 1950 is 2069
9999 mem: location 1954 is 55
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 2002
 107 run: {in: ("address" "buffer")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 2069: 2 -> 3
9999 mem: storing 2069 in location 2005
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 55 in location 2006
 107 run: {len: "number"} <- get {in: ("address" "buffer"), "lookup": ()}, {length: "offset"}
9999 mem: location 2005 is 2069
9999 mem: skipping refcount at 2069
9999 mem: location 2070 is 0
9999 mem: location 2071 is 2072
9999 mem: location 2005 is 2069
9999 mem: skipping refcount at 2069
9998 run: address to copy is 2070
9998 run: its type is "number"
9999 mem: location 2070 is 0
9999 mem: storing 0 in location 2007
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal", "backspace": ()}
9999 mem: location 2006 is 55
9999 mem: storing 0 in location 2008
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2008 is 0
9998 run: jumping to instruction 15
9990 schedule: append_2/to-text_3/print-integer/print-board/run_1001/scenario_making-a-move
 107 run: {full?: "boolean"} <- buffer-full? {in: ("address" "buffer")}
9999 mem: location 2005 is 2069
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 108 run: {in: ("address" "buffer")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 2069: 3 -> 4
9999 mem: storing 2069 in location 1003
 108 run: {len: "number"} <- get {in: ("address" "buffer"), "lookup": ()}, {length: "offset"}
9999 mem: location 1003 is 2069
9999 mem: skipping refcount at 2069
9999 mem: location 2070 is 0
9999 mem: location 2071 is 2072
9999 mem: location 1003 is 2069
9999 mem: skipping refcount at 2069
9998 run: address to copy is 2070
9998 run: its type is "number"
9999 mem: location 2070 is 0
9999 mem: storing 0 in location 1004
 108 run: {s: ("address" "array" "character")} <- get {in: ("address" "buffer"), "lookup": ()}, {data: "offset"}
9999 mem: location 1003 is 2069
9999 mem: skipping refcount at 2069
9999 mem: location 2070 is 0
9999 mem: location 2071 is 2072
9999 mem: location 1003 is 2069
9999 mem: skipping refcount at 2069
9998 run: address to copy is 2071
9998 run: its type is ("address" "array" "character")
9999 mem: location 2071 is 2072
9999 mem: incrementing refcount of 2072: 2 -> 3
9999 mem: storing 2072 in location 1005
 108 run: {capacity: "number"} <- length {s: ("address" "array" "character"), "lookup": ()}
9999 mem: location 1005 is 2072
9999 mem: skipping refcount at 2072
9999 mem: storing 30 in location 1006
 108 run: {result: "boolean"} <- greater-or-equal {len: "number"}, {capacity: "number"}
9999 mem: location 1004 is 0
9999 mem: location 1006 is 30
9999 mem: storing 0 in location 1007
 108 run: reply {result: "boolean"}
9999 mem: location 1007 is 0
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 0
9999 mem: storing 0 in location 2010
 107 run: jump-unless {full?: "boolean"}, {: "offset"}
9999 mem: location 2010 is 0
9998 run: jumping to instruction 20
 107 run: {s: ("address" "array" "character")} <- get {in: ("address" "buffer"), "lookup": ()}, {data: "offset"}
9999 mem: location 2005 is 2069
9999 mem: skipping refcount at 2069
9999 mem: location 2070 is 0
9999 mem: location 2071 is 2072
9999 mem: location 2005 is 2069
9999 mem: skipping refcount at 2069
9998 run: address to copy is 2071
9998 run: its type is ("address" "array" "character")
9999 mem: location 2071 is 2072
9999 mem: incrementing refcount of 2072: 3 -> 4
9999 mem: storing 2072 in location 2011
 107 run: {s: ("address" "array" "character"), "lookup": ()} <- put-index {s: ("address" "array" "character"), "lookup": ()}, {len: "number"}, {c: "character"}
9999 mem: location 2011 is 2072
9999 mem: skipping refcount at 2072
9999 mem: location 2007 is 0
9998 run: address to copy to is 2074
9999 mem: location 2006 is 55
9999 mem: storing 55 in location 2074
 107 run: {len: "number"} <- add {len: "number"}, {1: "literal"}
9999 mem: location 2007 is 0
9999 mem: storing 1 in location 2007
 107 run: {in: ("address" "buffer"), "lookup": ()} <- put {in: ("address" "buffer"), "lookup": ()}, {length: "offset"}, {len: "number"}
9999 mem: location 2005 is 2069
9999 mem: skipping refcount at 2069
9999 mem: location 2070 is 0
9999 mem: location 2071 is 2072
9999 mem: location 2007 is 1
9999 mem: location 2005 is 2069
9999 mem: skipping refcount at 2069
9998 run: address to copy to is 2070
9999 mem: storing 1 in location 2070
 107 run: reply {in: ("address" "buffer"), "same-as-ingredient": "0"}
9999 mem: location 2005 is 2069
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 2069
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 2069 in location 1950
 106 run: jump {: "offset"}
9998 run: jumping to instruction 17
 106 run: {done?: "boolean"} <- equal {n: "number"}, {0: "literal"}
9999 mem: location 1946 is 0
9999 mem: storing 1 in location 1952
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1952 is 1
9998 run: jumping to instruction 23
 106 run: jump-unless {negate-result: "boolean"}, {: "offset"}
9999 mem: location 1948 is 0
9998 run: jumping to instruction 28
 106 run: {len: "number"} <- get {tmp: ("address" "buffer"), "lookup": ()}, {length: "offset"}
9999 mem: location 1950 is 2069
9999 mem: skipping refcount at 2069
9999 mem: location 2070 is 1
9999 mem: location 2071 is 2072
9999 mem: location 1950 is 2069
9999 mem: skipping refcount at 2069
9998 run: address to copy is 2070
9998 run: its type is "number"
9999 mem: location 2070 is 1
9999 mem: storing 1 in location 1956
 106 run: {buf: ("address" "array" "character")} <- get {tmp: ("address" "buffer"), "lookup": ()}, {data: "offset"}
9999 mem: location 1950 is 2069
9999 mem: skipping refcount at 2069
9999 mem: location 2070 is 1
9999 mem: location 2071 is 2072
9999 mem: location 1950 is 2069
9999 mem: skipping refcount at 2069
9998 run: address to copy is 2071
9998 run: its type is ("address" "array" "character")
9999 mem: location 2071 is 2072
9999 mem: incrementing refcount of 2072: 4 -> 5
9999 mem: storing 2072 in location 1957
 106 run: {result: ("address" "array" "character")} <- new {character: "type"}, {len: "number"}
9999 mem: location 1956 is 1
9999 mem: array size is 1
9999 mem: allocating size 3
9999 mem: new alloc: 2104
9999 mem: storing 0 in location 2104
9999 mem: storing 0 in location 2105
9999 mem: storing 0 in location 2106
9999 mem: storing 1 in location 2105
9999 mem: incrementing refcount of 2104: 0 -> 1
9999 mem: storing 2104 in location 1947
 106 run: {i: "number"} <- subtract {len: "number"}, {1: "literal"}
9999 mem: location 1956 is 1
9999 mem: storing 0 in location 1958
 106 run: {j: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1959
 106 run: {done?: "boolean"} <- lesser-than {i: "number"}, {0: "literal"}
9999 mem: location 1958 is 0
9999 mem: storing 0 in location 1952
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1952 is 0
9998 run: jump-if fell through
 106 run: {src: "character"} <- index {buf: ("address" "array" "character"), "lookup": ()}, {i: "number"}
9999 mem: location 1957 is 2072
9999 mem: skipping refcount at 2072
9998 run: base address is 2073
9999 mem: location 1958 is 0
9998 run: address to copy is 2074
9998 run: its type is character
9999 mem: location 2074 is 55
9999 mem: storing 55 in location 1960
 106 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {j: "number"}, {src: "character"}
9999 mem: location 1947 is 2104
9999 mem: skipping refcount at 2104
9999 mem: location 1959 is 0
9998 run: address to copy to is 2106
9999 mem: location 1960 is 55
9999 mem: storing 55 in location 2106
 106 run: {i: "number"} <- subtract {i: "number"}, {1: "literal"}
9999 mem: location 1958 is 0
9999 mem: storing -1 in location 1958
 106 run: {j: "number"} <- add {j: "number"}, {1: "literal"}
9999 mem: location 1959 is 0
9999 mem: storing 1 in location 1959
 106 run: jump {: "offset"}
9998 run: jumping to instruction 35
 106 run: {done?: "boolean"} <- lesser-than {i: "number"}, {0: "literal"}
9999 mem: location 1958 is -1
9999 mem: storing 1 in location 1952
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1952 is 1
9998 run: jumping to instruction 42
 106 run: reply {result: ("address" "array" "character")}
9999 mem: location 1947 is 2104
9999 abandon: saving in free-list of size 18
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 2104
9999 mem: incrementing refcount of 2104: 1 -> 2
9999 mem: storing 2104 in location 1745
 105 run: {screen: ("address" "screen")} <- print_2 {screen: ("address" "screen")}, {s: ("address" "array" "character")}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1739 is 1008
9999 mem: location 1745 is 2104
9999 mem: location 1741 is 7
9999 mem: location 1743 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 11
9999 mem: allocating size 13
9999 abandon: picking up space from free-list of size 13
9999 mem: new alloc from free list: 2015
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 33 -> 34
9999 mem: storing 1008 in location 2018
 106 run: {s: ("address" "array" "character")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 2104: 2 -> 3
9999 mem: storing 2104 in location 2019
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 2020
9999 mem: storing 1 in location 2021
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2021 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2022
9999 mem: storing 1 in location 2023
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2023 is 1
9998 run: jumping to instruction 12
 106 run: {len: "number"} <- length {s: ("address" "array" "character"), "lookup": ()}
9999 mem: location 2019 is 2104
9999 mem: skipping refcount at 2104
9999 mem: storing 1 in location 2024
 106 run: {i: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 2025
 106 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 2025 is 0
9999 mem: location 2024 is 1
9999 mem: storing 0 in location 2026
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 2026 is 0
9998 run: jump-if fell through
 106 run: {c: "character"} <- index {s: ("address" "array" "character"), "lookup": ()}, {i: "number"}
9999 mem: location 2019 is 2104
9999 mem: skipping refcount at 2104
9998 run: base address is 2105
9999 mem: location 2025 is 0
9998 run: address to copy is 2106
9998 run: its type is character
9999 mem: location 2106 is 55
9999 mem: storing 55 in location 2027
 106 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 2018 is 1008
9999 mem: location 2027 is 55
9999 mem: location 2020 is 7
9999 mem: location 2022 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 34 -> 35
9999 mem: storing 1008 in location 2031
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 55 in location 2032
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 2033
9999 mem: storing 1 in location 2034
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 1 in location 2036
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 55
  90 print-character: 55 
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 2039
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 1
9999 mem: storing 1 in location 2040
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 1
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 2041
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 0
9999 mem: storing 1 in location 2040
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 0
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 55
9999 mem: storing 0 in location 2042
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 1
9999 mem: location 2037 is 30
9999 mem: storing 30 in location 2045
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 30
9999 mem: location 2041 is 0
9999 mem: storing 30 in location 2045
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 22 -> 23
9999 mem: storing 1014 in location 2046
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 55
9999 mem: storing 0 in location 2048
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 55
9999 mem: location 2033 is 7
9999 mem: storing 55 in location 2050
9999 mem: storing 7 in location 2051
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 30
9998 run: address to copy to is 1076
9999 mem: location 2050 is 55
9999 mem: location 2051 is 7
9999 mem: storing 55 in location 1076
9999 mem: storing 7 in location 1077
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 0
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 0
9999 mem: storing 1 in location 2041
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 1
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
 106 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 2025 is 0
9999 mem: storing 1 in location 2025
 106 run: jump {: "offset"}
9998 run: jumping to instruction 16
 106 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 2025 is 1
9999 mem: location 2024 is 1
9999 mem: storing 1 in location 2026
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 2026 is 1
9998 run: jumping to instruction 22
 106 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2018 is 1008
9999 abandon: saving in free-list of size 13
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 1008 in location 1739
 105 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1739 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 4
 104 run: {print_10_1: ("address" "array" "character")} <- new {" | ": "literal-string"}
9999 mem: new string alloc: 2107
9999 mem: decrementing refcount of 2054: 2 -> 1
9999 mem: incrementing refcount of 2107: 0 -> 1
9999 mem: storing 2107 in location 1937
 104 run: print_2 {screen: ("address" "screen")}, {print_10_1: ("address" "array" "character")}
9999 mem: location 1931 is 1008
9999 mem: location 1937 is 2107
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 11
9999 mem: allocating size 13
9999 abandon: picking up space from free-list of size 13
9999 mem: new alloc from free list: 2015
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 35 -> 36
9999 mem: storing 1008 in location 2018
 105 run: {s: ("address" "array" "character")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 2107: 1 -> 2
9999 mem: storing 2107 in location 2019
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2020
9999 mem: storing 0 in location 2021
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2021 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2020
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2022
9999 mem: storing 0 in location 2023
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2023 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2022
 105 run: {len: "number"} <- length {s: ("address" "array" "character"), "lookup": ()}
9999 mem: location 2019 is 2107
9999 mem: skipping refcount at 2107
9999 mem: storing 3 in location 2024
 105 run: {i: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 2025
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 2025 is 0
9999 mem: location 2024 is 3
9999 mem: storing 0 in location 2026
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 2026 is 0
9998 run: jump-if fell through
 105 run: {c: "character"} <- index {s: ("address" "array" "character"), "lookup": ()}, {i: "number"}
9999 mem: location 2019 is 2107
9999 mem: skipping refcount at 2107
9998 run: base address is 2108
9999 mem: location 2025 is 0
9998 run: address to copy is 2109
9998 run: its type is character
9999 mem: location 2109 is 32
9999 mem: storing 32 in location 2027
 105 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 2018 is 1008
9999 mem: location 2027 is 32
9999 mem: location 2020 is 7
9999 mem: location 2022 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 36 -> 37
9999 mem: storing 1008 in location 2031
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 2033
9999 mem: storing 1 in location 2034
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 1 in location 2036
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 2039
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 1
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 1
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 2041
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 1
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 1
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 1
9999 mem: location 2037 is 30
9999 mem: storing 30 in location 2045
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 30
9999 mem: location 2041 is 1
9999 mem: storing 31 in location 2045
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 23 -> 24
9999 mem: storing 1014 in location 2046
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 31
9998 run: address to copy to is 1078
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1078
9999 mem: storing 7 in location 1079
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 1
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 1
9999 mem: storing 2 in location 2041
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 2
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 2025 is 0
9999 mem: storing 1 in location 2025
 105 run: jump {: "offset"}
9998 run: jumping to instruction 16
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 2025 is 1
9999 mem: location 2024 is 3
9999 mem: storing 0 in location 2026
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 2026 is 0
9998 run: jump-if fell through
 105 run: {c: "character"} <- index {s: ("address" "array" "character"), "lookup": ()}, {i: "number"}
9999 mem: location 2019 is 2107
9999 mem: skipping refcount at 2107
9998 run: base address is 2108
9999 mem: location 2025 is 1
9998 run: address to copy is 2110
9998 run: its type is character
9999 mem: location 2110 is 124
9999 mem: storing 124 in location 2027
 105 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 2018 is 1008
9999 mem: location 2027 is 124
9999 mem: location 2020 is 7
9999 mem: location 2022 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 37 -> 38
9999 mem: storing 1008 in location 2031
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 124 in location 2032
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 2033
9999 mem: storing 1 in location 2034
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 1 in location 2036
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 124
  90 print-character: 124 
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 2039
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 1
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 1
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 2041
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 2
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 2
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 124
9999 mem: storing 0 in location 2042
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 1
9999 mem: location 2037 is 30
9999 mem: storing 30 in location 2045
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 30
9999 mem: location 2041 is 2
9999 mem: storing 32 in location 2045
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 24 -> 25
9999 mem: storing 1014 in location 2046
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 124
9999 mem: storing 0 in location 2048
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 124
9999 mem: location 2033 is 7
9999 mem: storing 124 in location 2050
9999 mem: storing 7 in location 2051
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 32
9998 run: address to copy to is 1080
9999 mem: location 2050 is 124
9999 mem: location 2051 is 7
9999 mem: storing 124 in location 1080
9999 mem: storing 7 in location 1081
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 2
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 2
9999 mem: storing 3 in location 2041
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 3
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 2025 is 1
9999 mem: storing 2 in location 2025
 105 run: jump {: "offset"}
9998 run: jumping to instruction 16
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 2025 is 2
9999 mem: location 2024 is 3
9999 mem: storing 0 in location 2026
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 2026 is 0
9998 run: jump-if fell through
 105 run: {c: "character"} <- index {s: ("address" "array" "character"), "lookup": ()}, {i: "number"}
9999 mem: location 2019 is 2107
9999 mem: skipping refcount at 2107
9998 run: base address is 2108
9999 mem: location 2025 is 2
9998 run: address to copy is 2111
9998 run: its type is character
9999 mem: location 2111 is 32
9999 mem: storing 32 in location 2027
 105 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 2018 is 1008
9999 mem: location 2027 is 32
9999 mem: location 2020 is 7
9999 mem: location 2022 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 38 -> 39
9999 mem: storing 1008 in location 2031
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 2033
9999 mem: storing 1 in location 2034
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 1 in location 2036
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 2039
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 1
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 1
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 2041
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 3
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 3
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 1
9999 mem: location 2037 is 30
9999 mem: storing 30 in location 2045
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 30
9999 mem: location 2041 is 3
9999 mem: storing 33 in location 2045
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 25 -> 26
9999 mem: storing 1014 in location 2046
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 33
9998 run: address to copy to is 1082
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1082
9999 mem: storing 7 in location 1083
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 3
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 3
9999 mem: storing 4 in location 2041
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 4
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 2025 is 2
9999 mem: storing 3 in location 2025
 105 run: jump {: "offset"}
9998 run: jumping to instruction 16
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 2025 is 3
9999 mem: location 2024 is 3
9999 mem: storing 1 in location 2026
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 2026 is 1
9998 run: jumping to instruction 22
 105 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2018 is 1008
9999 abandon: saving in free-list of size 13
9999 trace: reply: decrementing callstack depth from 4
 104 run: {col: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1938
 104 run: {done?: "boolean"} <- equal {col: "number"}, {8: "literal"}
9999 mem: location 1938 is 0
9999 mem: storing 0 in location 1935
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1935 is 0
9998 run: jump-if fell through
 104 run: {f: ("address" "array" "character")} <- index {board: ("address" "array" "address" "array" "character"), "lookup": ()}, {col: "number"}
9999 mem: location 1932 is 1826
9999 mem: skipping refcount at 1826
9998 run: base address is 1827
9999 mem: location 1938 is 0
9998 run: address to copy is 1828
9998 run: its type is address
9999 mem: location 1828 is 1836
9999 mem: decrementing refcount of 1906: 4 -> 3
9999 mem: incrementing refcount of 1836: 2 -> 3
9999 mem: storing 1836 in location 1939
 104 run: {c: "character"} <- index {f: ("address" "array" "character"), "lookup": ()}, {row: "number"}
9999 mem: location 1939 is 1836
9999 mem: skipping refcount at 1836
9998 run: base address is 1837
9999 mem: location 1933 is 6
9998 run: address to copy is 1844
9998 run: its type is character
9999 mem: location 1844 is 112
9999 mem: storing 112 in location 1940
 104 run: print {screen: ("address" "screen")}, {c: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1940 is 112
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 39 -> 40
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 112 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 112
  90 print-character: 112 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 1
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 1
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 4
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 4
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 112
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 1
9999 mem: location 2037 is 30
9999 mem: storing 30 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 30
9999 mem: location 2041 is 4
9999 mem: storing 34 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 26 -> 27
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 112
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 112
9999 mem: location 2033 is 7
9999 mem: storing 112 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 34
9998 run: address to copy to is 1084
9999 mem: location 2050 is 112
9999 mem: location 2051 is 7
9999 mem: storing 112 in location 1084
9999 mem: storing 7 in location 1085
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 4
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 4
9999 mem: storing 5 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 5
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: print {screen: ("address" "screen")}, {space: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1934 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 40 -> 41
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 1
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 1
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 5
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 5
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 1
9999 mem: location 2037 is 30
9999 mem: storing 30 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 30
9999 mem: location 2041 is 5
9999 mem: storing 35 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 27 -> 28
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 35
9998 run: address to copy to is 1086
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1086
9999 mem: storing 7 in location 1087
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 5
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 5
9999 mem: storing 6 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 6
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {col: "number"} <- add {col: "number"}, {1: "literal"}
9999 mem: location 1938 is 0
9999 mem: storing 1 in location 1938
 104 run: jump {: "offset"}
9998 run: jumping to instruction 14
 104 run: {done?: "boolean"} <- equal {col: "number"}, {8: "literal"}
9999 mem: location 1938 is 1
9999 mem: storing 0 in location 1935
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1935 is 0
9998 run: jump-if fell through
 104 run: {f: ("address" "array" "character")} <- index {board: ("address" "array" "address" "array" "character"), "lookup": ()}, {col: "number"}
9999 mem: location 1932 is 1826
9999 mem: skipping refcount at 1826
9998 run: base address is 1827
9999 mem: location 1938 is 1
9998 run: address to copy is 1829
9998 run: its type is address
9999 mem: location 1829 is 1846
9999 mem: decrementing refcount of 1836: 3 -> 2
9999 mem: incrementing refcount of 1846: 2 -> 3
9999 mem: storing 1846 in location 1939
 104 run: {c: "character"} <- index {f: ("address" "array" "character"), "lookup": ()}, {row: "number"}
9999 mem: location 1939 is 1846
9999 mem: skipping refcount at 1846
9998 run: base address is 1847
9999 mem: location 1933 is 6
9998 run: address to copy is 1854
9998 run: its type is character
9999 mem: location 1854 is 112
9999 mem: storing 112 in location 1940
 104 run: print {screen: ("address" "screen")}, {c: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1940 is 112
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 41 -> 42
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 112 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 112
  90 print-character: 112 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 1
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 1
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 6
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 6
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 112
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
9990 schedule: print/print-board/run_1001/scenario_making-a-move
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 1
9999 mem: location 2037 is 30
9999 mem: storing 30 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 30
9999 mem: location 2041 is 6
9999 mem: storing 36 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 28 -> 29
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 112
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 112
9999 mem: location 2033 is 7
9999 mem: storing 112 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 36
9998 run: address to copy to is 1088
9999 mem: location 2050 is 112
9999 mem: location 2051 is 7
9999 mem: storing 112 in location 1088
9999 mem: storing 7 in location 1089
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 6
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 6
9999 mem: storing 7 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 7
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: print {screen: ("address" "screen")}, {space: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1934 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 42 -> 43
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 1
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 1
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 7
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 7
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 1
9999 mem: location 2037 is 30
9999 mem: storing 30 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 30
9999 mem: location 2041 is 7
9999 mem: storing 37 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 29 -> 30
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 37
9998 run: address to copy to is 1090
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1090
9999 mem: storing 7 in location 1091
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 7
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 7
9999 mem: storing 8 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 8
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {col: "number"} <- add {col: "number"}, {1: "literal"}
9999 mem: location 1938 is 1
9999 mem: storing 2 in location 1938
 104 run: jump {: "offset"}
9998 run: jumping to instruction 14
 104 run: {done?: "boolean"} <- equal {col: "number"}, {8: "literal"}
9999 mem: location 1938 is 2
9999 mem: storing 0 in location 1935
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1935 is 0
9998 run: jump-if fell through
 104 run: {f: ("address" "array" "character")} <- index {board: ("address" "array" "address" "array" "character"), "lookup": ()}, {col: "number"}
9999 mem: location 1932 is 1826
9999 mem: skipping refcount at 1826
9998 run: base address is 1827
9999 mem: location 1938 is 2
9998 run: address to copy is 1830
9998 run: its type is address
9999 mem: location 1830 is 1856
9999 mem: decrementing refcount of 1846: 3 -> 2
9999 mem: incrementing refcount of 1856: 2 -> 3
9999 mem: storing 1856 in location 1939
 104 run: {c: "character"} <- index {f: ("address" "array" "character"), "lookup": ()}, {row: "number"}
9999 mem: location 1939 is 1856
9999 mem: skipping refcount at 1856
9998 run: base address is 1857
9999 mem: location 1933 is 6
9998 run: address to copy is 1864
9998 run: its type is character
9999 mem: location 1864 is 112
9999 mem: storing 112 in location 1940
 104 run: print {screen: ("address" "screen")}, {c: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1940 is 112
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 43 -> 44
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 112 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 112
  90 print-character: 112 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 1
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 1
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 8
9999 mem: storing 8 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 8
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 8
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 112
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 1
9999 mem: location 2037 is 30
9999 mem: storing 30 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 30
9999 mem: location 2041 is 8
9999 mem: storing 38 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 30 -> 31
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 112
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 112
9999 mem: location 2033 is 7
9999 mem: storing 112 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 38
9998 run: address to copy to is 1092
9999 mem: location 2050 is 112
9999 mem: location 2051 is 7
9999 mem: storing 112 in location 1092
9999 mem: storing 7 in location 1093
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 8
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 8
9999 mem: storing 9 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 9
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 9 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: print {screen: ("address" "screen")}, {space: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1934 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 44 -> 45
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 1
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 1
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 9
9999 mem: storing 9 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 9
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 9
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 1
9999 mem: location 2037 is 30
9999 mem: storing 30 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 30
9999 mem: location 2041 is 9
9999 mem: storing 39 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 31 -> 32
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 39
9998 run: address to copy to is 1094
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1094
9999 mem: storing 7 in location 1095
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 9
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 9
9999 mem: storing 10 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 10
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 10 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {col: "number"} <- add {col: "number"}, {1: "literal"}
9999 mem: location 1938 is 2
9999 mem: storing 3 in location 1938
 104 run: jump {: "offset"}
9998 run: jumping to instruction 14
 104 run: {done?: "boolean"} <- equal {col: "number"}, {8: "literal"}
9999 mem: location 1938 is 3
9999 mem: storing 0 in location 1935
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1935 is 0
9998 run: jump-if fell through
 104 run: {f: ("address" "array" "character")} <- index {board: ("address" "array" "address" "array" "character"), "lookup": ()}, {col: "number"}
9999 mem: location 1932 is 1826
9999 mem: skipping refcount at 1826
9998 run: base address is 1827
9999 mem: location 1938 is 3
9998 run: address to copy is 1831
9998 run: its type is address
9999 mem: location 1831 is 1866
9999 mem: decrementing refcount of 1856: 3 -> 2
9999 mem: incrementing refcount of 1866: 2 -> 3
9999 mem: storing 1866 in location 1939
 104 run: {c: "character"} <- index {f: ("address" "array" "character"), "lookup": ()}, {row: "number"}
9999 mem: location 1939 is 1866
9999 mem: skipping refcount at 1866
9998 run: base address is 1867
9999 mem: location 1933 is 6
9998 run: address to copy is 1874
9998 run: its type is character
9999 mem: location 1874 is 112
9999 mem: storing 112 in location 1940
 104 run: print {screen: ("address" "screen")}, {c: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1940 is 112
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 45 -> 46
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 112 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 112
  90 print-character: 112 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 1
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 1
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 10
9999 mem: storing 10 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 10
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 10
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 112
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 1
9999 mem: location 2037 is 30
9999 mem: storing 30 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 30
9999 mem: location 2041 is 10
9999 mem: storing 40 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 32 -> 33
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 112
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 112
9999 mem: location 2033 is 7
9999 mem: storing 112 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 40
9998 run: address to copy to is 1096
9999 mem: location 2050 is 112
9999 mem: location 2051 is 7
9999 mem: storing 112 in location 1096
9999 mem: storing 7 in location 1097
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 10
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 10
9999 mem: storing 11 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 11
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 11 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: print {screen: ("address" "screen")}, {space: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1934 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 46 -> 47
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 1
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 1
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 11
9999 mem: storing 11 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 11
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 11
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 1
9999 mem: location 2037 is 30
9999 mem: storing 30 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 30
9999 mem: location 2041 is 11
9999 mem: storing 41 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 33 -> 34
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 41
9998 run: address to copy to is 1098
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1098
9999 mem: storing 7 in location 1099
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 11
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 11
9999 mem: storing 12 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 12
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 12 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {col: "number"} <- add {col: "number"}, {1: "literal"}
9999 mem: location 1938 is 3
9999 mem: storing 4 in location 1938
 104 run: jump {: "offset"}
9998 run: jumping to instruction 14
 104 run: {done?: "boolean"} <- equal {col: "number"}, {8: "literal"}
9999 mem: location 1938 is 4
9999 mem: storing 0 in location 1935
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1935 is 0
9998 run: jump-if fell through
 104 run: {f: ("address" "array" "character")} <- index {board: ("address" "array" "address" "array" "character"), "lookup": ()}, {col: "number"}
9999 mem: location 1932 is 1826
9999 mem: skipping refcount at 1826
9998 run: base address is 1827
9999 mem: location 1938 is 4
9998 run: address to copy is 1832
9998 run: its type is address
9999 mem: location 1832 is 1876
9999 mem: decrementing refcount of 1866: 3 -> 2
9999 mem: incrementing refcount of 1876: 2 -> 3
9999 mem: storing 1876 in location 1939
 104 run: {c: "character"} <- index {f: ("address" "array" "character"), "lookup": ()}, {row: "number"}
9999 mem: location 1939 is 1876
9999 mem: skipping refcount at 1876
9998 run: base address is 1877
9999 mem: location 1933 is 6
9998 run: address to copy is 1884
9998 run: its type is character
9999 mem: location 1884 is 112
9999 mem: storing 112 in location 1940
 104 run: print {screen: ("address" "screen")}, {c: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1940 is 112
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 47 -> 48
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 112 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 112
  90 print-character: 112 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 1
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 1
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 12
9999 mem: storing 12 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 12
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 112
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 1
9999 mem: location 2037 is 30
9999 mem: storing 30 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 30
9999 mem: location 2041 is 12
9999 mem: storing 42 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 34 -> 35
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 112
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 112
9999 mem: location 2033 is 7
9999 mem: storing 112 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 42
9998 run: address to copy to is 1100
9999 mem: location 2050 is 112
9999 mem: location 2051 is 7
9999 mem: storing 112 in location 1100
9999 mem: storing 7 in location 1101
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 12
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 12
9999 mem: storing 13 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 13
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 13 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: print {screen: ("address" "screen")}, {space: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1934 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 48 -> 49
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 1
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 1
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 13
9999 mem: storing 13 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 13
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 13
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 1
9999 mem: location 2037 is 30
9999 mem: storing 30 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 30
9999 mem: location 2041 is 13
9999 mem: storing 43 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 35 -> 36
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 43
9998 run: address to copy to is 1102
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1102
9999 mem: storing 7 in location 1103
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 13
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 13
9999 mem: storing 14 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 14
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 14 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {col: "number"} <- add {col: "number"}, {1: "literal"}
9999 mem: location 1938 is 4
9999 mem: storing 5 in location 1938
 104 run: jump {: "offset"}
9998 run: jumping to instruction 14
 104 run: {done?: "boolean"} <- equal {col: "number"}, {8: "literal"}
9999 mem: location 1938 is 5
9999 mem: storing 0 in location 1935
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1935 is 0
9998 run: jump-if fell through
 104 run: {f: ("address" "array" "character")} <- index {board: ("address" "array" "address" "array" "character"), "lookup": ()}, {col: "number"}
9999 mem: location 1932 is 1826
9999 mem: skipping refcount at 1826
9998 run: base address is 1827
9999 mem: location 1938 is 5
9998 run: address to copy is 1833
9998 run: its type is address
9999 mem: location 1833 is 1886
9999 mem: decrementing refcount of 1876: 3 -> 2
9999 mem: incrementing refcount of 1886: 2 -> 3
9999 mem: storing 1886 in location 1939
 104 run: {c: "character"} <- index {f: ("address" "array" "character"), "lookup": ()}, {row: "number"}
9999 mem: location 1939 is 1886
9999 mem: skipping refcount at 1886
9998 run: base address is 1887
9999 mem: location 1933 is 6
9998 run: address to copy is 1894
9998 run: its type is character
9999 mem: location 1894 is 112
9999 mem: storing 112 in location 1940
 104 run: print {screen: ("address" "screen")}, {c: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1940 is 112
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 49 -> 50
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 112 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 112
  90 print-character: 112 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 1
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 1
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 14
9999 mem: storing 14 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 14
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 14
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 112
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 1
9999 mem: location 2037 is 30
9999 mem: storing 30 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 30
9999 mem: location 2041 is 14
9999 mem: storing 44 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 36 -> 37
9999 mem: storing 1014 in location 2046
9990 schedule: print/print-board/run_1001/scenario_making-a-move
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 112
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 112
9999 mem: location 2033 is 7
9999 mem: storing 112 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 44
9998 run: address to copy to is 1104
9999 mem: location 2050 is 112
9999 mem: location 2051 is 7
9999 mem: storing 112 in location 1104
9999 mem: storing 7 in location 1105
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 14
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 14
9999 mem: storing 15 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 15
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 15 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: print {screen: ("address" "screen")}, {space: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1934 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 50 -> 51
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 1
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 1
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 15
9999 mem: storing 15 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 15
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 15
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 1
9999 mem: location 2037 is 30
9999 mem: storing 30 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 30
9999 mem: location 2041 is 15
9999 mem: storing 45 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 37 -> 38
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 45
9998 run: address to copy to is 1106
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1106
9999 mem: storing 7 in location 1107
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 15
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 15
9999 mem: storing 16 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 16
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 16 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {col: "number"} <- add {col: "number"}, {1: "literal"}
9999 mem: location 1938 is 5
9999 mem: storing 6 in location 1938
 104 run: jump {: "offset"}
9998 run: jumping to instruction 14
 104 run: {done?: "boolean"} <- equal {col: "number"}, {8: "literal"}
9999 mem: location 1938 is 6
9999 mem: storing 0 in location 1935
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1935 is 0
9998 run: jump-if fell through
 104 run: {f: ("address" "array" "character")} <- index {board: ("address" "array" "address" "array" "character"), "lookup": ()}, {col: "number"}
9999 mem: location 1932 is 1826
9999 mem: skipping refcount at 1826
9998 run: base address is 1827
9999 mem: location 1938 is 6
9998 run: address to copy is 1834
9998 run: its type is address
9999 mem: location 1834 is 1896
9999 mem: decrementing refcount of 1886: 3 -> 2
9999 mem: incrementing refcount of 1896: 4 -> 5
9999 mem: storing 1896 in location 1939
 104 run: {c: "character"} <- index {f: ("address" "array" "character"), "lookup": ()}, {row: "number"}
9999 mem: location 1939 is 1896
9999 mem: skipping refcount at 1896
9998 run: base address is 1897
9999 mem: location 1933 is 6
9998 run: address to copy is 1904
9998 run: its type is character
9999 mem: location 1904 is 112
9999 mem: storing 112 in location 1940
 104 run: print {screen: ("address" "screen")}, {c: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1940 is 112
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 51 -> 52
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 112 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 112
  90 print-character: 112 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 1
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 1
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 16
9999 mem: storing 16 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 16
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 16
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 112
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 1
9999 mem: location 2037 is 30
9999 mem: storing 30 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 30
9999 mem: location 2041 is 16
9999 mem: storing 46 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 38 -> 39
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 112
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 112
9999 mem: location 2033 is 7
9999 mem: storing 112 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 46
9998 run: address to copy to is 1108
9999 mem: location 2050 is 112
9999 mem: location 2051 is 7
9999 mem: storing 112 in location 1108
9999 mem: storing 7 in location 1109
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 16
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 16
9999 mem: storing 17 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 17
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 17 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: print {screen: ("address" "screen")}, {space: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1934 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 52 -> 53
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 1
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 1
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 17
9999 mem: storing 17 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 17
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 17
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 1
9999 mem: location 2037 is 30
9999 mem: storing 30 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 30
9999 mem: location 2041 is 17
9999 mem: storing 47 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 39 -> 40
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 47
9998 run: address to copy to is 1110
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1110
9999 mem: storing 7 in location 1111
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 17
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 17
9999 mem: storing 18 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 18
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 18 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {col: "number"} <- add {col: "number"}, {1: "literal"}
9999 mem: location 1938 is 6
9999 mem: storing 7 in location 1938
 104 run: jump {: "offset"}
9998 run: jumping to instruction 14
 104 run: {done?: "boolean"} <- equal {col: "number"}, {8: "literal"}
9999 mem: location 1938 is 7
9999 mem: storing 0 in location 1935
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1935 is 0
9998 run: jump-if fell through
 104 run: {f: ("address" "array" "character")} <- index {board: ("address" "array" "address" "array" "character"), "lookup": ()}, {col: "number"}
9999 mem: location 1932 is 1826
9999 mem: skipping refcount at 1826
9998 run: base address is 1827
9999 mem: location 1938 is 7
9998 run: address to copy is 1835
9998 run: its type is address
9999 mem: location 1835 is 1906
9999 mem: decrementing refcount of 1896: 5 -> 4
9999 mem: incrementing refcount of 1906: 3 -> 4
9999 mem: storing 1906 in location 1939
 104 run: {c: "character"} <- index {f: ("address" "array" "character"), "lookup": ()}, {row: "number"}
9999 mem: location 1939 is 1906
9999 mem: skipping refcount at 1906
9998 run: base address is 1907
9999 mem: location 1933 is 6
9998 run: address to copy is 1914
9998 run: its type is character
9999 mem: location 1914 is 112
9999 mem: storing 112 in location 1940
 104 run: print {screen: ("address" "screen")}, {c: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1940 is 112
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 53 -> 54
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 112 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 112
  90 print-character: 112 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 1
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 1
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 18
9999 mem: storing 18 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 18
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 18
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 112
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 1
9999 mem: location 2037 is 30
9999 mem: storing 30 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 30
9999 mem: location 2041 is 18
9999 mem: storing 48 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 40 -> 41
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 112
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 112
9999 mem: location 2033 is 7
9999 mem: storing 112 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 48
9998 run: address to copy to is 1112
9999 mem: location 2050 is 112
9999 mem: location 2051 is 7
9999 mem: storing 112 in location 1112
9999 mem: storing 7 in location 1113
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 18
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 18
9999 mem: storing 19 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 19
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 19 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: print {screen: ("address" "screen")}, {space: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1934 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 54 -> 55
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 1
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 1
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 19
9999 mem: storing 19 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 19
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 19
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 1
9999 mem: location 2037 is 30
9999 mem: storing 30 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 30
9999 mem: location 2041 is 19
9999 mem: storing 49 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 41 -> 42
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 49
9998 run: address to copy to is 1114
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1114
9999 mem: storing 7 in location 1115
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 19
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 19
9999 mem: storing 20 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 20
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 20 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {col: "number"} <- add {col: "number"}, {1: "literal"}
9999 mem: location 1938 is 7
9999 mem: storing 8 in location 1938
 104 run: jump {: "offset"}
9998 run: jumping to instruction 14
 104 run: {done?: "boolean"} <- equal {col: "number"}, {8: "literal"}
9999 mem: location 1938 is 8
9999 mem: storing 1 in location 1935
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1935 is 1
9998 run: jumping to instruction 22
 104 run: {row: "number"} <- subtract {row: "number"}, {1: "literal"}
9999 mem: location 1933 is 6
9999 mem: storing 5 in location 1933
 104 run: cursor-to-next-line {screen: ("address" "screen")}
9999 mem: location 1931 is 1008
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 2
9999 mem: allocating size 4
9999 abandon: picking up space from free-list of size 4
9999 mem: new alloc from free list: 2059
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 55 -> 56
9999 mem: storing 1008 in location 2062
 105 run: {screen: ("address" "screen")} <- cursor-down {screen: ("address" "screen")}
9999 mem: location 2062 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 56 -> 57
9999 mem: storing 1008 in location 1003
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1004
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1005
 106 run: {max: "number"} <- subtract {height: "number"}, {1: "literal"}
9999 mem: location 1004 is 12
9999 mem: storing 11 in location 1006
 106 run: {at-bottom?: "boolean"} <- greater-or-equal {row: "number"}, {max: "number"}
9999 mem: location 1005 is 1
9999 mem: location 1006 is 11
9999 mem: storing 0 in location 1007
 106 run: jump-if {at-bottom?: "boolean"}, {: "offset"}
9999 mem: location 1007 is 0
9998 run: jump-if fell through
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1005 is 1
9999 mem: storing 2 in location 1005
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {row: "number"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 1
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 1005 is 2
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 2 in location 1011
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 1008 in location 2062
 105 run: {screen: ("address" "screen")} <- cursor-to-start-of-line {screen: ("address" "screen")}
9999 mem: location 2062 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1961
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 57 -> 58
9999 mem: storing 1008 in location 1964
 106 run: {row: "number"} <- cursor-position {screen: ("address" "screen")}
9999 mem: location 1964 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 2063
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 58 -> 59
9999 mem: storing 1008 in location 2066
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2066 is 1008
9998 run: jump-unless fell through
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2066 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 2066 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 2067
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2066 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 2066 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 20
9999 mem: storing 20 in location 2068
 107 run: return {row: "number"}, {column: "number"}
9999 mem: location 2067 is 2
9999 mem: location 2068 is 20
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 2
9999 mem: storing 2 in location 1965
 106 run: {column: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1966
 106 run: {screen: ("address" "screen")} <- move-cursor {screen: ("address" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1964 is 1008
9999 mem: location 1965 is 2
9999 mem: location 1966 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 2063
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 59 -> 60
9999 mem: storing 1008 in location 2066
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 2067
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 2068
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2066 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 2066 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 2067 is 2
9999 mem: location 2066 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 2 in location 1011
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 2066 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 2068 is 0
9999 mem: location 2066 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2066 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 1008 in location 1964
 106 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1964 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 1008 in location 2062
 105 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2062 is 1008
9999 abandon: saving in free-list of size 4
9999 trace: reply: decrementing callstack depth from 4
 104 run: jump {: "offset"}
9998 run: jumping to instruction 6
 104 run: {done?: "boolean"} <- lesser-than {row: "number"}, {0: "literal"}
9999 mem: location 1933 is 5
9999 mem: storing 0 in location 1935
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1935 is 0
9998 run: jump-if fell through
 104 run: {rank: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1933 is 5
9999 mem: storing 6 in location 1936
 104 run: print-integer {screen: ("address" "screen")}, {rank: "number"}
9999 mem: location 1931 is 1008
9999 mem: location 1936 is 6
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1736
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 60 -> 61
9999 mem: storing 1008 in location 1739
 105 run: {n: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 6 in location 1740
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1741
9999 mem: storing 0 in location 1742
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1742 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1741
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1743
9999 mem: storing 0 in location 1744
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1744 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1743
 105 run: {s: ("address" "array" "character")} <- to-text_3 {n: "number"}
9999 mem: location 1740 is 6
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 16
9999 mem: allocating size 18
9999 abandon: picking up space from free-list of size 18
9999 mem: new alloc from free list: 1943
 106 run: {n: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 6 in location 1946
 106 run: jump-if {n: "number"}, {: "offset"}
9999 mem: location 1946 is 6
9998 run: jumping to instruction 6
 106 run: {negate-result: "boolean"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1948
 106 run: {negative?: "boolean"} <- lesser-than {n: "number"}, {0: "literal"}
9999 mem: location 1946 is 6
9999 mem: storing 0 in location 1949
 106 run: jump-unless {negative?: "boolean"}, {: "offset"}
9999 mem: location 1949 is 0
9998 run: jumping to instruction 13
 106 run: {tmp: ("address" "buffer")} <- new-buffer {30: "literal"}
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1961
 107 run: {capacity: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 30 in location 1964
 107 run: {result: ("address" "buffer")} <- new {buffer: "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 2112
9999 mem: storing 0 in location 2112
9999 mem: storing 0 in location 2113
9999 mem: storing 0 in location 2114
9999 mem: incrementing refcount of 2112: 0 -> 1
9999 mem: storing 2112 in location 1965
 107 run: {result: ("address" "buffer"), "lookup": ()} <- put {result: ("address" "buffer"), "lookup": ()}, {length: "offset"}, {0: "literal"}
9999 mem: location 1965 is 2112
9999 mem: skipping refcount at 2112
9999 mem: location 2113 is 0
9999 mem: location 2114 is 0
9999 mem: location 1965 is 2112
9999 mem: skipping refcount at 2112
9998 run: address to copy to is 2113
9999 mem: storing 0 in location 2113
 107 run: {data: ("address" "array" "character")} <- new {character: "type"}, {capacity: "number"}
9999 mem: location 1964 is 30
9999 mem: array size is 30
9999 mem: allocating size 32
9999 mem: new alloc: 2115
9999 mem: storing 0 in location 2115
9999 mem: storing 0 in location 2116
9999 mem: storing 0 in location 2117
9999 mem: storing 0 in location 2118
9999 mem: storing 0 in location 2119
9999 mem: storing 0 in location 2120
9999 mem: storing 0 in location 2121
9999 mem: storing 0 in location 2122
9999 mem: storing 0 in location 2123
9999 mem: storing 0 in location 2124
9999 mem: storing 0 in location 2125
9999 mem: storing 0 in location 2126
9999 mem: storing 0 in location 2127
9999 mem: storing 0 in location 2128
9999 mem: storing 0 in location 2129
9999 mem: storing 0 in location 2130
9999 mem: storing 0 in location 2131
9999 mem: storing 0 in location 2132
9999 mem: storing 0 in location 2133
9999 mem: storing 0 in location 2134
9999 mem: storing 0 in location 2135
9999 mem: storing 0 in location 2136
9999 mem: storing 0 in location 2137
9999 mem: storing 0 in location 2138
9999 mem: storing 0 in location 2139
9999 mem: storing 0 in location 2140
9999 mem: storing 0 in location 2141
9999 mem: storing 0 in location 2142
9999 mem: storing 0 in location 2143
9999 mem: storing 0 in location 2144
9999 mem: storing 0 in location 2145
9999 mem: storing 0 in location 2146
9999 mem: storing 30 in location 2116
9999 mem: incrementing refcount of 2115: 0 -> 1
9999 mem: storing 2115 in location 1966
 107 run: {result: ("address" "buffer"), "lookup": ()} <- put {result: ("address" "buffer"), "lookup": ()}, {data: "offset"}, {data: ("address" "array" "character")}
9999 mem: location 1965 is 2112
9999 mem: skipping refcount at 2112
9999 mem: location 2113 is 0
9999 mem: location 2114 is 0
9999 mem: location 1966 is 2115
9999 mem: location 1965 is 2112
9999 mem: skipping refcount at 2112
9998 run: address to copy to is 2114
9999 mem: incrementing refcount of 2115: 1 -> 2
9999 mem: storing 2115 in location 2114
 107 run: return {result: ("address" "buffer")}
9999 mem: location 1965 is 2112
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 2112
9999 mem: incrementing refcount of 2112: 1 -> 2
9999 mem: storing 2112 in location 1950
 106 run: {digit-base: "number"} <- copy {48: "literal"}
9999 mem: storing 48 in location 1951
 106 run: {done?: "boolean"} <- equal {n: "number"}, {0: "literal"}
9999 mem: location 1946 is 6
9999 mem: storing 0 in location 1952
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1952 is 0
9998 run: jump-if fell through
 106 run: {n: "number"}, {digit: "number"} <- divide-with-remainder {n: "number"}, {10: "literal"}
9999 mem: location 1946 is 6
9999 mem: storing 0 in location 1946
9999 mem: storing 6 in location 1953
 106 run: {c: "character"} <- add {digit-base: "number"}, {digit: "number"}
9999 mem: location 1951 is 48
9999 mem: location 1953 is 6
9999 mem: storing 54 in location 1954
 106 run: {tmp: ("address" "buffer")} <- append_2 {tmp: ("address" "buffer")}, {c: "character"}
9999 mem: location 1950 is 2112
9999 mem: location 1954 is 54
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 2002
 107 run: {in: ("address" "buffer")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 2112: 2 -> 3
9999 mem: storing 2112 in location 2005
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 54 in location 2006
 107 run: {len: "number"} <- get {in: ("address" "buffer"), "lookup": ()}, {length: "offset"}
9999 mem: location 2005 is 2112
9999 mem: skipping refcount at 2112
9999 mem: location 2113 is 0
9999 mem: location 2114 is 2115
9999 mem: location 2005 is 2112
9999 mem: skipping refcount at 2112
9998 run: address to copy is 2113
9998 run: its type is "number"
9999 mem: location 2113 is 0
9999 mem: storing 0 in location 2007
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal", "backspace": ()}
9999 mem: location 2006 is 54
9999 mem: storing 0 in location 2008
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2008 is 0
9998 run: jumping to instruction 15
 107 run: {full?: "boolean"} <- buffer-full? {in: ("address" "buffer")}
9999 mem: location 2005 is 2112
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 108 run: {in: ("address" "buffer")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 2112: 3 -> 4
9999 mem: storing 2112 in location 1003
 108 run: {len: "number"} <- get {in: ("address" "buffer"), "lookup": ()}, {length: "offset"}
9999 mem: location 1003 is 2112
9999 mem: skipping refcount at 2112
9999 mem: location 2113 is 0
9999 mem: location 2114 is 2115
9999 mem: location 1003 is 2112
9999 mem: skipping refcount at 2112
9998 run: address to copy is 2113
9998 run: its type is "number"
9999 mem: location 2113 is 0
9999 mem: storing 0 in location 1004
 108 run: {s: ("address" "array" "character")} <- get {in: ("address" "buffer"), "lookup": ()}, {data: "offset"}
9999 mem: location 1003 is 2112
9999 mem: skipping refcount at 2112
9999 mem: location 2113 is 0
9999 mem: location 2114 is 2115
9999 mem: location 1003 is 2112
9999 mem: skipping refcount at 2112
9998 run: address to copy is 2114
9998 run: its type is ("address" "array" "character")
9999 mem: location 2114 is 2115
9999 mem: incrementing refcount of 2115: 2 -> 3
9999 mem: storing 2115 in location 1005
 108 run: {capacity: "number"} <- length {s: ("address" "array" "character"), "lookup": ()}
9999 mem: location 1005 is 2115
9999 mem: skipping refcount at 2115
9999 mem: storing 30 in location 1006
 108 run: {result: "boolean"} <- greater-or-equal {len: "number"}, {capacity: "number"}
9999 mem: location 1004 is 0
9999 mem: location 1006 is 30
9999 mem: storing 0 in location 1007
 108 run: reply {result: "boolean"}
9999 mem: location 1007 is 0
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 0
9999 mem: storing 0 in location 2010
 107 run: jump-unless {full?: "boolean"}, {: "offset"}
9999 mem: location 2010 is 0
9998 run: jumping to instruction 20
 107 run: {s: ("address" "array" "character")} <- get {in: ("address" "buffer"), "lookup": ()}, {data: "offset"}
9999 mem: location 2005 is 2112
9999 mem: skipping refcount at 2112
9999 mem: location 2113 is 0
9999 mem: location 2114 is 2115
9999 mem: location 2005 is 2112
9999 mem: skipping refcount at 2112
9998 run: address to copy is 2114
9998 run: its type is ("address" "array" "character")
9999 mem: location 2114 is 2115
9999 mem: incrementing refcount of 2115: 3 -> 4
9999 mem: storing 2115 in location 2011
 107 run: {s: ("address" "array" "character"), "lookup": ()} <- put-index {s: ("address" "array" "character"), "lookup": ()}, {len: "number"}, {c: "character"}
9999 mem: location 2011 is 2115
9999 mem: skipping refcount at 2115
9999 mem: location 2007 is 0
9998 run: address to copy to is 2117
9999 mem: location 2006 is 54
9999 mem: storing 54 in location 2117
 107 run: {len: "number"} <- add {len: "number"}, {1: "literal"}
9999 mem: location 2007 is 0
9999 mem: storing 1 in location 2007
 107 run: {in: ("address" "buffer"), "lookup": ()} <- put {in: ("address" "buffer"), "lookup": ()}, {length: "offset"}, {len: "number"}
9999 mem: location 2005 is 2112
9999 mem: skipping refcount at 2112
9999 mem: location 2113 is 0
9999 mem: location 2114 is 2115
9999 mem: location 2007 is 1
9999 mem: location 2005 is 2112
9999 mem: skipping refcount at 2112
9998 run: address to copy to is 2113
9999 mem: storing 1 in location 2113
 107 run: reply {in: ("address" "buffer"), "same-as-ingredient": "0"}
9999 mem: location 2005 is 2112
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 2112
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 2112 in location 1950
 106 run: jump {: "offset"}
9998 run: jumping to instruction 17
 106 run: {done?: "boolean"} <- equal {n: "number"}, {0: "literal"}
9999 mem: location 1946 is 0
9999 mem: storing 1 in location 1952
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1952 is 1
9998 run: jumping to instruction 23
 106 run: jump-unless {negate-result: "boolean"}, {: "offset"}
9999 mem: location 1948 is 0
9998 run: jumping to instruction 28
 106 run: {len: "number"} <- get {tmp: ("address" "buffer"), "lookup": ()}, {length: "offset"}
9999 mem: location 1950 is 2112
9999 mem: skipping refcount at 2112
9999 mem: location 2113 is 1
9999 mem: location 2114 is 2115
9999 mem: location 1950 is 2112
9999 mem: skipping refcount at 2112
9998 run: address to copy is 2113
9998 run: its type is "number"
9999 mem: location 2113 is 1
9999 mem: storing 1 in location 1956
 106 run: {buf: ("address" "array" "character")} <- get {tmp: ("address" "buffer"), "lookup": ()}, {data: "offset"}
9999 mem: location 1950 is 2112
9999 mem: skipping refcount at 2112
9999 mem: location 2113 is 1
9999 mem: location 2114 is 2115
9999 mem: location 1950 is 2112
9999 mem: skipping refcount at 2112
9998 run: address to copy is 2114
9998 run: its type is ("address" "array" "character")
9999 mem: location 2114 is 2115
9999 mem: incrementing refcount of 2115: 4 -> 5
9999 mem: storing 2115 in location 1957
 106 run: {result: ("address" "array" "character")} <- new {character: "type"}, {len: "number"}
9999 mem: location 1956 is 1
9999 mem: array size is 1
9999 mem: allocating size 3
9999 mem: new alloc: 2147
9999 mem: storing 0 in location 2147
9999 mem: storing 0 in location 2148
9999 mem: storing 0 in location 2149
9999 mem: storing 1 in location 2148
9999 mem: incrementing refcount of 2147: 0 -> 1
9999 mem: storing 2147 in location 1947
 106 run: {i: "number"} <- subtract {len: "number"}, {1: "literal"}
9999 mem: location 1956 is 1
9999 mem: storing 0 in location 1958
 106 run: {j: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1959
 106 run: {done?: "boolean"} <- lesser-than {i: "number"}, {0: "literal"}
9999 mem: location 1958 is 0
9999 mem: storing 0 in location 1952
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1952 is 0
9998 run: jump-if fell through
 106 run: {src: "character"} <- index {buf: ("address" "array" "character"), "lookup": ()}, {i: "number"}
9999 mem: location 1957 is 2115
9999 mem: skipping refcount at 2115
9998 run: base address is 2116
9999 mem: location 1958 is 0
9998 run: address to copy is 2117
9998 run: its type is character
9999 mem: location 2117 is 54
9999 mem: storing 54 in location 1960
 106 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {j: "number"}, {src: "character"}
9999 mem: location 1947 is 2147
9999 mem: skipping refcount at 2147
9999 mem: location 1959 is 0
9998 run: address to copy to is 2149
9999 mem: location 1960 is 54
9999 mem: storing 54 in location 2149
 106 run: {i: "number"} <- subtract {i: "number"}, {1: "literal"}
9999 mem: location 1958 is 0
9999 mem: storing -1 in location 1958
 106 run: {j: "number"} <- add {j: "number"}, {1: "literal"}
9999 mem: location 1959 is 0
9999 mem: storing 1 in location 1959
 106 run: jump {: "offset"}
9998 run: jumping to instruction 35
 106 run: {done?: "boolean"} <- lesser-than {i: "number"}, {0: "literal"}
9999 mem: location 1958 is -1
9999 mem: storing 1 in location 1952
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1952 is 1
9998 run: jumping to instruction 42
 106 run: reply {result: ("address" "array" "character")}
9999 mem: location 1947 is 2147
9999 abandon: saving in free-list of size 18
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 2147
9999 mem: incrementing refcount of 2147: 1 -> 2
9999 mem: storing 2147 in location 1745
 105 run: {screen: ("address" "screen")} <- print_2 {screen: ("address" "screen")}, {s: ("address" "array" "character")}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1739 is 1008
9999 mem: location 1745 is 2147
9999 mem: location 1741 is 7
9999 mem: location 1743 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 11
9999 mem: allocating size 13
9999 abandon: picking up space from free-list of size 13
9999 mem: new alloc from free list: 2015
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 61 -> 62
9999 mem: storing 1008 in location 2018
 106 run: {s: ("address" "array" "character")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 2147: 2 -> 3
9999 mem: storing 2147 in location 2019
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 2020
9999 mem: storing 1 in location 2021
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2021 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2022
9999 mem: storing 1 in location 2023
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2023 is 1
9998 run: jumping to instruction 12
 106 run: {len: "number"} <- length {s: ("address" "array" "character"), "lookup": ()}
9999 mem: location 2019 is 2147
9999 mem: skipping refcount at 2147
9999 mem: storing 1 in location 2024
 106 run: {i: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 2025
 106 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 2025 is 0
9999 mem: location 2024 is 1
9999 mem: storing 0 in location 2026
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 2026 is 0
9998 run: jump-if fell through
 106 run: {c: "character"} <- index {s: ("address" "array" "character"), "lookup": ()}, {i: "number"}
9999 mem: location 2019 is 2147
9999 mem: skipping refcount at 2147
9998 run: base address is 2148
9999 mem: location 2025 is 0
9998 run: address to copy is 2149
9998 run: its type is character
9999 mem: location 2149 is 54
9999 mem: storing 54 in location 2027
 106 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 2018 is 1008
9999 mem: location 2027 is 54
9999 mem: location 2020 is 7
9999 mem: location 2022 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 62 -> 63
9999 mem: storing 1008 in location 2031
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 54 in location 2032
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 2033
9999 mem: storing 1 in location 2034
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 1 in location 2036
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 54
  90 print-character: 54 
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 2039
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 2
9999 mem: storing 1 in location 2040
9990 schedule: print/print_2/print-integer/print-board/run_1001/scenario_making-a-move
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 2
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 2041
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 0
9999 mem: storing 1 in location 2040
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 0
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 54
9999 mem: storing 0 in location 2042
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 2
9999 mem: location 2037 is 30
9999 mem: storing 60 in location 2045
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 60
9999 mem: location 2041 is 0
9999 mem: storing 60 in location 2045
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 42 -> 43
9999 mem: storing 1014 in location 2046
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 54
9999 mem: storing 0 in location 2048
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 54
9999 mem: location 2033 is 7
9999 mem: storing 54 in location 2050
9999 mem: storing 7 in location 2051
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 60
9998 run: address to copy to is 1136
9999 mem: location 2050 is 54
9999 mem: location 2051 is 7
9999 mem: storing 54 in location 1136
9999 mem: storing 7 in location 1137
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 0
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 0
9999 mem: storing 1 in location 2041
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 1
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
 106 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 2025 is 0
9999 mem: storing 1 in location 2025
 106 run: jump {: "offset"}
9998 run: jumping to instruction 16
 106 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 2025 is 1
9999 mem: location 2024 is 1
9999 mem: storing 1 in location 2026
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 2026 is 1
9998 run: jumping to instruction 22
 106 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2018 is 1008
9999 abandon: saving in free-list of size 13
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 1008 in location 1739
 105 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1739 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 4
 104 run: {print_10_1: ("address" "array" "character")} <- new {" | ": "literal-string"}
9999 mem: new string alloc: 2150
9999 mem: decrementing refcount of 2107: 2 -> 1
9999 mem: incrementing refcount of 2150: 0 -> 1
9999 mem: storing 2150 in location 1937
 104 run: print_2 {screen: ("address" "screen")}, {print_10_1: ("address" "array" "character")}
9999 mem: location 1931 is 1008
9999 mem: location 1937 is 2150
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 11
9999 mem: allocating size 13
9999 abandon: picking up space from free-list of size 13
9999 mem: new alloc from free list: 2015
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 63 -> 64
9999 mem: storing 1008 in location 2018
 105 run: {s: ("address" "array" "character")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 2150: 1 -> 2
9999 mem: storing 2150 in location 2019
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2020
9999 mem: storing 0 in location 2021
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2021 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2020
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2022
9999 mem: storing 0 in location 2023
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2023 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2022
 105 run: {len: "number"} <- length {s: ("address" "array" "character"), "lookup": ()}
9999 mem: location 2019 is 2150
9999 mem: skipping refcount at 2150
9999 mem: storing 3 in location 2024
 105 run: {i: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 2025
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 2025 is 0
9999 mem: location 2024 is 3
9999 mem: storing 0 in location 2026
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 2026 is 0
9998 run: jump-if fell through
 105 run: {c: "character"} <- index {s: ("address" "array" "character"), "lookup": ()}, {i: "number"}
9999 mem: location 2019 is 2150
9999 mem: skipping refcount at 2150
9998 run: base address is 2151
9999 mem: location 2025 is 0
9998 run: address to copy is 2152
9998 run: its type is character
9999 mem: location 2152 is 32
9999 mem: storing 32 in location 2027
 105 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 2018 is 1008
9999 mem: location 2027 is 32
9999 mem: location 2020 is 7
9999 mem: location 2022 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 64 -> 65
9999 mem: storing 1008 in location 2031
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 2033
9999 mem: storing 1 in location 2034
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 1 in location 2036
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 2039
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 2
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 2
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 2041
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 1
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 1
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 2
9999 mem: location 2037 is 30
9999 mem: storing 60 in location 2045
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 60
9999 mem: location 2041 is 1
9999 mem: storing 61 in location 2045
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 43 -> 44
9999 mem: storing 1014 in location 2046
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 61
9998 run: address to copy to is 1138
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1138
9999 mem: storing 7 in location 1139
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 1
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 1
9999 mem: storing 2 in location 2041
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 2
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 2025 is 0
9999 mem: storing 1 in location 2025
 105 run: jump {: "offset"}
9998 run: jumping to instruction 16
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 2025 is 1
9999 mem: location 2024 is 3
9999 mem: storing 0 in location 2026
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 2026 is 0
9998 run: jump-if fell through
 105 run: {c: "character"} <- index {s: ("address" "array" "character"), "lookup": ()}, {i: "number"}
9999 mem: location 2019 is 2150
9999 mem: skipping refcount at 2150
9998 run: base address is 2151
9999 mem: location 2025 is 1
9998 run: address to copy is 2153
9998 run: its type is character
9999 mem: location 2153 is 124
9999 mem: storing 124 in location 2027
 105 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 2018 is 1008
9999 mem: location 2027 is 124
9999 mem: location 2020 is 7
9999 mem: location 2022 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 65 -> 66
9999 mem: storing 1008 in location 2031
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 124 in location 2032
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 2033
9999 mem: storing 1 in location 2034
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 1 in location 2036
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 124
  90 print-character: 124 
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 2039
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 2
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 2
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 2041
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 2
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 2
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 124
9999 mem: storing 0 in location 2042
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 2
9999 mem: location 2037 is 30
9999 mem: storing 60 in location 2045
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 60
9999 mem: location 2041 is 2
9999 mem: storing 62 in location 2045
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 44 -> 45
9999 mem: storing 1014 in location 2046
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 124
9999 mem: storing 0 in location 2048
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 124
9999 mem: location 2033 is 7
9999 mem: storing 124 in location 2050
9999 mem: storing 7 in location 2051
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 62
9998 run: address to copy to is 1140
9999 mem: location 2050 is 124
9999 mem: location 2051 is 7
9999 mem: storing 124 in location 1140
9999 mem: storing 7 in location 1141
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 2
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 2
9999 mem: storing 3 in location 2041
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 3
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 2025 is 1
9999 mem: storing 2 in location 2025
 105 run: jump {: "offset"}
9998 run: jumping to instruction 16
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 2025 is 2
9999 mem: location 2024 is 3
9999 mem: storing 0 in location 2026
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 2026 is 0
9998 run: jump-if fell through
 105 run: {c: "character"} <- index {s: ("address" "array" "character"), "lookup": ()}, {i: "number"}
9999 mem: location 2019 is 2150
9999 mem: skipping refcount at 2150
9998 run: base address is 2151
9999 mem: location 2025 is 2
9998 run: address to copy is 2154
9998 run: its type is character
9999 mem: location 2154 is 32
9999 mem: storing 32 in location 2027
 105 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 2018 is 1008
9999 mem: location 2027 is 32
9999 mem: location 2020 is 7
9999 mem: location 2022 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 66 -> 67
9999 mem: storing 1008 in location 2031
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 2033
9999 mem: storing 1 in location 2034
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 1 in location 2036
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 2039
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 2
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 2
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 2041
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 3
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 3
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 2
9999 mem: location 2037 is 30
9999 mem: storing 60 in location 2045
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 60
9999 mem: location 2041 is 3
9999 mem: storing 63 in location 2045
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 45 -> 46
9999 mem: storing 1014 in location 2046
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 63
9998 run: address to copy to is 1142
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1142
9999 mem: storing 7 in location 1143
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 3
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 3
9999 mem: storing 4 in location 2041
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 4
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 2025 is 2
9999 mem: storing 3 in location 2025
 105 run: jump {: "offset"}
9998 run: jumping to instruction 16
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 2025 is 3
9999 mem: location 2024 is 3
9999 mem: storing 1 in location 2026
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 2026 is 1
9998 run: jumping to instruction 22
 105 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2018 is 1008
9999 abandon: saving in free-list of size 13
9999 trace: reply: decrementing callstack depth from 4
 104 run: {col: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1938
 104 run: {done?: "boolean"} <- equal {col: "number"}, {8: "literal"}
9999 mem: location 1938 is 0
9999 mem: storing 0 in location 1935
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1935 is 0
9998 run: jump-if fell through
 104 run: {f: ("address" "array" "character")} <- index {board: ("address" "array" "address" "array" "character"), "lookup": ()}, {col: "number"}
9999 mem: location 1932 is 1826
9999 mem: skipping refcount at 1826
9998 run: base address is 1827
9999 mem: location 1938 is 0
9998 run: address to copy is 1828
9998 run: its type is address
9999 mem: location 1828 is 1836
9999 mem: decrementing refcount of 1906: 4 -> 3
9999 mem: incrementing refcount of 1836: 2 -> 3
9999 mem: storing 1836 in location 1939
 104 run: {c: "character"} <- index {f: ("address" "array" "character"), "lookup": ()}, {row: "number"}
9999 mem: location 1939 is 1836
9999 mem: skipping refcount at 1836
9998 run: base address is 1837
9999 mem: location 1933 is 5
9998 run: address to copy is 1843
9998 run: its type is character
9999 mem: location 1843 is 32
9999 mem: storing 32 in location 1940
 104 run: print {screen: ("address" "screen")}, {c: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1940 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 67 -> 68
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 2
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 2
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 4
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 4
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 2
9999 mem: location 2037 is 30
9999 mem: storing 60 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 60
9999 mem: location 2041 is 4
9999 mem: storing 64 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 46 -> 47
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 64
9998 run: address to copy to is 1144
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1144
9999 mem: storing 7 in location 1145
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 4
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 4
9999 mem: storing 5 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 5
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: print {screen: ("address" "screen")}, {space: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1934 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 68 -> 69
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 2
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 2
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 5
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 5
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 2
9999 mem: location 2037 is 30
9999 mem: storing 60 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 60
9999 mem: location 2041 is 5
9999 mem: storing 65 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 47 -> 48
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 65
9998 run: address to copy to is 1146
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1146
9999 mem: storing 7 in location 1147
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 5
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 5
9999 mem: storing 6 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 6
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {col: "number"} <- add {col: "number"}, {1: "literal"}
9999 mem: location 1938 is 0
9999 mem: storing 1 in location 1938
 104 run: jump {: "offset"}
9998 run: jumping to instruction 14
 104 run: {done?: "boolean"} <- equal {col: "number"}, {8: "literal"}
9999 mem: location 1938 is 1
9999 mem: storing 0 in location 1935
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1935 is 0
9998 run: jump-if fell through
 104 run: {f: ("address" "array" "character")} <- index {board: ("address" "array" "address" "array" "character"), "lookup": ()}, {col: "number"}
9999 mem: location 1932 is 1826
9999 mem: skipping refcount at 1826
9998 run: base address is 1827
9999 mem: location 1938 is 1
9998 run: address to copy is 1829
9998 run: its type is address
9999 mem: location 1829 is 1846
9999 mem: decrementing refcount of 1836: 3 -> 2
9999 mem: incrementing refcount of 1846: 2 -> 3
9999 mem: storing 1846 in location 1939
 104 run: {c: "character"} <- index {f: ("address" "array" "character"), "lookup": ()}, {row: "number"}
9999 mem: location 1939 is 1846
9999 mem: skipping refcount at 1846
9998 run: base address is 1847
9999 mem: location 1933 is 5
9998 run: address to copy is 1853
9998 run: its type is character
9999 mem: location 1853 is 32
9999 mem: storing 32 in location 1940
 104 run: print {screen: ("address" "screen")}, {c: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1940 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 69 -> 70
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 2
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 2
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 6
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 6
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 2
9999 mem: location 2037 is 30
9999 mem: storing 60 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 60
9999 mem: location 2041 is 6
9999 mem: storing 66 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 48 -> 49
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 66
9998 run: address to copy to is 1148
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1148
9999 mem: storing 7 in location 1149
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 6
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 6
9999 mem: storing 7 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 7
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: print {screen: ("address" "screen")}, {space: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1934 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 70 -> 71
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 2
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 2
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 7
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 7
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 2
9999 mem: location 2037 is 30
9999 mem: storing 60 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 60
9999 mem: location 2041 is 7
9999 mem: storing 67 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 49 -> 50
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 67
9998 run: address to copy to is 1150
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1150
9999 mem: storing 7 in location 1151
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 7
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 7
9999 mem: storing 8 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 8
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
9990 schedule: print-board/run_1001/scenario_making-a-move
 104 run: {col: "number"} <- add {col: "number"}, {1: "literal"}
9999 mem: location 1938 is 1
9999 mem: storing 2 in location 1938
 104 run: jump {: "offset"}
9998 run: jumping to instruction 14
 104 run: {done?: "boolean"} <- equal {col: "number"}, {8: "literal"}
9999 mem: location 1938 is 2
9999 mem: storing 0 in location 1935
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1935 is 0
9998 run: jump-if fell through
 104 run: {f: ("address" "array" "character")} <- index {board: ("address" "array" "address" "array" "character"), "lookup": ()}, {col: "number"}
9999 mem: location 1932 is 1826
9999 mem: skipping refcount at 1826
9998 run: base address is 1827
9999 mem: location 1938 is 2
9998 run: address to copy is 1830
9998 run: its type is address
9999 mem: location 1830 is 1856
9999 mem: decrementing refcount of 1846: 3 -> 2
9999 mem: incrementing refcount of 1856: 2 -> 3
9999 mem: storing 1856 in location 1939
 104 run: {c: "character"} <- index {f: ("address" "array" "character"), "lookup": ()}, {row: "number"}
9999 mem: location 1939 is 1856
9999 mem: skipping refcount at 1856
9998 run: base address is 1857
9999 mem: location 1933 is 5
9998 run: address to copy is 1863
9998 run: its type is character
9999 mem: location 1863 is 32
9999 mem: storing 32 in location 1940
 104 run: print {screen: ("address" "screen")}, {c: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1940 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 71 -> 72
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 2
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 2
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 8
9999 mem: storing 8 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 8
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 8
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 2
9999 mem: location 2037 is 30
9999 mem: storing 60 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 60
9999 mem: location 2041 is 8
9999 mem: storing 68 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 50 -> 51
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 68
9998 run: address to copy to is 1152
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1152
9999 mem: storing 7 in location 1153
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 8
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 8
9999 mem: storing 9 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 9
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 9 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: print {screen: ("address" "screen")}, {space: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1934 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 72 -> 73
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 2
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 2
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 9
9999 mem: storing 9 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 9
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 9
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 2
9999 mem: location 2037 is 30
9999 mem: storing 60 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 60
9999 mem: location 2041 is 9
9999 mem: storing 69 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 51 -> 52
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 69
9998 run: address to copy to is 1154
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1154
9999 mem: storing 7 in location 1155
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 9
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 9
9999 mem: storing 10 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 10
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 10 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {col: "number"} <- add {col: "number"}, {1: "literal"}
9999 mem: location 1938 is 2
9999 mem: storing 3 in location 1938
 104 run: jump {: "offset"}
9998 run: jumping to instruction 14
 104 run: {done?: "boolean"} <- equal {col: "number"}, {8: "literal"}
9999 mem: location 1938 is 3
9999 mem: storing 0 in location 1935
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1935 is 0
9998 run: jump-if fell through
 104 run: {f: ("address" "array" "character")} <- index {board: ("address" "array" "address" "array" "character"), "lookup": ()}, {col: "number"}
9999 mem: location 1932 is 1826
9999 mem: skipping refcount at 1826
9998 run: base address is 1827
9999 mem: location 1938 is 3
9998 run: address to copy is 1831
9998 run: its type is address
9999 mem: location 1831 is 1866
9999 mem: decrementing refcount of 1856: 3 -> 2
9999 mem: incrementing refcount of 1866: 2 -> 3
9999 mem: storing 1866 in location 1939
 104 run: {c: "character"} <- index {f: ("address" "array" "character"), "lookup": ()}, {row: "number"}
9999 mem: location 1939 is 1866
9999 mem: skipping refcount at 1866
9998 run: base address is 1867
9999 mem: location 1933 is 5
9998 run: address to copy is 1873
9998 run: its type is character
9999 mem: location 1873 is 32
9999 mem: storing 32 in location 1940
 104 run: print {screen: ("address" "screen")}, {c: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1940 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 73 -> 74
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 2
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 2
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 10
9999 mem: storing 10 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 10
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 10
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 2
9999 mem: location 2037 is 30
9999 mem: storing 60 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 60
9999 mem: location 2041 is 10
9999 mem: storing 70 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 52 -> 53
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 70
9998 run: address to copy to is 1156
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1156
9999 mem: storing 7 in location 1157
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 10
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 10
9999 mem: storing 11 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 11
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 11 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: print {screen: ("address" "screen")}, {space: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1934 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 74 -> 75
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 2
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 2
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 11
9999 mem: storing 11 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 11
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 11
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 2
9999 mem: location 2037 is 30
9999 mem: storing 60 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 60
9999 mem: location 2041 is 11
9999 mem: storing 71 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 53 -> 54
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 71
9998 run: address to copy to is 1158
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1158
9999 mem: storing 7 in location 1159
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 11
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 11
9999 mem: storing 12 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 12
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 12 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {col: "number"} <- add {col: "number"}, {1: "literal"}
9999 mem: location 1938 is 3
9999 mem: storing 4 in location 1938
 104 run: jump {: "offset"}
9998 run: jumping to instruction 14
 104 run: {done?: "boolean"} <- equal {col: "number"}, {8: "literal"}
9999 mem: location 1938 is 4
9999 mem: storing 0 in location 1935
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1935 is 0
9998 run: jump-if fell through
 104 run: {f: ("address" "array" "character")} <- index {board: ("address" "array" "address" "array" "character"), "lookup": ()}, {col: "number"}
9999 mem: location 1932 is 1826
9999 mem: skipping refcount at 1826
9998 run: base address is 1827
9999 mem: location 1938 is 4
9998 run: address to copy is 1832
9998 run: its type is address
9999 mem: location 1832 is 1876
9999 mem: decrementing refcount of 1866: 3 -> 2
9999 mem: incrementing refcount of 1876: 2 -> 3
9999 mem: storing 1876 in location 1939
 104 run: {c: "character"} <- index {f: ("address" "array" "character"), "lookup": ()}, {row: "number"}
9999 mem: location 1939 is 1876
9999 mem: skipping refcount at 1876
9998 run: base address is 1877
9999 mem: location 1933 is 5
9998 run: address to copy is 1883
9998 run: its type is character
9999 mem: location 1883 is 32
9999 mem: storing 32 in location 1940
 104 run: print {screen: ("address" "screen")}, {c: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1940 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 75 -> 76
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 2
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 2
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 12
9999 mem: storing 12 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 12
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 2
9999 mem: location 2037 is 30
9999 mem: storing 60 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 60
9999 mem: location 2041 is 12
9999 mem: storing 72 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 54 -> 55
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 72
9998 run: address to copy to is 1160
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1160
9999 mem: storing 7 in location 1161
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 12
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 12
9999 mem: storing 13 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 13
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 13 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: print {screen: ("address" "screen")}, {space: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1934 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 76 -> 77
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 2
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 2
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 13
9999 mem: storing 13 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 13
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 13
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 2
9999 mem: location 2037 is 30
9999 mem: storing 60 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 60
9999 mem: location 2041 is 13
9999 mem: storing 73 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 55 -> 56
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 73
9998 run: address to copy to is 1162
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1162
9999 mem: storing 7 in location 1163
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 13
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 13
9999 mem: storing 14 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 14
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 14 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {col: "number"} <- add {col: "number"}, {1: "literal"}
9999 mem: location 1938 is 4
9999 mem: storing 5 in location 1938
 104 run: jump {: "offset"}
9998 run: jumping to instruction 14
 104 run: {done?: "boolean"} <- equal {col: "number"}, {8: "literal"}
9999 mem: location 1938 is 5
9999 mem: storing 0 in location 1935
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1935 is 0
9998 run: jump-if fell through
 104 run: {f: ("address" "array" "character")} <- index {board: ("address" "array" "address" "array" "character"), "lookup": ()}, {col: "number"}
9999 mem: location 1932 is 1826
9999 mem: skipping refcount at 1826
9998 run: base address is 1827
9999 mem: location 1938 is 5
9998 run: address to copy is 1833
9998 run: its type is address
9999 mem: location 1833 is 1886
9999 mem: decrementing refcount of 1876: 3 -> 2
9999 mem: incrementing refcount of 1886: 2 -> 3
9999 mem: storing 1886 in location 1939
 104 run: {c: "character"} <- index {f: ("address" "array" "character"), "lookup": ()}, {row: "number"}
9999 mem: location 1939 is 1886
9999 mem: skipping refcount at 1886
9998 run: base address is 1887
9999 mem: location 1933 is 5
9998 run: address to copy is 1893
9998 run: its type is character
9999 mem: location 1893 is 32
9999 mem: storing 32 in location 1940
 104 run: print {screen: ("address" "screen")}, {c: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1940 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 77 -> 78
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 2
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 2
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 14
9999 mem: storing 14 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 14
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 14
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 2
9999 mem: location 2037 is 30
9999 mem: storing 60 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 60
9999 mem: location 2041 is 14
9999 mem: storing 74 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 56 -> 57
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 74
9998 run: address to copy to is 1164
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1164
9999 mem: storing 7 in location 1165
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 14
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 14
9999 mem: storing 15 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 15
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 15 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: print {screen: ("address" "screen")}, {space: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1934 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 78 -> 79
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 2
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 2
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 15
9999 mem: storing 15 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 15
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 15
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 2
9999 mem: location 2037 is 30
9999 mem: storing 60 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 60
9999 mem: location 2041 is 15
9999 mem: storing 75 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 57 -> 58
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 75
9998 run: address to copy to is 1166
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1166
9999 mem: storing 7 in location 1167
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 15
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 15
9999 mem: storing 16 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 16
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 16 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {col: "number"} <- add {col: "number"}, {1: "literal"}
9999 mem: location 1938 is 5
9999 mem: storing 6 in location 1938
 104 run: jump {: "offset"}
9998 run: jumping to instruction 14
 104 run: {done?: "boolean"} <- equal {col: "number"}, {8: "literal"}
9999 mem: location 1938 is 6
9999 mem: storing 0 in location 1935
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1935 is 0
9998 run: jump-if fell through
9990 schedule: print-board/run_1001/scenario_making-a-move
 104 run: {f: ("address" "array" "character")} <- index {board: ("address" "array" "address" "array" "character"), "lookup": ()}, {col: "number"}
9999 mem: location 1932 is 1826
9999 mem: skipping refcount at 1826
9998 run: base address is 1827
9999 mem: location 1938 is 6
9998 run: address to copy is 1834
9998 run: its type is address
9999 mem: location 1834 is 1896
9999 mem: decrementing refcount of 1886: 3 -> 2
9999 mem: incrementing refcount of 1896: 4 -> 5
9999 mem: storing 1896 in location 1939
 104 run: {c: "character"} <- index {f: ("address" "array" "character"), "lookup": ()}, {row: "number"}
9999 mem: location 1939 is 1896
9999 mem: skipping refcount at 1896
9998 run: base address is 1897
9999 mem: location 1933 is 5
9998 run: address to copy is 1903
9998 run: its type is character
9999 mem: location 1903 is 32
9999 mem: storing 32 in location 1940
 104 run: print {screen: ("address" "screen")}, {c: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1940 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 79 -> 80
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 2
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 2
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 16
9999 mem: storing 16 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 16
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 16
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 2
9999 mem: location 2037 is 30
9999 mem: storing 60 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 60
9999 mem: location 2041 is 16
9999 mem: storing 76 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 58 -> 59
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 76
9998 run: address to copy to is 1168
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1168
9999 mem: storing 7 in location 1169
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 16
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 16
9999 mem: storing 17 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 17
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 17 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: print {screen: ("address" "screen")}, {space: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1934 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 80 -> 81
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 2
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 2
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 17
9999 mem: storing 17 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 17
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 17
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 2
9999 mem: location 2037 is 30
9999 mem: storing 60 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 60
9999 mem: location 2041 is 17
9999 mem: storing 77 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 59 -> 60
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 77
9998 run: address to copy to is 1170
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1170
9999 mem: storing 7 in location 1171
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 17
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 17
9999 mem: storing 18 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 18
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 18 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {col: "number"} <- add {col: "number"}, {1: "literal"}
9999 mem: location 1938 is 6
9999 mem: storing 7 in location 1938
 104 run: jump {: "offset"}
9998 run: jumping to instruction 14
 104 run: {done?: "boolean"} <- equal {col: "number"}, {8: "literal"}
9999 mem: location 1938 is 7
9999 mem: storing 0 in location 1935
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1935 is 0
9998 run: jump-if fell through
 104 run: {f: ("address" "array" "character")} <- index {board: ("address" "array" "address" "array" "character"), "lookup": ()}, {col: "number"}
9999 mem: location 1932 is 1826
9999 mem: skipping refcount at 1826
9998 run: base address is 1827
9999 mem: location 1938 is 7
9998 run: address to copy is 1835
9998 run: its type is address
9999 mem: location 1835 is 1906
9999 mem: decrementing refcount of 1896: 5 -> 4
9999 mem: incrementing refcount of 1906: 3 -> 4
9999 mem: storing 1906 in location 1939
 104 run: {c: "character"} <- index {f: ("address" "array" "character"), "lookup": ()}, {row: "number"}
9999 mem: location 1939 is 1906
9999 mem: skipping refcount at 1906
9998 run: base address is 1907
9999 mem: location 1933 is 5
9998 run: address to copy is 1913
9998 run: its type is character
9999 mem: location 1913 is 32
9999 mem: storing 32 in location 1940
 104 run: print {screen: ("address" "screen")}, {c: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1940 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 81 -> 82
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 2
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 2
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 18
9999 mem: storing 18 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 18
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 18
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 2
9999 mem: location 2037 is 30
9999 mem: storing 60 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 60
9999 mem: location 2041 is 18
9999 mem: storing 78 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 60 -> 61
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 78
9998 run: address to copy to is 1172
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1172
9999 mem: storing 7 in location 1173
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 18
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 18
9999 mem: storing 19 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 19
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 19 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: print {screen: ("address" "screen")}, {space: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1934 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 82 -> 83
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 2
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 2
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 19
9999 mem: storing 19 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 19
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 19
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 2
9999 mem: location 2037 is 30
9999 mem: storing 60 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 60
9999 mem: location 2041 is 19
9999 mem: storing 79 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 61 -> 62
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 79
9998 run: address to copy to is 1174
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1174
9999 mem: storing 7 in location 1175
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 19
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 19
9999 mem: storing 20 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 20
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 20 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {col: "number"} <- add {col: "number"}, {1: "literal"}
9999 mem: location 1938 is 7
9999 mem: storing 8 in location 1938
 104 run: jump {: "offset"}
9998 run: jumping to instruction 14
 104 run: {done?: "boolean"} <- equal {col: "number"}, {8: "literal"}
9999 mem: location 1938 is 8
9999 mem: storing 1 in location 1935
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1935 is 1
9998 run: jumping to instruction 22
 104 run: {row: "number"} <- subtract {row: "number"}, {1: "literal"}
9999 mem: location 1933 is 5
9999 mem: storing 4 in location 1933
 104 run: cursor-to-next-line {screen: ("address" "screen")}
9999 mem: location 1931 is 1008
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 2
9999 mem: allocating size 4
9999 abandon: picking up space from free-list of size 4
9999 mem: new alloc from free list: 2059
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 83 -> 84
9999 mem: storing 1008 in location 2062
 105 run: {screen: ("address" "screen")} <- cursor-down {screen: ("address" "screen")}
9999 mem: location 2062 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 84 -> 85
9999 mem: storing 1008 in location 1003
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1004
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1005
 106 run: {max: "number"} <- subtract {height: "number"}, {1: "literal"}
9999 mem: location 1004 is 12
9999 mem: storing 11 in location 1006
 106 run: {at-bottom?: "boolean"} <- greater-or-equal {row: "number"}, {max: "number"}
9999 mem: location 1005 is 2
9999 mem: location 1006 is 11
9999 mem: storing 0 in location 1007
 106 run: jump-if {at-bottom?: "boolean"}, {: "offset"}
9999 mem: location 1007 is 0
9998 run: jump-if fell through
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1005 is 2
9999 mem: storing 3 in location 1005
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {row: "number"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 2
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 1005 is 3
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 3 in location 1011
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 1008 in location 2062
 105 run: {screen: ("address" "screen")} <- cursor-to-start-of-line {screen: ("address" "screen")}
9999 mem: location 2062 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1961
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 85 -> 86
9999 mem: storing 1008 in location 1964
 106 run: {row: "number"} <- cursor-position {screen: ("address" "screen")}
9999 mem: location 1964 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 2063
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 86 -> 87
9999 mem: storing 1008 in location 2066
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2066 is 1008
9998 run: jump-unless fell through
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2066 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 2066 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 2067
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2066 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 2066 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 20
9999 mem: storing 20 in location 2068
 107 run: return {row: "number"}, {column: "number"}
9999 mem: location 2067 is 3
9999 mem: location 2068 is 20
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 3
9999 mem: storing 3 in location 1965
 106 run: {column: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1966
 106 run: {screen: ("address" "screen")} <- move-cursor {screen: ("address" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1964 is 1008
9999 mem: location 1965 is 3
9999 mem: location 1966 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 2063
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 87 -> 88
9999 mem: storing 1008 in location 2066
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 2067
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 2068
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2066 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 2066 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 2067 is 3
9999 mem: location 2066 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 3 in location 1011
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 2066 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 2068 is 0
9999 mem: location 2066 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2066 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 1008 in location 1964
 106 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1964 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 1008 in location 2062
 105 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2062 is 1008
9999 abandon: saving in free-list of size 4
9999 trace: reply: decrementing callstack depth from 4
 104 run: jump {: "offset"}
9998 run: jumping to instruction 6
 104 run: {done?: "boolean"} <- lesser-than {row: "number"}, {0: "literal"}
9999 mem: location 1933 is 4
9999 mem: storing 0 in location 1935
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1935 is 0
9998 run: jump-if fell through
 104 run: {rank: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1933 is 4
9999 mem: storing 5 in location 1936
 104 run: print-integer {screen: ("address" "screen")}, {rank: "number"}
9999 mem: location 1931 is 1008
9999 mem: location 1936 is 5
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1736
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 88 -> 89
9999 mem: storing 1008 in location 1739
 105 run: {n: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1740
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1741
9999 mem: storing 0 in location 1742
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1742 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1741
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1743
9999 mem: storing 0 in location 1744
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1744 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1743
 105 run: {s: ("address" "array" "character")} <- to-text_3 {n: "number"}
9999 mem: location 1740 is 5
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 16
9999 mem: allocating size 18
9999 abandon: picking up space from free-list of size 18
9999 mem: new alloc from free list: 1943
 106 run: {n: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1946
 106 run: jump-if {n: "number"}, {: "offset"}
9999 mem: location 1946 is 5
9998 run: jumping to instruction 6
 106 run: {negate-result: "boolean"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1948
 106 run: {negative?: "boolean"} <- lesser-than {n: "number"}, {0: "literal"}
9999 mem: location 1946 is 5
9999 mem: storing 0 in location 1949
 106 run: jump-unless {negative?: "boolean"}, {: "offset"}
9999 mem: location 1949 is 0
9998 run: jumping to instruction 13
 106 run: {tmp: ("address" "buffer")} <- new-buffer {30: "literal"}
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1961
 107 run: {capacity: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 30 in location 1964
 107 run: {result: ("address" "buffer")} <- new {buffer: "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 2155
9999 mem: storing 0 in location 2155
9999 mem: storing 0 in location 2156
9999 mem: storing 0 in location 2157
9999 mem: incrementing refcount of 2155: 0 -> 1
9999 mem: storing 2155 in location 1965
 107 run: {result: ("address" "buffer"), "lookup": ()} <- put {result: ("address" "buffer"), "lookup": ()}, {length: "offset"}, {0: "literal"}
9999 mem: location 1965 is 2155
9999 mem: skipping refcount at 2155
9999 mem: location 2156 is 0
9999 mem: location 2157 is 0
9999 mem: location 1965 is 2155
9999 mem: skipping refcount at 2155
9998 run: address to copy to is 2156
9999 mem: storing 0 in location 2156
 107 run: {data: ("address" "array" "character")} <- new {character: "type"}, {capacity: "number"}
9999 mem: location 1964 is 30
9999 mem: array size is 30
9999 mem: allocating size 32
9999 mem: new alloc: 2158
9999 mem: storing 0 in location 2158
9999 mem: storing 0 in location 2159
9999 mem: storing 0 in location 2160
9999 mem: storing 0 in location 2161
9999 mem: storing 0 in location 2162
9999 mem: storing 0 in location 2163
9999 mem: storing 0 in location 2164
9999 mem: storing 0 in location 2165
9999 mem: storing 0 in location 2166
9999 mem: storing 0 in location 2167
9999 mem: storing 0 in location 2168
9999 mem: storing 0 in location 2169
9999 mem: storing 0 in location 2170
9999 mem: storing 0 in location 2171
9999 mem: storing 0 in location 2172
9999 mem: storing 0 in location 2173
9999 mem: storing 0 in location 2174
9999 mem: storing 0 in location 2175
9999 mem: storing 0 in location 2176
9999 mem: storing 0 in location 2177
9999 mem: storing 0 in location 2178
9999 mem: storing 0 in location 2179
9999 mem: storing 0 in location 2180
9999 mem: storing 0 in location 2181
9999 mem: storing 0 in location 2182
9999 mem: storing 0 in location 2183
9999 mem: storing 0 in location 2184
9999 mem: storing 0 in location 2185
9999 mem: storing 0 in location 2186
9999 mem: storing 0 in location 2187
9999 mem: storing 0 in location 2188
9999 mem: storing 0 in location 2189
9999 mem: storing 30 in location 2159
9999 mem: incrementing refcount of 2158: 0 -> 1
9999 mem: storing 2158 in location 1966
 107 run: {result: ("address" "buffer"), "lookup": ()} <- put {result: ("address" "buffer"), "lookup": ()}, {data: "offset"}, {data: ("address" "array" "character")}
9999 mem: location 1965 is 2155
9999 mem: skipping refcount at 2155
9999 mem: location 2156 is 0
9999 mem: location 2157 is 0
9999 mem: location 1966 is 2158
9999 mem: location 1965 is 2155
9999 mem: skipping refcount at 2155
9998 run: address to copy to is 2157
9999 mem: incrementing refcount of 2158: 1 -> 2
9999 mem: storing 2158 in location 2157
 107 run: return {result: ("address" "buffer")}
9999 mem: location 1965 is 2155
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 2155
9999 mem: incrementing refcount of 2155: 1 -> 2
9999 mem: storing 2155 in location 1950
 106 run: {digit-base: "number"} <- copy {48: "literal"}
9999 mem: storing 48 in location 1951
 106 run: {done?: "boolean"} <- equal {n: "number"}, {0: "literal"}
9999 mem: location 1946 is 5
9999 mem: storing 0 in location 1952
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1952 is 0
9998 run: jump-if fell through
 106 run: {n: "number"}, {digit: "number"} <- divide-with-remainder {n: "number"}, {10: "literal"}
9999 mem: location 1946 is 5
9999 mem: storing 0 in location 1946
9999 mem: storing 5 in location 1953
 106 run: {c: "character"} <- add {digit-base: "number"}, {digit: "number"}
9999 mem: location 1951 is 48
9999 mem: location 1953 is 5
9999 mem: storing 53 in location 1954
 106 run: {tmp: ("address" "buffer")} <- append_2 {tmp: ("address" "buffer")}, {c: "character"}
9999 mem: location 1950 is 2155
9999 mem: location 1954 is 53
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 2002
 107 run: {in: ("address" "buffer")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 2155: 2 -> 3
9999 mem: storing 2155 in location 2005
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 53 in location 2006
 107 run: {len: "number"} <- get {in: ("address" "buffer"), "lookup": ()}, {length: "offset"}
9999 mem: location 2005 is 2155
9999 mem: skipping refcount at 2155
9999 mem: location 2156 is 0
9999 mem: location 2157 is 2158
9999 mem: location 2005 is 2155
9999 mem: skipping refcount at 2155
9998 run: address to copy is 2156
9998 run: its type is "number"
9999 mem: location 2156 is 0
9999 mem: storing 0 in location 2007
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal", "backspace": ()}
9999 mem: location 2006 is 53
9999 mem: storing 0 in location 2008
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2008 is 0
9998 run: jumping to instruction 15
 107 run: {full?: "boolean"} <- buffer-full? {in: ("address" "buffer")}
9999 mem: location 2005 is 2155
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 108 run: {in: ("address" "buffer")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 2155: 3 -> 4
9999 mem: storing 2155 in location 1003
 108 run: {len: "number"} <- get {in: ("address" "buffer"), "lookup": ()}, {length: "offset"}
9999 mem: location 1003 is 2155
9999 mem: skipping refcount at 2155
9999 mem: location 2156 is 0
9999 mem: location 2157 is 2158
9999 mem: location 1003 is 2155
9999 mem: skipping refcount at 2155
9998 run: address to copy is 2156
9998 run: its type is "number"
9999 mem: location 2156 is 0
9999 mem: storing 0 in location 1004
 108 run: {s: ("address" "array" "character")} <- get {in: ("address" "buffer"), "lookup": ()}, {data: "offset"}
9999 mem: location 1003 is 2155
9999 mem: skipping refcount at 2155
9999 mem: location 2156 is 0
9999 mem: location 2157 is 2158
9999 mem: location 1003 is 2155
9999 mem: skipping refcount at 2155
9998 run: address to copy is 2157
9998 run: its type is ("address" "array" "character")
9999 mem: location 2157 is 2158
9999 mem: incrementing refcount of 2158: 2 -> 3
9999 mem: storing 2158 in location 1005
 108 run: {capacity: "number"} <- length {s: ("address" "array" "character"), "lookup": ()}
9999 mem: location 1005 is 2158
9999 mem: skipping refcount at 2158
9999 mem: storing 30 in location 1006
 108 run: {result: "boolean"} <- greater-or-equal {len: "number"}, {capacity: "number"}
9999 mem: location 1004 is 0
9999 mem: location 1006 is 30
9999 mem: storing 0 in location 1007
 108 run: reply {result: "boolean"}
9999 mem: location 1007 is 0
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 0
9999 mem: storing 0 in location 2010
 107 run: jump-unless {full?: "boolean"}, {: "offset"}
9999 mem: location 2010 is 0
9998 run: jumping to instruction 20
 107 run: {s: ("address" "array" "character")} <- get {in: ("address" "buffer"), "lookup": ()}, {data: "offset"}
9999 mem: location 2005 is 2155
9999 mem: skipping refcount at 2155
9999 mem: location 2156 is 0
9999 mem: location 2157 is 2158
9999 mem: location 2005 is 2155
9999 mem: skipping refcount at 2155
9998 run: address to copy is 2157
9998 run: its type is ("address" "array" "character")
9999 mem: location 2157 is 2158
9999 mem: incrementing refcount of 2158: 3 -> 4
9999 mem: storing 2158 in location 2011
 107 run: {s: ("address" "array" "character"), "lookup": ()} <- put-index {s: ("address" "array" "character"), "lookup": ()}, {len: "number"}, {c: "character"}
9999 mem: location 2011 is 2158
9999 mem: skipping refcount at 2158
9999 mem: location 2007 is 0
9998 run: address to copy to is 2160
9999 mem: location 2006 is 53
9999 mem: storing 53 in location 2160
 107 run: {len: "number"} <- add {len: "number"}, {1: "literal"}
9999 mem: location 2007 is 0
9999 mem: storing 1 in location 2007
 107 run: {in: ("address" "buffer"), "lookup": ()} <- put {in: ("address" "buffer"), "lookup": ()}, {length: "offset"}, {len: "number"}
9999 mem: location 2005 is 2155
9999 mem: skipping refcount at 2155
9999 mem: location 2156 is 0
9999 mem: location 2157 is 2158
9999 mem: location 2007 is 1
9999 mem: location 2005 is 2155
9999 mem: skipping refcount at 2155
9998 run: address to copy to is 2156
9999 mem: storing 1 in location 2156
 107 run: reply {in: ("address" "buffer"), "same-as-ingredient": "0"}
9999 mem: location 2005 is 2155
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 2155
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 2155 in location 1950
 106 run: jump {: "offset"}
9998 run: jumping to instruction 17
 106 run: {done?: "boolean"} <- equal {n: "number"}, {0: "literal"}
9999 mem: location 1946 is 0
9999 mem: storing 1 in location 1952
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1952 is 1
9998 run: jumping to instruction 23
 106 run: jump-unless {negate-result: "boolean"}, {: "offset"}
9999 mem: location 1948 is 0
9998 run: jumping to instruction 28
 106 run: {len: "number"} <- get {tmp: ("address" "buffer"), "lookup": ()}, {length: "offset"}
9999 mem: location 1950 is 2155
9999 mem: skipping refcount at 2155
9999 mem: location 2156 is 1
9999 mem: location 2157 is 2158
9999 mem: location 1950 is 2155
9999 mem: skipping refcount at 2155
9998 run: address to copy is 2156
9998 run: its type is "number"
9999 mem: location 2156 is 1
9999 mem: storing 1 in location 1956
 106 run: {buf: ("address" "array" "character")} <- get {tmp: ("address" "buffer"), "lookup": ()}, {data: "offset"}
9999 mem: location 1950 is 2155
9999 mem: skipping refcount at 2155
9999 mem: location 2156 is 1
9999 mem: location 2157 is 2158
9999 mem: location 1950 is 2155
9999 mem: skipping refcount at 2155
9998 run: address to copy is 2157
9998 run: its type is ("address" "array" "character")
9999 mem: location 2157 is 2158
9999 mem: incrementing refcount of 2158: 4 -> 5
9999 mem: storing 2158 in location 1957
 106 run: {result: ("address" "array" "character")} <- new {character: "type"}, {len: "number"}
9999 mem: location 1956 is 1
9999 mem: array size is 1
9999 mem: allocating size 3
9999 mem: new alloc: 2190
9999 mem: storing 0 in location 2190
9999 mem: storing 0 in location 2191
9999 mem: storing 0 in location 2192
9999 mem: storing 1 in location 2191
9999 mem: incrementing refcount of 2190: 0 -> 1
9999 mem: storing 2190 in location 1947
 106 run: {i: "number"} <- subtract {len: "number"}, {1: "literal"}
9999 mem: location 1956 is 1
9999 mem: storing 0 in location 1958
 106 run: {j: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1959
 106 run: {done?: "boolean"} <- lesser-than {i: "number"}, {0: "literal"}
9999 mem: location 1958 is 0
9999 mem: storing 0 in location 1952
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1952 is 0
9998 run: jump-if fell through
 106 run: {src: "character"} <- index {buf: ("address" "array" "character"), "lookup": ()}, {i: "number"}
9999 mem: location 1957 is 2158
9999 mem: skipping refcount at 2158
9998 run: base address is 2159
9999 mem: location 1958 is 0
9998 run: address to copy is 2160
9998 run: its type is character
9999 mem: location 2160 is 53
9999 mem: storing 53 in location 1960
 106 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {j: "number"}, {src: "character"}
9999 mem: location 1947 is 2190
9999 mem: skipping refcount at 2190
9999 mem: location 1959 is 0
9998 run: address to copy to is 2192
9999 mem: location 1960 is 53
9999 mem: storing 53 in location 2192
 106 run: {i: "number"} <- subtract {i: "number"}, {1: "literal"}
9999 mem: location 1958 is 0
9999 mem: storing -1 in location 1958
 106 run: {j: "number"} <- add {j: "number"}, {1: "literal"}
9999 mem: location 1959 is 0
9999 mem: storing 1 in location 1959
 106 run: jump {: "offset"}
9998 run: jumping to instruction 35
 106 run: {done?: "boolean"} <- lesser-than {i: "number"}, {0: "literal"}
9999 mem: location 1958 is -1
9999 mem: storing 1 in location 1952
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1952 is 1
9998 run: jumping to instruction 42
 106 run: reply {result: ("address" "array" "character")}
9999 mem: location 1947 is 2190
9999 abandon: saving in free-list of size 18
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 2190
9999 mem: incrementing refcount of 2190: 1 -> 2
9999 mem: storing 2190 in location 1745
 105 run: {screen: ("address" "screen")} <- print_2 {screen: ("address" "screen")}, {s: ("address" "array" "character")}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1739 is 1008
9999 mem: location 1745 is 2190
9999 mem: location 1741 is 7
9999 mem: location 1743 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 11
9999 mem: allocating size 13
9999 abandon: picking up space from free-list of size 13
9999 mem: new alloc from free list: 2015
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 89 -> 90
9999 mem: storing 1008 in location 2018
 106 run: {s: ("address" "array" "character")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 2190: 2 -> 3
9999 mem: storing 2190 in location 2019
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 2020
9999 mem: storing 1 in location 2021
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2021 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2022
9999 mem: storing 1 in location 2023
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2023 is 1
9998 run: jumping to instruction 12
 106 run: {len: "number"} <- length {s: ("address" "array" "character"), "lookup": ()}
9999 mem: location 2019 is 2190
9999 mem: skipping refcount at 2190
9999 mem: storing 1 in location 2024
 106 run: {i: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 2025
 106 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 2025 is 0
9999 mem: location 2024 is 1
9999 mem: storing 0 in location 2026
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 2026 is 0
9998 run: jump-if fell through
 106 run: {c: "character"} <- index {s: ("address" "array" "character"), "lookup": ()}, {i: "number"}
9999 mem: location 2019 is 2190
9999 mem: skipping refcount at 2190
9998 run: base address is 2191
9999 mem: location 2025 is 0
9998 run: address to copy is 2192
9998 run: its type is character
9999 mem: location 2192 is 53
9999 mem: storing 53 in location 2027
 106 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 2018 is 1008
9999 mem: location 2027 is 53
9999 mem: location 2020 is 7
9999 mem: location 2022 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 90 -> 91
9999 mem: storing 1008 in location 2031
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 53 in location 2032
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 2033
9999 mem: storing 1 in location 2034
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 1 in location 2036
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 53
  90 print-character: 53 
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 2039
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 3
9999 mem: storing 1 in location 2040
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 3
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 2041
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 0
9999 mem: storing 1 in location 2040
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 0
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 53
9999 mem: storing 0 in location 2042
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 3
9999 mem: location 2037 is 30
9999 mem: storing 90 in location 2045
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 90
9999 mem: location 2041 is 0
9999 mem: storing 90 in location 2045
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 62 -> 63
9999 mem: storing 1014 in location 2046
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 53
9999 mem: storing 0 in location 2048
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 53
9999 mem: location 2033 is 7
9999 mem: storing 53 in location 2050
9999 mem: storing 7 in location 2051
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 90
9998 run: address to copy to is 1196
9999 mem: location 2050 is 53
9999 mem: location 2051 is 7
9999 mem: storing 53 in location 1196
9999 mem: storing 7 in location 1197
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 0
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 0
9999 mem: storing 1 in location 2041
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 1
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
 106 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 2025 is 0
9999 mem: storing 1 in location 2025
 106 run: jump {: "offset"}
9998 run: jumping to instruction 16
 106 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 2025 is 1
9999 mem: location 2024 is 1
9999 mem: storing 1 in location 2026
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 2026 is 1
9998 run: jumping to instruction 22
 106 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2018 is 1008
9999 abandon: saving in free-list of size 13
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 1008 in location 1739
 105 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1739 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 4
 104 run: {print_10_1: ("address" "array" "character")} <- new {" | ": "literal-string"}
9999 mem: new string alloc: 2193
9999 mem: decrementing refcount of 2150: 2 -> 1
9999 mem: incrementing refcount of 2193: 0 -> 1
9999 mem: storing 2193 in location 1937
 104 run: print_2 {screen: ("address" "screen")}, {print_10_1: ("address" "array" "character")}
9999 mem: location 1931 is 1008
9999 mem: location 1937 is 2193
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 11
9999 mem: allocating size 13
9999 abandon: picking up space from free-list of size 13
9999 mem: new alloc from free list: 2015
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 91 -> 92
9999 mem: storing 1008 in location 2018
 105 run: {s: ("address" "array" "character")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 2193: 1 -> 2
9999 mem: storing 2193 in location 2019
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2020
9999 mem: storing 0 in location 2021
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2021 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2020
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2022
9999 mem: storing 0 in location 2023
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2023 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2022
 105 run: {len: "number"} <- length {s: ("address" "array" "character"), "lookup": ()}
9999 mem: location 2019 is 2193
9999 mem: skipping refcount at 2193
9999 mem: storing 3 in location 2024
 105 run: {i: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 2025
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 2025 is 0
9999 mem: location 2024 is 3
9999 mem: storing 0 in location 2026
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 2026 is 0
9998 run: jump-if fell through
 105 run: {c: "character"} <- index {s: ("address" "array" "character"), "lookup": ()}, {i: "number"}
9999 mem: location 2019 is 2193
9999 mem: skipping refcount at 2193
9998 run: base address is 2194
9999 mem: location 2025 is 0
9998 run: address to copy is 2195
9998 run: its type is character
9999 mem: location 2195 is 32
9999 mem: storing 32 in location 2027
 105 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 2018 is 1008
9999 mem: location 2027 is 32
9999 mem: location 2020 is 7
9999 mem: location 2022 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 92 -> 93
9999 mem: storing 1008 in location 2031
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 2033
9999 mem: storing 1 in location 2034
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 1 in location 2036
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
9990 schedule: print/print_2/print-board/run_1001/scenario_making-a-move
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 2039
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 3
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 3
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 2041
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 1
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 1
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 3
9999 mem: location 2037 is 30
9999 mem: storing 90 in location 2045
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 90
9999 mem: location 2041 is 1
9999 mem: storing 91 in location 2045
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 63 -> 64
9999 mem: storing 1014 in location 2046
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 91
9998 run: address to copy to is 1198
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1198
9999 mem: storing 7 in location 1199
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 1
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 1
9999 mem: storing 2 in location 2041
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 2
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 2025 is 0
9999 mem: storing 1 in location 2025
 105 run: jump {: "offset"}
9998 run: jumping to instruction 16
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 2025 is 1
9999 mem: location 2024 is 3
9999 mem: storing 0 in location 2026
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 2026 is 0
9998 run: jump-if fell through
 105 run: {c: "character"} <- index {s: ("address" "array" "character"), "lookup": ()}, {i: "number"}
9999 mem: location 2019 is 2193
9999 mem: skipping refcount at 2193
9998 run: base address is 2194
9999 mem: location 2025 is 1
9998 run: address to copy is 2196
9998 run: its type is character
9999 mem: location 2196 is 124
9999 mem: storing 124 in location 2027
 105 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 2018 is 1008
9999 mem: location 2027 is 124
9999 mem: location 2020 is 7
9999 mem: location 2022 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 93 -> 94
9999 mem: storing 1008 in location 2031
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 124 in location 2032
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 2033
9999 mem: storing 1 in location 2034
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 1 in location 2036
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 124
  90 print-character: 124 
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 2039
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 3
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 3
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 2041
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 2
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 2
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 124
9999 mem: storing 0 in location 2042
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 3
9999 mem: location 2037 is 30
9999 mem: storing 90 in location 2045
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 90
9999 mem: location 2041 is 2
9999 mem: storing 92 in location 2045
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 64 -> 65
9999 mem: storing 1014 in location 2046
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 124
9999 mem: storing 0 in location 2048
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 124
9999 mem: location 2033 is 7
9999 mem: storing 124 in location 2050
9999 mem: storing 7 in location 2051
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 92
9998 run: address to copy to is 1200
9999 mem: location 2050 is 124
9999 mem: location 2051 is 7
9999 mem: storing 124 in location 1200
9999 mem: storing 7 in location 1201
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 2
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 2
9999 mem: storing 3 in location 2041
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 3
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 2025 is 1
9999 mem: storing 2 in location 2025
 105 run: jump {: "offset"}
9998 run: jumping to instruction 16
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 2025 is 2
9999 mem: location 2024 is 3
9999 mem: storing 0 in location 2026
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 2026 is 0
9998 run: jump-if fell through
 105 run: {c: "character"} <- index {s: ("address" "array" "character"), "lookup": ()}, {i: "number"}
9999 mem: location 2019 is 2193
9999 mem: skipping refcount at 2193
9998 run: base address is 2194
9999 mem: location 2025 is 2
9998 run: address to copy is 2197
9998 run: its type is character
9999 mem: location 2197 is 32
9999 mem: storing 32 in location 2027
 105 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 2018 is 1008
9999 mem: location 2027 is 32
9999 mem: location 2020 is 7
9999 mem: location 2022 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 94 -> 95
9999 mem: storing 1008 in location 2031
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 2033
9999 mem: storing 1 in location 2034
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 1 in location 2036
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 2039
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 3
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 3
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 2041
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 3
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 3
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 3
9999 mem: location 2037 is 30
9999 mem: storing 90 in location 2045
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 90
9999 mem: location 2041 is 3
9999 mem: storing 93 in location 2045
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 65 -> 66
9999 mem: storing 1014 in location 2046
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 93
9998 run: address to copy to is 1202
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1202
9999 mem: storing 7 in location 1203
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 3
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 3
9999 mem: storing 4 in location 2041
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 4
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 2025 is 2
9999 mem: storing 3 in location 2025
 105 run: jump {: "offset"}
9998 run: jumping to instruction 16
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 2025 is 3
9999 mem: location 2024 is 3
9999 mem: storing 1 in location 2026
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 2026 is 1
9998 run: jumping to instruction 22
 105 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2018 is 1008
9999 abandon: saving in free-list of size 13
9999 trace: reply: decrementing callstack depth from 4
 104 run: {col: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1938
 104 run: {done?: "boolean"} <- equal {col: "number"}, {8: "literal"}
9999 mem: location 1938 is 0
9999 mem: storing 0 in location 1935
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1935 is 0
9998 run: jump-if fell through
 104 run: {f: ("address" "array" "character")} <- index {board: ("address" "array" "address" "array" "character"), "lookup": ()}, {col: "number"}
9999 mem: location 1932 is 1826
9999 mem: skipping refcount at 1826
9998 run: base address is 1827
9999 mem: location 1938 is 0
9998 run: address to copy is 1828
9998 run: its type is address
9999 mem: location 1828 is 1836
9999 mem: decrementing refcount of 1906: 4 -> 3
9999 mem: incrementing refcount of 1836: 2 -> 3
9999 mem: storing 1836 in location 1939
 104 run: {c: "character"} <- index {f: ("address" "array" "character"), "lookup": ()}, {row: "number"}
9999 mem: location 1939 is 1836
9999 mem: skipping refcount at 1836
9998 run: base address is 1837
9999 mem: location 1933 is 4
9998 run: address to copy is 1842
9998 run: its type is character
9999 mem: location 1842 is 32
9999 mem: storing 32 in location 1940
 104 run: print {screen: ("address" "screen")}, {c: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1940 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 95 -> 96
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 3
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 3
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 4
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 4
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 3
9999 mem: location 2037 is 30
9999 mem: storing 90 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 90
9999 mem: location 2041 is 4
9999 mem: storing 94 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 66 -> 67
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 94
9998 run: address to copy to is 1204
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1204
9999 mem: storing 7 in location 1205
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 4
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 4
9999 mem: storing 5 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 5
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: print {screen: ("address" "screen")}, {space: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1934 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 96 -> 97
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 3
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 3
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 5
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 5
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 3
9999 mem: location 2037 is 30
9999 mem: storing 90 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 90
9999 mem: location 2041 is 5
9999 mem: storing 95 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 67 -> 68
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 95
9998 run: address to copy to is 1206
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1206
9999 mem: storing 7 in location 1207
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 5
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 5
9999 mem: storing 6 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 6
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {col: "number"} <- add {col: "number"}, {1: "literal"}
9999 mem: location 1938 is 0
9999 mem: storing 1 in location 1938
 104 run: jump {: "offset"}
9998 run: jumping to instruction 14
 104 run: {done?: "boolean"} <- equal {col: "number"}, {8: "literal"}
9999 mem: location 1938 is 1
9999 mem: storing 0 in location 1935
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1935 is 0
9998 run: jump-if fell through
 104 run: {f: ("address" "array" "character")} <- index {board: ("address" "array" "address" "array" "character"), "lookup": ()}, {col: "number"}
9999 mem: location 1932 is 1826
9999 mem: skipping refcount at 1826
9998 run: base address is 1827
9999 mem: location 1938 is 1
9998 run: address to copy is 1829
9998 run: its type is address
9999 mem: location 1829 is 1846
9999 mem: decrementing refcount of 1836: 3 -> 2
9999 mem: incrementing refcount of 1846: 2 -> 3
9999 mem: storing 1846 in location 1939
 104 run: {c: "character"} <- index {f: ("address" "array" "character"), "lookup": ()}, {row: "number"}
9999 mem: location 1939 is 1846
9999 mem: skipping refcount at 1846
9998 run: base address is 1847
9999 mem: location 1933 is 4
9998 run: address to copy is 1852
9998 run: its type is character
9999 mem: location 1852 is 32
9999 mem: storing 32 in location 1940
 104 run: print {screen: ("address" "screen")}, {c: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1940 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 97 -> 98
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 3
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 3
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 6
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 6
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 3
9999 mem: location 2037 is 30
9999 mem: storing 90 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 90
9999 mem: location 2041 is 6
9999 mem: storing 96 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 68 -> 69
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 96
9998 run: address to copy to is 1208
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1208
9999 mem: storing 7 in location 1209
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 6
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 6
9999 mem: storing 7 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 7
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: print {screen: ("address" "screen")}, {space: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1934 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 98 -> 99
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 3
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 3
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 7
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 7
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 3
9999 mem: location 2037 is 30
9999 mem: storing 90 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 90
9999 mem: location 2041 is 7
9999 mem: storing 97 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 69 -> 70
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 97
9998 run: address to copy to is 1210
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1210
9999 mem: storing 7 in location 1211
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 7
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 7
9999 mem: storing 8 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 8
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {col: "number"} <- add {col: "number"}, {1: "literal"}
9999 mem: location 1938 is 1
9999 mem: storing 2 in location 1938
 104 run: jump {: "offset"}
9998 run: jumping to instruction 14
 104 run: {done?: "boolean"} <- equal {col: "number"}, {8: "literal"}
9999 mem: location 1938 is 2
9999 mem: storing 0 in location 1935
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1935 is 0
9998 run: jump-if fell through
 104 run: {f: ("address" "array" "character")} <- index {board: ("address" "array" "address" "array" "character"), "lookup": ()}, {col: "number"}
9999 mem: location 1932 is 1826
9999 mem: skipping refcount at 1826
9998 run: base address is 1827
9999 mem: location 1938 is 2
9998 run: address to copy is 1830
9998 run: its type is address
9999 mem: location 1830 is 1856
9999 mem: decrementing refcount of 1846: 3 -> 2
9999 mem: incrementing refcount of 1856: 2 -> 3
9999 mem: storing 1856 in location 1939
 104 run: {c: "character"} <- index {f: ("address" "array" "character"), "lookup": ()}, {row: "number"}
9999 mem: location 1939 is 1856
9999 mem: skipping refcount at 1856
9998 run: base address is 1857
9999 mem: location 1933 is 4
9998 run: address to copy is 1862
9998 run: its type is character
9999 mem: location 1862 is 32
9999 mem: storing 32 in location 1940
 104 run: print {screen: ("address" "screen")}, {c: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1940 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 99 -> 100
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 3
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 3
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 8
9999 mem: storing 8 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 8
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 8
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 3
9999 mem: location 2037 is 30
9999 mem: storing 90 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 90
9999 mem: location 2041 is 8
9999 mem: storing 98 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 70 -> 71
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 98
9998 run: address to copy to is 1212
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1212
9999 mem: storing 7 in location 1213
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 8
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 8
9999 mem: storing 9 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 9
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 9 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: print {screen: ("address" "screen")}, {space: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1934 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 100 -> 101
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
9990 schedule: print/print-board/run_1001/scenario_making-a-move
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 3
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 3
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 9
9999 mem: storing 9 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 9
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 9
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 3
9999 mem: location 2037 is 30
9999 mem: storing 90 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 90
9999 mem: location 2041 is 9
9999 mem: storing 99 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 71 -> 72
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 99
9998 run: address to copy to is 1214
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1214
9999 mem: storing 7 in location 1215
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 9
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 9
9999 mem: storing 10 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 10
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 10 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {col: "number"} <- add {col: "number"}, {1: "literal"}
9999 mem: location 1938 is 2
9999 mem: storing 3 in location 1938
 104 run: jump {: "offset"}
9998 run: jumping to instruction 14
 104 run: {done?: "boolean"} <- equal {col: "number"}, {8: "literal"}
9999 mem: location 1938 is 3
9999 mem: storing 0 in location 1935
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1935 is 0
9998 run: jump-if fell through
 104 run: {f: ("address" "array" "character")} <- index {board: ("address" "array" "address" "array" "character"), "lookup": ()}, {col: "number"}
9999 mem: location 1932 is 1826
9999 mem: skipping refcount at 1826
9998 run: base address is 1827
9999 mem: location 1938 is 3
9998 run: address to copy is 1831
9998 run: its type is address
9999 mem: location 1831 is 1866
9999 mem: decrementing refcount of 1856: 3 -> 2
9999 mem: incrementing refcount of 1866: 2 -> 3
9999 mem: storing 1866 in location 1939
 104 run: {c: "character"} <- index {f: ("address" "array" "character"), "lookup": ()}, {row: "number"}
9999 mem: location 1939 is 1866
9999 mem: skipping refcount at 1866
9998 run: base address is 1867
9999 mem: location 1933 is 4
9998 run: address to copy is 1872
9998 run: its type is character
9999 mem: location 1872 is 32
9999 mem: storing 32 in location 1940
 104 run: print {screen: ("address" "screen")}, {c: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1940 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 101 -> 102
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 3
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 3
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 10
9999 mem: storing 10 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 10
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 10
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 3
9999 mem: location 2037 is 30
9999 mem: storing 90 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 90
9999 mem: location 2041 is 10
9999 mem: storing 100 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 72 -> 73
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 100
9998 run: address to copy to is 1216
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1216
9999 mem: storing 7 in location 1217
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 10
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 10
9999 mem: storing 11 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 11
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 11 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: print {screen: ("address" "screen")}, {space: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1934 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 102 -> 103
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 3
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 3
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 11
9999 mem: storing 11 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 11
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 11
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 3
9999 mem: location 2037 is 30
9999 mem: storing 90 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 90
9999 mem: location 2041 is 11
9999 mem: storing 101 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 73 -> 74
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 101
9998 run: address to copy to is 1218
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1218
9999 mem: storing 7 in location 1219
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 11
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 11
9999 mem: storing 12 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 12
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 12 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {col: "number"} <- add {col: "number"}, {1: "literal"}
9999 mem: location 1938 is 3
9999 mem: storing 4 in location 1938
 104 run: jump {: "offset"}
9998 run: jumping to instruction 14
 104 run: {done?: "boolean"} <- equal {col: "number"}, {8: "literal"}
9999 mem: location 1938 is 4
9999 mem: storing 0 in location 1935
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1935 is 0
9998 run: jump-if fell through
 104 run: {f: ("address" "array" "character")} <- index {board: ("address" "array" "address" "array" "character"), "lookup": ()}, {col: "number"}
9999 mem: location 1932 is 1826
9999 mem: skipping refcount at 1826
9998 run: base address is 1827
9999 mem: location 1938 is 4
9998 run: address to copy is 1832
9998 run: its type is address
9999 mem: location 1832 is 1876
9999 mem: decrementing refcount of 1866: 3 -> 2
9999 mem: incrementing refcount of 1876: 2 -> 3
9999 mem: storing 1876 in location 1939
 104 run: {c: "character"} <- index {f: ("address" "array" "character"), "lookup": ()}, {row: "number"}
9999 mem: location 1939 is 1876
9999 mem: skipping refcount at 1876
9998 run: base address is 1877
9999 mem: location 1933 is 4
9998 run: address to copy is 1882
9998 run: its type is character
9999 mem: location 1882 is 32
9999 mem: storing 32 in location 1940
 104 run: print {screen: ("address" "screen")}, {c: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1940 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 103 -> 104
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 3
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 3
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 12
9999 mem: storing 12 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 12
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 3
9999 mem: location 2037 is 30
9999 mem: storing 90 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 90
9999 mem: location 2041 is 12
9999 mem: storing 102 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 74 -> 75
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 102
9998 run: address to copy to is 1220
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1220
9999 mem: storing 7 in location 1221
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 12
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 12
9999 mem: storing 13 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 13
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 13 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: print {screen: ("address" "screen")}, {space: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1934 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 104 -> 105
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 3
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 3
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 13
9999 mem: storing 13 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 13
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 13
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 3
9999 mem: location 2037 is 30
9999 mem: storing 90 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 90
9999 mem: location 2041 is 13
9999 mem: storing 103 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 75 -> 76
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 103
9998 run: address to copy to is 1222
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1222
9999 mem: storing 7 in location 1223
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 13
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 13
9999 mem: storing 14 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 14
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 14 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {col: "number"} <- add {col: "number"}, {1: "literal"}
9999 mem: location 1938 is 4
9999 mem: storing 5 in location 1938
 104 run: jump {: "offset"}
9998 run: jumping to instruction 14
 104 run: {done?: "boolean"} <- equal {col: "number"}, {8: "literal"}
9999 mem: location 1938 is 5
9999 mem: storing 0 in location 1935
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1935 is 0
9998 run: jump-if fell through
 104 run: {f: ("address" "array" "character")} <- index {board: ("address" "array" "address" "array" "character"), "lookup": ()}, {col: "number"}
9999 mem: location 1932 is 1826
9999 mem: skipping refcount at 1826
9998 run: base address is 1827
9999 mem: location 1938 is 5
9998 run: address to copy is 1833
9998 run: its type is address
9999 mem: location 1833 is 1886
9999 mem: decrementing refcount of 1876: 3 -> 2
9999 mem: incrementing refcount of 1886: 2 -> 3
9999 mem: storing 1886 in location 1939
 104 run: {c: "character"} <- index {f: ("address" "array" "character"), "lookup": ()}, {row: "number"}
9999 mem: location 1939 is 1886
9999 mem: skipping refcount at 1886
9998 run: base address is 1887
9999 mem: location 1933 is 4
9998 run: address to copy is 1892
9998 run: its type is character
9999 mem: location 1892 is 32
9999 mem: storing 32 in location 1940
 104 run: print {screen: ("address" "screen")}, {c: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1940 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 105 -> 106
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 3
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 3
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 14
9999 mem: storing 14 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 14
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 14
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 3
9999 mem: location 2037 is 30
9999 mem: storing 90 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 90
9999 mem: location 2041 is 14
9999 mem: storing 104 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 76 -> 77
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 104
9998 run: address to copy to is 1224
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1224
9999 mem: storing 7 in location 1225
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 14
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 14
9999 mem: storing 15 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 15
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 15 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: print {screen: ("address" "screen")}, {space: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1934 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 106 -> 107
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 3
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 3
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 15
9999 mem: storing 15 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 15
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 15
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 3
9999 mem: location 2037 is 30
9999 mem: storing 90 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 90
9999 mem: location 2041 is 15
9999 mem: storing 105 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 77 -> 78
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 105
9998 run: address to copy to is 1226
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1226
9999 mem: storing 7 in location 1227
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 15
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 15
9999 mem: storing 16 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 16
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 16 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {col: "number"} <- add {col: "number"}, {1: "literal"}
9999 mem: location 1938 is 5
9999 mem: storing 6 in location 1938
 104 run: jump {: "offset"}
9998 run: jumping to instruction 14
 104 run: {done?: "boolean"} <- equal {col: "number"}, {8: "literal"}
9999 mem: location 1938 is 6
9999 mem: storing 0 in location 1935
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1935 is 0
9998 run: jump-if fell through
 104 run: {f: ("address" "array" "character")} <- index {board: ("address" "array" "address" "array" "character"), "lookup": ()}, {col: "number"}
9999 mem: location 1932 is 1826
9999 mem: skipping refcount at 1826
9998 run: base address is 1827
9999 mem: location 1938 is 6
9998 run: address to copy is 1834
9998 run: its type is address
9999 mem: location 1834 is 1896
9999 mem: decrementing refcount of 1886: 3 -> 2
9999 mem: incrementing refcount of 1896: 4 -> 5
9999 mem: storing 1896 in location 1939
 104 run: {c: "character"} <- index {f: ("address" "array" "character"), "lookup": ()}, {row: "number"}
9999 mem: location 1939 is 1896
9999 mem: skipping refcount at 1896
9998 run: base address is 1897
9999 mem: location 1933 is 4
9998 run: address to copy is 1902
9998 run: its type is character
9999 mem: location 1902 is 32
9999 mem: storing 32 in location 1940
 104 run: print {screen: ("address" "screen")}, {c: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1940 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 107 -> 108
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 3
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 3
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 16
9999 mem: storing 16 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 16
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 16
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 3
9999 mem: location 2037 is 30
9999 mem: storing 90 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 90
9999 mem: location 2041 is 16
9999 mem: storing 106 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 78 -> 79
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 106
9998 run: address to copy to is 1228
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1228
9999 mem: storing 7 in location 1229
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 16
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 16
9999 mem: storing 17 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 17
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 17 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: print {screen: ("address" "screen")}, {space: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1934 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 108 -> 109
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
9990 schedule: print/print-board/run_1001/scenario_making-a-move
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 3
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 3
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 17
9999 mem: storing 17 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 17
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 17
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 3
9999 mem: location 2037 is 30
9999 mem: storing 90 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 90
9999 mem: location 2041 is 17
9999 mem: storing 107 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 79 -> 80
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 107
9998 run: address to copy to is 1230
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1230
9999 mem: storing 7 in location 1231
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 17
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 17
9999 mem: storing 18 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 18
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 18 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {col: "number"} <- add {col: "number"}, {1: "literal"}
9999 mem: location 1938 is 6
9999 mem: storing 7 in location 1938
 104 run: jump {: "offset"}
9998 run: jumping to instruction 14
 104 run: {done?: "boolean"} <- equal {col: "number"}, {8: "literal"}
9999 mem: location 1938 is 7
9999 mem: storing 0 in location 1935
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1935 is 0
9998 run: jump-if fell through
 104 run: {f: ("address" "array" "character")} <- index {board: ("address" "array" "address" "array" "character"), "lookup": ()}, {col: "number"}
9999 mem: location 1932 is 1826
9999 mem: skipping refcount at 1826
9998 run: base address is 1827
9999 mem: location 1938 is 7
9998 run: address to copy is 1835
9998 run: its type is address
9999 mem: location 1835 is 1906
9999 mem: decrementing refcount of 1896: 5 -> 4
9999 mem: incrementing refcount of 1906: 3 -> 4
9999 mem: storing 1906 in location 1939
 104 run: {c: "character"} <- index {f: ("address" "array" "character"), "lookup": ()}, {row: "number"}
9999 mem: location 1939 is 1906
9999 mem: skipping refcount at 1906
9998 run: base address is 1907
9999 mem: location 1933 is 4
9998 run: address to copy is 1912
9998 run: its type is character
9999 mem: location 1912 is 32
9999 mem: storing 32 in location 1940
 104 run: print {screen: ("address" "screen")}, {c: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1940 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 109 -> 110
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 3
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 3
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 18
9999 mem: storing 18 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 18
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 18
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 3
9999 mem: location 2037 is 30
9999 mem: storing 90 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 90
9999 mem: location 2041 is 18
9999 mem: storing 108 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 80 -> 81
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 108
9998 run: address to copy to is 1232
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1232
9999 mem: storing 7 in location 1233
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 18
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 18
9999 mem: storing 19 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 19
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 19 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: print {screen: ("address" "screen")}, {space: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1934 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 110 -> 111
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 3
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 3
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 19
9999 mem: storing 19 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 19
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 19
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 3
9999 mem: location 2037 is 30
9999 mem: storing 90 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 90
9999 mem: location 2041 is 19
9999 mem: storing 109 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 81 -> 82
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 109
9998 run: address to copy to is 1234
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1234
9999 mem: storing 7 in location 1235
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 19
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 19
9999 mem: storing 20 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 20
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 20 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {col: "number"} <- add {col: "number"}, {1: "literal"}
9999 mem: location 1938 is 7
9999 mem: storing 8 in location 1938
 104 run: jump {: "offset"}
9998 run: jumping to instruction 14
 104 run: {done?: "boolean"} <- equal {col: "number"}, {8: "literal"}
9999 mem: location 1938 is 8
9999 mem: storing 1 in location 1935
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1935 is 1
9998 run: jumping to instruction 22
 104 run: {row: "number"} <- subtract {row: "number"}, {1: "literal"}
9999 mem: location 1933 is 4
9999 mem: storing 3 in location 1933
 104 run: cursor-to-next-line {screen: ("address" "screen")}
9999 mem: location 1931 is 1008
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 2
9999 mem: allocating size 4
9999 abandon: picking up space from free-list of size 4
9999 mem: new alloc from free list: 2059
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 111 -> 112
9999 mem: storing 1008 in location 2062
 105 run: {screen: ("address" "screen")} <- cursor-down {screen: ("address" "screen")}
9999 mem: location 2062 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 112 -> 113
9999 mem: storing 1008 in location 1003
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1004
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1005
 106 run: {max: "number"} <- subtract {height: "number"}, {1: "literal"}
9999 mem: location 1004 is 12
9999 mem: storing 11 in location 1006
 106 run: {at-bottom?: "boolean"} <- greater-or-equal {row: "number"}, {max: "number"}
9999 mem: location 1005 is 3
9999 mem: location 1006 is 11
9999 mem: storing 0 in location 1007
 106 run: jump-if {at-bottom?: "boolean"}, {: "offset"}
9999 mem: location 1007 is 0
9998 run: jump-if fell through
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1005 is 3
9999 mem: storing 4 in location 1005
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {row: "number"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 3
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 1005 is 4
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 4 in location 1011
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 1008 in location 2062
 105 run: {screen: ("address" "screen")} <- cursor-to-start-of-line {screen: ("address" "screen")}
9999 mem: location 2062 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1961
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 113 -> 114
9999 mem: storing 1008 in location 1964
 106 run: {row: "number"} <- cursor-position {screen: ("address" "screen")}
9999 mem: location 1964 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 2063
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 114 -> 115
9999 mem: storing 1008 in location 2066
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2066 is 1008
9998 run: jump-unless fell through
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2066 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 2066 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 2067
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2066 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 2066 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 20
9999 mem: storing 20 in location 2068
 107 run: return {row: "number"}, {column: "number"}
9999 mem: location 2067 is 4
9999 mem: location 2068 is 20
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 4
9999 mem: storing 4 in location 1965
 106 run: {column: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1966
 106 run: {screen: ("address" "screen")} <- move-cursor {screen: ("address" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1964 is 1008
9999 mem: location 1965 is 4
9999 mem: location 1966 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 2063
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 115 -> 116
9999 mem: storing 1008 in location 2066
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 2067
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 2068
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2066 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 2066 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 2067 is 4
9999 mem: location 2066 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 4 in location 1011
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 2066 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 2068 is 0
9999 mem: location 2066 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2066 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 1008 in location 1964
 106 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1964 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 1008 in location 2062
 105 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2062 is 1008
9999 abandon: saving in free-list of size 4
9999 trace: reply: decrementing callstack depth from 4
 104 run: jump {: "offset"}
9998 run: jumping to instruction 6
 104 run: {done?: "boolean"} <- lesser-than {row: "number"}, {0: "literal"}
9999 mem: location 1933 is 3
9999 mem: storing 0 in location 1935
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1935 is 0
9998 run: jump-if fell through
 104 run: {rank: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1933 is 3
9999 mem: storing 4 in location 1936
 104 run: print-integer {screen: ("address" "screen")}, {rank: "number"}
9999 mem: location 1931 is 1008
9999 mem: location 1936 is 4
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1736
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 116 -> 117
9999 mem: storing 1008 in location 1739
 105 run: {n: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1740
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1741
9999 mem: storing 0 in location 1742
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1742 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1741
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1743
9999 mem: storing 0 in location 1744
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1744 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1743
 105 run: {s: ("address" "array" "character")} <- to-text_3 {n: "number"}
9999 mem: location 1740 is 4
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 16
9999 mem: allocating size 18
9999 abandon: picking up space from free-list of size 18
9999 mem: new alloc from free list: 1943
 106 run: {n: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1946
 106 run: jump-if {n: "number"}, {: "offset"}
9999 mem: location 1946 is 4
9998 run: jumping to instruction 6
 106 run: {negate-result: "boolean"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1948
 106 run: {negative?: "boolean"} <- lesser-than {n: "number"}, {0: "literal"}
9999 mem: location 1946 is 4
9999 mem: storing 0 in location 1949
 106 run: jump-unless {negative?: "boolean"}, {: "offset"}
9999 mem: location 1949 is 0
9998 run: jumping to instruction 13
 106 run: {tmp: ("address" "buffer")} <- new-buffer {30: "literal"}
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1961
 107 run: {capacity: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 30 in location 1964
 107 run: {result: ("address" "buffer")} <- new {buffer: "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 2198
9999 mem: storing 0 in location 2198
9999 mem: storing 0 in location 2199
9999 mem: storing 0 in location 2200
9999 mem: incrementing refcount of 2198: 0 -> 1
9999 mem: storing 2198 in location 1965
 107 run: {result: ("address" "buffer"), "lookup": ()} <- put {result: ("address" "buffer"), "lookup": ()}, {length: "offset"}, {0: "literal"}
9999 mem: location 1965 is 2198
9999 mem: skipping refcount at 2198
9999 mem: location 2199 is 0
9999 mem: location 2200 is 0
9999 mem: location 1965 is 2198
9999 mem: skipping refcount at 2198
9998 run: address to copy to is 2199
9999 mem: storing 0 in location 2199
 107 run: {data: ("address" "array" "character")} <- new {character: "type"}, {capacity: "number"}
9999 mem: location 1964 is 30
9999 mem: array size is 30
9999 mem: allocating size 32
9999 mem: new alloc: 2201
9999 mem: storing 0 in location 2201
9999 mem: storing 0 in location 2202
9999 mem: storing 0 in location 2203
9999 mem: storing 0 in location 2204
9999 mem: storing 0 in location 2205
9999 mem: storing 0 in location 2206
9999 mem: storing 0 in location 2207
9999 mem: storing 0 in location 2208
9999 mem: storing 0 in location 2209
9999 mem: storing 0 in location 2210
9999 mem: storing 0 in location 2211
9999 mem: storing 0 in location 2212
9999 mem: storing 0 in location 2213
9999 mem: storing 0 in location 2214
9999 mem: storing 0 in location 2215
9999 mem: storing 0 in location 2216
9999 mem: storing 0 in location 2217
9999 mem: storing 0 in location 2218
9999 mem: storing 0 in location 2219
9999 mem: storing 0 in location 2220
9999 mem: storing 0 in location 2221
9999 mem: storing 0 in location 2222
9999 mem: storing 0 in location 2223
9999 mem: storing 0 in location 2224
9999 mem: storing 0 in location 2225
9999 mem: storing 0 in location 2226
9999 mem: storing 0 in location 2227
9999 mem: storing 0 in location 2228
9999 mem: storing 0 in location 2229
9999 mem: storing 0 in location 2230
9999 mem: storing 0 in location 2231
9999 mem: storing 0 in location 2232
9999 mem: storing 30 in location 2202
9999 mem: incrementing refcount of 2201: 0 -> 1
9999 mem: storing 2201 in location 1966
 107 run: {result: ("address" "buffer"), "lookup": ()} <- put {result: ("address" "buffer"), "lookup": ()}, {data: "offset"}, {data: ("address" "array" "character")}
9999 mem: location 1965 is 2198
9999 mem: skipping refcount at 2198
9999 mem: location 2199 is 0
9999 mem: location 2200 is 0
9999 mem: location 1966 is 2201
9999 mem: location 1965 is 2198
9999 mem: skipping refcount at 2198
9998 run: address to copy to is 2200
9999 mem: incrementing refcount of 2201: 1 -> 2
9999 mem: storing 2201 in location 2200
 107 run: return {result: ("address" "buffer")}
9999 mem: location 1965 is 2198
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 2198
9999 mem: incrementing refcount of 2198: 1 -> 2
9999 mem: storing 2198 in location 1950
 106 run: {digit-base: "number"} <- copy {48: "literal"}
9999 mem: storing 48 in location 1951
 106 run: {done?: "boolean"} <- equal {n: "number"}, {0: "literal"}
9999 mem: location 1946 is 4
9999 mem: storing 0 in location 1952
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1952 is 0
9998 run: jump-if fell through
 106 run: {n: "number"}, {digit: "number"} <- divide-with-remainder {n: "number"}, {10: "literal"}
9999 mem: location 1946 is 4
9999 mem: storing 0 in location 1946
9999 mem: storing 4 in location 1953
 106 run: {c: "character"} <- add {digit-base: "number"}, {digit: "number"}
9999 mem: location 1951 is 48
9999 mem: location 1953 is 4
9999 mem: storing 52 in location 1954
 106 run: {tmp: ("address" "buffer")} <- append_2 {tmp: ("address" "buffer")}, {c: "character"}
9999 mem: location 1950 is 2198
9999 mem: location 1954 is 52
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 2002
 107 run: {in: ("address" "buffer")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 2198: 2 -> 3
9999 mem: storing 2198 in location 2005
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 52 in location 2006
 107 run: {len: "number"} <- get {in: ("address" "buffer"), "lookup": ()}, {length: "offset"}
9999 mem: location 2005 is 2198
9999 mem: skipping refcount at 2198
9999 mem: location 2199 is 0
9999 mem: location 2200 is 2201
9999 mem: location 2005 is 2198
9999 mem: skipping refcount at 2198
9998 run: address to copy is 2199
9998 run: its type is "number"
9999 mem: location 2199 is 0
9999 mem: storing 0 in location 2007
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal", "backspace": ()}
9999 mem: location 2006 is 52
9999 mem: storing 0 in location 2008
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2008 is 0
9998 run: jumping to instruction 15
 107 run: {full?: "boolean"} <- buffer-full? {in: ("address" "buffer")}
9999 mem: location 2005 is 2198
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 108 run: {in: ("address" "buffer")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 2198: 3 -> 4
9999 mem: storing 2198 in location 1003
 108 run: {len: "number"} <- get {in: ("address" "buffer"), "lookup": ()}, {length: "offset"}
9999 mem: location 1003 is 2198
9999 mem: skipping refcount at 2198
9999 mem: location 2199 is 0
9999 mem: location 2200 is 2201
9999 mem: location 1003 is 2198
9999 mem: skipping refcount at 2198
9998 run: address to copy is 2199
9998 run: its type is "number"
9999 mem: location 2199 is 0
9999 mem: storing 0 in location 1004
 108 run: {s: ("address" "array" "character")} <- get {in: ("address" "buffer"), "lookup": ()}, {data: "offset"}
9999 mem: location 1003 is 2198
9999 mem: skipping refcount at 2198
9999 mem: location 2199 is 0
9999 mem: location 2200 is 2201
9999 mem: location 1003 is 2198
9999 mem: skipping refcount at 2198
9998 run: address to copy is 2200
9998 run: its type is ("address" "array" "character")
9999 mem: location 2200 is 2201
9999 mem: incrementing refcount of 2201: 2 -> 3
9999 mem: storing 2201 in location 1005
 108 run: {capacity: "number"} <- length {s: ("address" "array" "character"), "lookup": ()}
9999 mem: location 1005 is 2201
9999 mem: skipping refcount at 2201
9999 mem: storing 30 in location 1006
 108 run: {result: "boolean"} <- greater-or-equal {len: "number"}, {capacity: "number"}
9999 mem: location 1004 is 0
9999 mem: location 1006 is 30
9999 mem: storing 0 in location 1007
 108 run: reply {result: "boolean"}
9999 mem: location 1007 is 0
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 0
9999 mem: storing 0 in location 2010
 107 run: jump-unless {full?: "boolean"}, {: "offset"}
9999 mem: location 2010 is 0
9998 run: jumping to instruction 20
 107 run: {s: ("address" "array" "character")} <- get {in: ("address" "buffer"), "lookup": ()}, {data: "offset"}
9999 mem: location 2005 is 2198
9999 mem: skipping refcount at 2198
9999 mem: location 2199 is 0
9999 mem: location 2200 is 2201
9999 mem: location 2005 is 2198
9999 mem: skipping refcount at 2198
9998 run: address to copy is 2200
9998 run: its type is ("address" "array" "character")
9999 mem: location 2200 is 2201
9999 mem: incrementing refcount of 2201: 3 -> 4
9999 mem: storing 2201 in location 2011
 107 run: {s: ("address" "array" "character"), "lookup": ()} <- put-index {s: ("address" "array" "character"), "lookup": ()}, {len: "number"}, {c: "character"}
9999 mem: location 2011 is 2201
9999 mem: skipping refcount at 2201
9999 mem: location 2007 is 0
9998 run: address to copy to is 2203
9999 mem: location 2006 is 52
9999 mem: storing 52 in location 2203
 107 run: {len: "number"} <- add {len: "number"}, {1: "literal"}
9999 mem: location 2007 is 0
9999 mem: storing 1 in location 2007
 107 run: {in: ("address" "buffer"), "lookup": ()} <- put {in: ("address" "buffer"), "lookup": ()}, {length: "offset"}, {len: "number"}
9999 mem: location 2005 is 2198
9999 mem: skipping refcount at 2198
9999 mem: location 2199 is 0
9999 mem: location 2200 is 2201
9999 mem: location 2007 is 1
9999 mem: location 2005 is 2198
9999 mem: skipping refcount at 2198
9998 run: address to copy to is 2199
9999 mem: storing 1 in location 2199
 107 run: reply {in: ("address" "buffer"), "same-as-ingredient": "0"}
9999 mem: location 2005 is 2198
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 2198
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 2198 in location 1950
 106 run: jump {: "offset"}
9998 run: jumping to instruction 17
 106 run: {done?: "boolean"} <- equal {n: "number"}, {0: "literal"}
9999 mem: location 1946 is 0
9999 mem: storing 1 in location 1952
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1952 is 1
9998 run: jumping to instruction 23
 106 run: jump-unless {negate-result: "boolean"}, {: "offset"}
9999 mem: location 1948 is 0
9998 run: jumping to instruction 28
 106 run: {len: "number"} <- get {tmp: ("address" "buffer"), "lookup": ()}, {length: "offset"}
9999 mem: location 1950 is 2198
9999 mem: skipping refcount at 2198
9999 mem: location 2199 is 1
9999 mem: location 2200 is 2201
9999 mem: location 1950 is 2198
9999 mem: skipping refcount at 2198
9998 run: address to copy is 2199
9998 run: its type is "number"
9999 mem: location 2199 is 1
9999 mem: storing 1 in location 1956
 106 run: {buf: ("address" "array" "character")} <- get {tmp: ("address" "buffer"), "lookup": ()}, {data: "offset"}
9999 mem: location 1950 is 2198
9999 mem: skipping refcount at 2198
9999 mem: location 2199 is 1
9999 mem: location 2200 is 2201
9999 mem: location 1950 is 2198
9999 mem: skipping refcount at 2198
9998 run: address to copy is 2200
9998 run: its type is ("address" "array" "character")
9999 mem: location 2200 is 2201
9999 mem: incrementing refcount of 2201: 4 -> 5
9999 mem: storing 2201 in location 1957
 106 run: {result: ("address" "array" "character")} <- new {character: "type"}, {len: "number"}
9999 mem: location 1956 is 1
9999 mem: array size is 1
9999 mem: allocating size 3
9999 mem: new alloc: 2233
9999 mem: storing 0 in location 2233
9999 mem: storing 0 in location 2234
9999 mem: storing 0 in location 2235
9999 mem: storing 1 in location 2234
9999 mem: incrementing refcount of 2233: 0 -> 1
9999 mem: storing 2233 in location 1947
 106 run: {i: "number"} <- subtract {len: "number"}, {1: "literal"}
9999 mem: location 1956 is 1
9999 mem: storing 0 in location 1958
 106 run: {j: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1959
 106 run: {done?: "boolean"} <- lesser-than {i: "number"}, {0: "literal"}
9999 mem: location 1958 is 0
9999 mem: storing 0 in location 1952
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1952 is 0
9998 run: jump-if fell through
 106 run: {src: "character"} <- index {buf: ("address" "array" "character"), "lookup": ()}, {i: "number"}
9999 mem: location 1957 is 2201
9999 mem: skipping refcount at 2201
9998 run: base address is 2202
9999 mem: location 1958 is 0
9998 run: address to copy is 2203
9998 run: its type is character
9999 mem: location 2203 is 52
9999 mem: storing 52 in location 1960
 106 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {j: "number"}, {src: "character"}
9999 mem: location 1947 is 2233
9999 mem: skipping refcount at 2233
9999 mem: location 1959 is 0
9998 run: address to copy to is 2235
9999 mem: location 1960 is 52
9999 mem: storing 52 in location 2235
 106 run: {i: "number"} <- subtract {i: "number"}, {1: "literal"}
9999 mem: location 1958 is 0
9999 mem: storing -1 in location 1958
 106 run: {j: "number"} <- add {j: "number"}, {1: "literal"}
9999 mem: location 1959 is 0
9999 mem: storing 1 in location 1959
 106 run: jump {: "offset"}
9998 run: jumping to instruction 35
 106 run: {done?: "boolean"} <- lesser-than {i: "number"}, {0: "literal"}
9999 mem: location 1958 is -1
9999 mem: storing 1 in location 1952
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1952 is 1
9998 run: jumping to instruction 42
 106 run: reply {result: ("address" "array" "character")}
9999 mem: location 1947 is 2233
9999 abandon: saving in free-list of size 18
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 2233
9999 mem: incrementing refcount of 2233: 1 -> 2
9999 mem: storing 2233 in location 1745
 105 run: {screen: ("address" "screen")} <- print_2 {screen: ("address" "screen")}, {s: ("address" "array" "character")}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1739 is 1008
9999 mem: location 1745 is 2233
9999 mem: location 1741 is 7
9999 mem: location 1743 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 11
9999 mem: allocating size 13
9999 abandon: picking up space from free-list of size 13
9999 mem: new alloc from free list: 2015
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 117 -> 118
9999 mem: storing 1008 in location 2018
 106 run: {s: ("address" "array" "character")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 2233: 2 -> 3
9999 mem: storing 2233 in location 2019
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 2020
9999 mem: storing 1 in location 2021
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2021 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2022
9999 mem: storing 1 in location 2023
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2023 is 1
9998 run: jumping to instruction 12
 106 run: {len: "number"} <- length {s: ("address" "array" "character"), "lookup": ()}
9999 mem: location 2019 is 2233
9999 mem: skipping refcount at 2233
9999 mem: storing 1 in location 2024
 106 run: {i: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 2025
 106 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 2025 is 0
9999 mem: location 2024 is 1
9999 mem: storing 0 in location 2026
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 2026 is 0
9998 run: jump-if fell through
 106 run: {c: "character"} <- index {s: ("address" "array" "character"), "lookup": ()}, {i: "number"}
9999 mem: location 2019 is 2233
9999 mem: skipping refcount at 2233
9998 run: base address is 2234
9999 mem: location 2025 is 0
9998 run: address to copy is 2235
9998 run: its type is character
9999 mem: location 2235 is 52
9999 mem: storing 52 in location 2027
 106 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 2018 is 1008
9999 mem: location 2027 is 52
9999 mem: location 2020 is 7
9999 mem: location 2022 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 118 -> 119
9999 mem: storing 1008 in location 2031
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 52 in location 2032
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 2033
9999 mem: storing 1 in location 2034
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 1 in location 2036
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 52
  90 print-character: 52 
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 2039
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 4
9999 mem: storing 1 in location 2040
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 4
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 2041
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 0
9999 mem: storing 1 in location 2040
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 0
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 52
9999 mem: storing 0 in location 2042
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 4
9999 mem: location 2037 is 30
9999 mem: storing 120 in location 2045
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 120
9999 mem: location 2041 is 0
9999 mem: storing 120 in location 2045
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 82 -> 83
9999 mem: storing 1014 in location 2046
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 52
9999 mem: storing 0 in location 2048
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 52
9999 mem: location 2033 is 7
9999 mem: storing 52 in location 2050
9999 mem: storing 7 in location 2051
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 120
9998 run: address to copy to is 1256
9999 mem: location 2050 is 52
9999 mem: location 2051 is 7
9999 mem: storing 52 in location 1256
9999 mem: storing 7 in location 1257
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 0
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 0
9999 mem: storing 1 in location 2041
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 1
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
 106 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 2025 is 0
9999 mem: storing 1 in location 2025
 106 run: jump {: "offset"}
9998 run: jumping to instruction 16
 106 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 2025 is 1
9999 mem: location 2024 is 1
9999 mem: storing 1 in location 2026
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 2026 is 1
9998 run: jumping to instruction 22
 106 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2018 is 1008
9999 abandon: saving in free-list of size 13
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 1008 in location 1739
 105 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1739 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 4
 104 run: {print_10_1: ("address" "array" "character")} <- new {" | ": "literal-string"}
9999 mem: new string alloc: 2236
9999 mem: decrementing refcount of 2193: 2 -> 1
9999 mem: incrementing refcount of 2236: 0 -> 1
9999 mem: storing 2236 in location 1937
 104 run: print_2 {screen: ("address" "screen")}, {print_10_1: ("address" "array" "character")}
9999 mem: location 1931 is 1008
9999 mem: location 1937 is 2236
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 11
9999 mem: allocating size 13
9999 abandon: picking up space from free-list of size 13
9999 mem: new alloc from free list: 2015
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 119 -> 120
9999 mem: storing 1008 in location 2018
 105 run: {s: ("address" "array" "character")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 2236: 1 -> 2
9999 mem: storing 2236 in location 2019
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2020
9999 mem: storing 0 in location 2021
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2021 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2020
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2022
9999 mem: storing 0 in location 2023
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2023 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2022
 105 run: {len: "number"} <- length {s: ("address" "array" "character"), "lookup": ()}
9999 mem: location 2019 is 2236
9999 mem: skipping refcount at 2236
9999 mem: storing 3 in location 2024
 105 run: {i: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 2025
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 2025 is 0
9999 mem: location 2024 is 3
9999 mem: storing 0 in location 2026
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 2026 is 0
9998 run: jump-if fell through
 105 run: {c: "character"} <- index {s: ("address" "array" "character"), "lookup": ()}, {i: "number"}
9999 mem: location 2019 is 2236
9999 mem: skipping refcount at 2236
9998 run: base address is 2237
9999 mem: location 2025 is 0
9998 run: address to copy is 2238
9998 run: its type is character
9999 mem: location 2238 is 32
9999 mem: storing 32 in location 2027
 105 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 2018 is 1008
9999 mem: location 2027 is 32
9999 mem: location 2020 is 7
9999 mem: location 2022 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 120 -> 121
9999 mem: storing 1008 in location 2031
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 2033
9999 mem: storing 1 in location 2034
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 1 in location 2036
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 2039
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 4
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 4
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 2041
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 1
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 1
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 4
9999 mem: location 2037 is 30
9999 mem: storing 120 in location 2045
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 120
9999 mem: location 2041 is 1
9999 mem: storing 121 in location 2045
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 83 -> 84
9999 mem: storing 1014 in location 2046
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 121
9998 run: address to copy to is 1258
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1258
9999 mem: storing 7 in location 1259
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 1
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 1
9999 mem: storing 2 in location 2041
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 2
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 2025 is 0
9999 mem: storing 1 in location 2025
 105 run: jump {: "offset"}
9998 run: jumping to instruction 16
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 2025 is 1
9999 mem: location 2024 is 3
9999 mem: storing 0 in location 2026
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 2026 is 0
9998 run: jump-if fell through
 105 run: {c: "character"} <- index {s: ("address" "array" "character"), "lookup": ()}, {i: "number"}
9999 mem: location 2019 is 2236
9999 mem: skipping refcount at 2236
9998 run: base address is 2237
9999 mem: location 2025 is 1
9998 run: address to copy is 2239
9998 run: its type is character
9999 mem: location 2239 is 124
9999 mem: storing 124 in location 2027
 105 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 2018 is 1008
9999 mem: location 2027 is 124
9999 mem: location 2020 is 7
9999 mem: location 2022 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 121 -> 122
9999 mem: storing 1008 in location 2031
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 124 in location 2032
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 2033
9999 mem: storing 1 in location 2034
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 1 in location 2036
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 124
  90 print-character: 124 
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 2039
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 4
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 4
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 2041
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 2
9999 mem: storing 1 in location 2040
9990 schedule: print/print_2/print-board/run_1001/scenario_making-a-move
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 2
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 124
9999 mem: storing 0 in location 2042
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 4
9999 mem: location 2037 is 30
9999 mem: storing 120 in location 2045
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 120
9999 mem: location 2041 is 2
9999 mem: storing 122 in location 2045
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 84 -> 85
9999 mem: storing 1014 in location 2046
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 124
9999 mem: storing 0 in location 2048
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 124
9999 mem: location 2033 is 7
9999 mem: storing 124 in location 2050
9999 mem: storing 7 in location 2051
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 122
9998 run: address to copy to is 1260
9999 mem: location 2050 is 124
9999 mem: location 2051 is 7
9999 mem: storing 124 in location 1260
9999 mem: storing 7 in location 1261
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 2
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 2
9999 mem: storing 3 in location 2041
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 3
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 2025 is 1
9999 mem: storing 2 in location 2025
 105 run: jump {: "offset"}
9998 run: jumping to instruction 16
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 2025 is 2
9999 mem: location 2024 is 3
9999 mem: storing 0 in location 2026
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 2026 is 0
9998 run: jump-if fell through
 105 run: {c: "character"} <- index {s: ("address" "array" "character"), "lookup": ()}, {i: "number"}
9999 mem: location 2019 is 2236
9999 mem: skipping refcount at 2236
9998 run: base address is 2237
9999 mem: location 2025 is 2
9998 run: address to copy is 2240
9998 run: its type is character
9999 mem: location 2240 is 32
9999 mem: storing 32 in location 2027
 105 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 2018 is 1008
9999 mem: location 2027 is 32
9999 mem: location 2020 is 7
9999 mem: location 2022 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 122 -> 123
9999 mem: storing 1008 in location 2031
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 2033
9999 mem: storing 1 in location 2034
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 1 in location 2036
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 2039
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 4
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 4
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 2041
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 3
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 3
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 4
9999 mem: location 2037 is 30
9999 mem: storing 120 in location 2045
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 120
9999 mem: location 2041 is 3
9999 mem: storing 123 in location 2045
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 85 -> 86
9999 mem: storing 1014 in location 2046
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 123
9998 run: address to copy to is 1262
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1262
9999 mem: storing 7 in location 1263
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 3
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 3
9999 mem: storing 4 in location 2041
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 4
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 2025 is 2
9999 mem: storing 3 in location 2025
 105 run: jump {: "offset"}
9998 run: jumping to instruction 16
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 2025 is 3
9999 mem: location 2024 is 3
9999 mem: storing 1 in location 2026
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 2026 is 1
9998 run: jumping to instruction 22
 105 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2018 is 1008
9999 abandon: saving in free-list of size 13
9999 trace: reply: decrementing callstack depth from 4
 104 run: {col: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1938
 104 run: {done?: "boolean"} <- equal {col: "number"}, {8: "literal"}
9999 mem: location 1938 is 0
9999 mem: storing 0 in location 1935
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1935 is 0
9998 run: jump-if fell through
 104 run: {f: ("address" "array" "character")} <- index {board: ("address" "array" "address" "array" "character"), "lookup": ()}, {col: "number"}
9999 mem: location 1932 is 1826
9999 mem: skipping refcount at 1826
9998 run: base address is 1827
9999 mem: location 1938 is 0
9998 run: address to copy is 1828
9998 run: its type is address
9999 mem: location 1828 is 1836
9999 mem: decrementing refcount of 1906: 4 -> 3
9999 mem: incrementing refcount of 1836: 2 -> 3
9999 mem: storing 1836 in location 1939
 104 run: {c: "character"} <- index {f: ("address" "array" "character"), "lookup": ()}, {row: "number"}
9999 mem: location 1939 is 1836
9999 mem: skipping refcount at 1836
9998 run: base address is 1837
9999 mem: location 1933 is 3
9998 run: address to copy is 1841
9998 run: its type is character
9999 mem: location 1841 is 32
9999 mem: storing 32 in location 1940
 104 run: print {screen: ("address" "screen")}, {c: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1940 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 123 -> 124
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 4
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 4
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 4
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 4
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 4
9999 mem: location 2037 is 30
9999 mem: storing 120 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 120
9999 mem: location 2041 is 4
9999 mem: storing 124 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 86 -> 87
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 124
9998 run: address to copy to is 1264
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1264
9999 mem: storing 7 in location 1265
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 4
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 4
9999 mem: storing 5 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 5
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: print {screen: ("address" "screen")}, {space: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1934 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 124 -> 125
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 4
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 4
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 5
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 5
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 4
9999 mem: location 2037 is 30
9999 mem: storing 120 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 120
9999 mem: location 2041 is 5
9999 mem: storing 125 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 87 -> 88
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 125
9998 run: address to copy to is 1266
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1266
9999 mem: storing 7 in location 1267
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 5
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 5
9999 mem: storing 6 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 6
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {col: "number"} <- add {col: "number"}, {1: "literal"}
9999 mem: location 1938 is 0
9999 mem: storing 1 in location 1938
 104 run: jump {: "offset"}
9998 run: jumping to instruction 14
 104 run: {done?: "boolean"} <- equal {col: "number"}, {8: "literal"}
9999 mem: location 1938 is 1
9999 mem: storing 0 in location 1935
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1935 is 0
9998 run: jump-if fell through
 104 run: {f: ("address" "array" "character")} <- index {board: ("address" "array" "address" "array" "character"), "lookup": ()}, {col: "number"}
9999 mem: location 1932 is 1826
9999 mem: skipping refcount at 1826
9998 run: base address is 1827
9999 mem: location 1938 is 1
9998 run: address to copy is 1829
9998 run: its type is address
9999 mem: location 1829 is 1846
9999 mem: decrementing refcount of 1836: 3 -> 2
9999 mem: incrementing refcount of 1846: 2 -> 3
9999 mem: storing 1846 in location 1939
 104 run: {c: "character"} <- index {f: ("address" "array" "character"), "lookup": ()}, {row: "number"}
9999 mem: location 1939 is 1846
9999 mem: skipping refcount at 1846
9998 run: base address is 1847
9999 mem: location 1933 is 3
9998 run: address to copy is 1851
9998 run: its type is character
9999 mem: location 1851 is 32
9999 mem: storing 32 in location 1940
 104 run: print {screen: ("address" "screen")}, {c: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1940 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 125 -> 126
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 4
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 4
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 6
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 6
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 4
9999 mem: location 2037 is 30
9999 mem: storing 120 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 120
9999 mem: location 2041 is 6
9999 mem: storing 126 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 88 -> 89
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 126
9998 run: address to copy to is 1268
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1268
9999 mem: storing 7 in location 1269
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 6
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 6
9999 mem: storing 7 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 7
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: print {screen: ("address" "screen")}, {space: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1934 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 126 -> 127
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 4
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 4
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 7
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 7
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 4
9999 mem: location 2037 is 30
9999 mem: storing 120 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 120
9999 mem: location 2041 is 7
9999 mem: storing 127 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 89 -> 90
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 127
9998 run: address to copy to is 1270
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1270
9999 mem: storing 7 in location 1271
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 7
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 7
9999 mem: storing 8 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 8
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {col: "number"} <- add {col: "number"}, {1: "literal"}
9999 mem: location 1938 is 1
9999 mem: storing 2 in location 1938
 104 run: jump {: "offset"}
9998 run: jumping to instruction 14
 104 run: {done?: "boolean"} <- equal {col: "number"}, {8: "literal"}
9999 mem: location 1938 is 2
9999 mem: storing 0 in location 1935
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1935 is 0
9998 run: jump-if fell through
 104 run: {f: ("address" "array" "character")} <- index {board: ("address" "array" "address" "array" "character"), "lookup": ()}, {col: "number"}
9999 mem: location 1932 is 1826
9999 mem: skipping refcount at 1826
9998 run: base address is 1827
9999 mem: location 1938 is 2
9998 run: address to copy is 1830
9998 run: its type is address
9999 mem: location 1830 is 1856
9999 mem: decrementing refcount of 1846: 3 -> 2
9999 mem: incrementing refcount of 1856: 2 -> 3
9999 mem: storing 1856 in location 1939
 104 run: {c: "character"} <- index {f: ("address" "array" "character"), "lookup": ()}, {row: "number"}
9999 mem: location 1939 is 1856
9999 mem: skipping refcount at 1856
9998 run: base address is 1857
9999 mem: location 1933 is 3
9998 run: address to copy is 1861
9998 run: its type is character
9999 mem: location 1861 is 32
9999 mem: storing 32 in location 1940
 104 run: print {screen: ("address" "screen")}, {c: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1940 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 127 -> 128
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 4
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 4
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 8
9999 mem: storing 8 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 8
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 8
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 4
9999 mem: location 2037 is 30
9999 mem: storing 120 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 120
9999 mem: location 2041 is 8
9999 mem: storing 128 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 90 -> 91
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 128
9998 run: address to copy to is 1272
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1272
9999 mem: storing 7 in location 1273
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 8
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 8
9999 mem: storing 9 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 9
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 9 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: print {screen: ("address" "screen")}, {space: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1934 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 128 -> 129
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 4
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 4
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 9
9999 mem: storing 9 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 9
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 9
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 4
9999 mem: location 2037 is 30
9999 mem: storing 120 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 120
9999 mem: location 2041 is 9
9999 mem: storing 129 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 91 -> 92
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 129
9998 run: address to copy to is 1274
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1274
9999 mem: storing 7 in location 1275
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 9
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 9
9999 mem: storing 10 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 10
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 10 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {col: "number"} <- add {col: "number"}, {1: "literal"}
9999 mem: location 1938 is 2
9999 mem: storing 3 in location 1938
 104 run: jump {: "offset"}
9998 run: jumping to instruction 14
 104 run: {done?: "boolean"} <- equal {col: "number"}, {8: "literal"}
9999 mem: location 1938 is 3
9999 mem: storing 0 in location 1935
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1935 is 0
9998 run: jump-if fell through
 104 run: {f: ("address" "array" "character")} <- index {board: ("address" "array" "address" "array" "character"), "lookup": ()}, {col: "number"}
9999 mem: location 1932 is 1826
9999 mem: skipping refcount at 1826
9998 run: base address is 1827
9999 mem: location 1938 is 3
9998 run: address to copy is 1831
9998 run: its type is address
9999 mem: location 1831 is 1866
9999 mem: decrementing refcount of 1856: 3 -> 2
9999 mem: incrementing refcount of 1866: 2 -> 3
9999 mem: storing 1866 in location 1939
 104 run: {c: "character"} <- index {f: ("address" "array" "character"), "lookup": ()}, {row: "number"}
9999 mem: location 1939 is 1866
9999 mem: skipping refcount at 1866
9998 run: base address is 1867
9999 mem: location 1933 is 3
9998 run: address to copy is 1871
9998 run: its type is character
9999 mem: location 1871 is 32
9999 mem: storing 32 in location 1940
 104 run: print {screen: ("address" "screen")}, {c: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1940 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 129 -> 130
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 4
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 4
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
9990 schedule: print/print-board/run_1001/scenario_making-a-move
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 10
9999 mem: storing 10 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 10
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 10
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 4
9999 mem: location 2037 is 30
9999 mem: storing 120 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 120
9999 mem: location 2041 is 10
9999 mem: storing 130 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 92 -> 93
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 130
9998 run: address to copy to is 1276
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1276
9999 mem: storing 7 in location 1277
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 10
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 10
9999 mem: storing 11 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 11
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 11 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: print {screen: ("address" "screen")}, {space: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1934 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 130 -> 131
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 4
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 4
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 11
9999 mem: storing 11 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 11
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 11
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 4
9999 mem: location 2037 is 30
9999 mem: storing 120 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 120
9999 mem: location 2041 is 11
9999 mem: storing 131 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 93 -> 94
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 131
9998 run: address to copy to is 1278
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1278
9999 mem: storing 7 in location 1279
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 11
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 11
9999 mem: storing 12 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 12
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 12 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {col: "number"} <- add {col: "number"}, {1: "literal"}
9999 mem: location 1938 is 3
9999 mem: storing 4 in location 1938
 104 run: jump {: "offset"}
9998 run: jumping to instruction 14
 104 run: {done?: "boolean"} <- equal {col: "number"}, {8: "literal"}
9999 mem: location 1938 is 4
9999 mem: storing 0 in location 1935
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1935 is 0
9998 run: jump-if fell through
 104 run: {f: ("address" "array" "character")} <- index {board: ("address" "array" "address" "array" "character"), "lookup": ()}, {col: "number"}
9999 mem: location 1932 is 1826
9999 mem: skipping refcount at 1826
9998 run: base address is 1827
9999 mem: location 1938 is 4
9998 run: address to copy is 1832
9998 run: its type is address
9999 mem: location 1832 is 1876
9999 mem: decrementing refcount of 1866: 3 -> 2
9999 mem: incrementing refcount of 1876: 2 -> 3
9999 mem: storing 1876 in location 1939
 104 run: {c: "character"} <- index {f: ("address" "array" "character"), "lookup": ()}, {row: "number"}
9999 mem: location 1939 is 1876
9999 mem: skipping refcount at 1876
9998 run: base address is 1877
9999 mem: location 1933 is 3
9998 run: address to copy is 1881
9998 run: its type is character
9999 mem: location 1881 is 32
9999 mem: storing 32 in location 1940
 104 run: print {screen: ("address" "screen")}, {c: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1940 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 131 -> 132
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 4
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 4
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 12
9999 mem: storing 12 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 12
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 4
9999 mem: location 2037 is 30
9999 mem: storing 120 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 120
9999 mem: location 2041 is 12
9999 mem: storing 132 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 94 -> 95
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 132
9998 run: address to copy to is 1280
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1280
9999 mem: storing 7 in location 1281
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 12
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 12
9999 mem: storing 13 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 13
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 13 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: print {screen: ("address" "screen")}, {space: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1934 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 132 -> 133
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 4
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 4
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 13
9999 mem: storing 13 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 13
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 13
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 4
9999 mem: location 2037 is 30
9999 mem: storing 120 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 120
9999 mem: location 2041 is 13
9999 mem: storing 133 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 95 -> 96
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 133
9998 run: address to copy to is 1282
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1282
9999 mem: storing 7 in location 1283
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 13
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 13
9999 mem: storing 14 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 14
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 14 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {col: "number"} <- add {col: "number"}, {1: "literal"}
9999 mem: location 1938 is 4
9999 mem: storing 5 in location 1938
 104 run: jump {: "offset"}
9998 run: jumping to instruction 14
 104 run: {done?: "boolean"} <- equal {col: "number"}, {8: "literal"}
9999 mem: location 1938 is 5
9999 mem: storing 0 in location 1935
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1935 is 0
9998 run: jump-if fell through
 104 run: {f: ("address" "array" "character")} <- index {board: ("address" "array" "address" "array" "character"), "lookup": ()}, {col: "number"}
9999 mem: location 1932 is 1826
9999 mem: skipping refcount at 1826
9998 run: base address is 1827
9999 mem: location 1938 is 5
9998 run: address to copy is 1833
9998 run: its type is address
9999 mem: location 1833 is 1886
9999 mem: decrementing refcount of 1876: 3 -> 2
9999 mem: incrementing refcount of 1886: 2 -> 3
9999 mem: storing 1886 in location 1939
 104 run: {c: "character"} <- index {f: ("address" "array" "character"), "lookup": ()}, {row: "number"}
9999 mem: location 1939 is 1886
9999 mem: skipping refcount at 1886
9998 run: base address is 1887
9999 mem: location 1933 is 3
9998 run: address to copy is 1891
9998 run: its type is character
9999 mem: location 1891 is 32
9999 mem: storing 32 in location 1940
 104 run: print {screen: ("address" "screen")}, {c: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1940 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 133 -> 134
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 4
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 4
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 14
9999 mem: storing 14 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 14
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 14
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 4
9999 mem: location 2037 is 30
9999 mem: storing 120 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 120
9999 mem: location 2041 is 14
9999 mem: storing 134 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 96 -> 97
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 134
9998 run: address to copy to is 1284
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1284
9999 mem: storing 7 in location 1285
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 14
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 14
9999 mem: storing 15 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 15
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 15 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: print {screen: ("address" "screen")}, {space: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1934 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 134 -> 135
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 4
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 4
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 15
9999 mem: storing 15 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 15
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 15
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 4
9999 mem: location 2037 is 30
9999 mem: storing 120 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 120
9999 mem: location 2041 is 15
9999 mem: storing 135 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 97 -> 98
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 135
9998 run: address to copy to is 1286
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1286
9999 mem: storing 7 in location 1287
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 15
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 15
9999 mem: storing 16 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 16
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 16 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {col: "number"} <- add {col: "number"}, {1: "literal"}
9999 mem: location 1938 is 5
9999 mem: storing 6 in location 1938
 104 run: jump {: "offset"}
9998 run: jumping to instruction 14
 104 run: {done?: "boolean"} <- equal {col: "number"}, {8: "literal"}
9999 mem: location 1938 is 6
9999 mem: storing 0 in location 1935
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1935 is 0
9998 run: jump-if fell through
 104 run: {f: ("address" "array" "character")} <- index {board: ("address" "array" "address" "array" "character"), "lookup": ()}, {col: "number"}
9999 mem: location 1932 is 1826
9999 mem: skipping refcount at 1826
9998 run: base address is 1827
9999 mem: location 1938 is 6
9998 run: address to copy is 1834
9998 run: its type is address
9999 mem: location 1834 is 1896
9999 mem: decrementing refcount of 1886: 3 -> 2
9999 mem: incrementing refcount of 1896: 4 -> 5
9999 mem: storing 1896 in location 1939
 104 run: {c: "character"} <- index {f: ("address" "array" "character"), "lookup": ()}, {row: "number"}
9999 mem: location 1939 is 1896
9999 mem: skipping refcount at 1896
9998 run: base address is 1897
9999 mem: location 1933 is 3
9998 run: address to copy is 1901
9998 run: its type is character
9999 mem: location 1901 is 80
9999 mem: storing 80 in location 1940
 104 run: print {screen: ("address" "screen")}, {c: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1940 is 80
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 135 -> 136
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 80 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 80
  90 print-character: 80 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 4
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 4
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 16
9999 mem: storing 16 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 16
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 16
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 80
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 4
9999 mem: location 2037 is 30
9999 mem: storing 120 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 120
9999 mem: location 2041 is 16
9999 mem: storing 136 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 98 -> 99
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 80
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 80
9999 mem: location 2033 is 7
9999 mem: storing 80 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 136
9998 run: address to copy to is 1288
9999 mem: location 2050 is 80
9999 mem: location 2051 is 7
9999 mem: storing 80 in location 1288
9999 mem: storing 7 in location 1289
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 16
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 16
9999 mem: storing 17 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 17
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 17 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: print {screen: ("address" "screen")}, {space: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1934 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 136 -> 137
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 4
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 4
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 17
9999 mem: storing 17 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 17
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 17
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 4
9999 mem: location 2037 is 30
9999 mem: storing 120 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 120
9999 mem: location 2041 is 17
9999 mem: storing 137 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 99 -> 100
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 137
9998 run: address to copy to is 1290
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1290
9999 mem: storing 7 in location 1291
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 17
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 17
9999 mem: storing 18 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 18
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 18 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {col: "number"} <- add {col: "number"}, {1: "literal"}
9999 mem: location 1938 is 6
9999 mem: storing 7 in location 1938
 104 run: jump {: "offset"}
9998 run: jumping to instruction 14
 104 run: {done?: "boolean"} <- equal {col: "number"}, {8: "literal"}
9999 mem: location 1938 is 7
9999 mem: storing 0 in location 1935
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1935 is 0
9998 run: jump-if fell through
 104 run: {f: ("address" "array" "character")} <- index {board: ("address" "array" "address" "array" "character"), "lookup": ()}, {col: "number"}
9999 mem: location 1932 is 1826
9999 mem: skipping refcount at 1826
9998 run: base address is 1827
9999 mem: location 1938 is 7
9998 run: address to copy is 1835
9998 run: its type is address
9999 mem: location 1835 is 1906
9999 mem: decrementing refcount of 1896: 5 -> 4
9999 mem: incrementing refcount of 1906: 3 -> 4
9999 mem: storing 1906 in location 1939
 104 run: {c: "character"} <- index {f: ("address" "array" "character"), "lookup": ()}, {row: "number"}
9999 mem: location 1939 is 1906
9999 mem: skipping refcount at 1906
9998 run: base address is 1907
9999 mem: location 1933 is 3
9998 run: address to copy is 1911
9998 run: its type is character
9999 mem: location 1911 is 32
9999 mem: storing 32 in location 1940
 104 run: print {screen: ("address" "screen")}, {c: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1940 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 137 -> 138
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 4
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 4
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 18
9999 mem: storing 18 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 18
9999 mem: storing 1 in location 2040
9990 schedule: print/print-board/run_1001/scenario_making-a-move
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 18
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 4
9999 mem: location 2037 is 30
9999 mem: storing 120 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 120
9999 mem: location 2041 is 18
9999 mem: storing 138 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 100 -> 101
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 138
9998 run: address to copy to is 1292
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1292
9999 mem: storing 7 in location 1293
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 18
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 18
9999 mem: storing 19 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 19
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 19 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: print {screen: ("address" "screen")}, {space: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1934 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 138 -> 139
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 4
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 4
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 19
9999 mem: storing 19 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 19
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 19
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 4
9999 mem: location 2037 is 30
9999 mem: storing 120 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 120
9999 mem: location 2041 is 19
9999 mem: storing 139 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 101 -> 102
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 139
9998 run: address to copy to is 1294
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1294
9999 mem: storing 7 in location 1295
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 19
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 19
9999 mem: storing 20 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 20
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 20 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {col: "number"} <- add {col: "number"}, {1: "literal"}
9999 mem: location 1938 is 7
9999 mem: storing 8 in location 1938
 104 run: jump {: "offset"}
9998 run: jumping to instruction 14
 104 run: {done?: "boolean"} <- equal {col: "number"}, {8: "literal"}
9999 mem: location 1938 is 8
9999 mem: storing 1 in location 1935
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1935 is 1
9998 run: jumping to instruction 22
 104 run: {row: "number"} <- subtract {row: "number"}, {1: "literal"}
9999 mem: location 1933 is 3
9999 mem: storing 2 in location 1933
 104 run: cursor-to-next-line {screen: ("address" "screen")}
9999 mem: location 1931 is 1008
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 2
9999 mem: allocating size 4
9999 abandon: picking up space from free-list of size 4
9999 mem: new alloc from free list: 2059
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 139 -> 140
9999 mem: storing 1008 in location 2062
 105 run: {screen: ("address" "screen")} <- cursor-down {screen: ("address" "screen")}
9999 mem: location 2062 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 140 -> 141
9999 mem: storing 1008 in location 1003
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1004
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1005
 106 run: {max: "number"} <- subtract {height: "number"}, {1: "literal"}
9999 mem: location 1004 is 12
9999 mem: storing 11 in location 1006
 106 run: {at-bottom?: "boolean"} <- greater-or-equal {row: "number"}, {max: "number"}
9999 mem: location 1005 is 4
9999 mem: location 1006 is 11
9999 mem: storing 0 in location 1007
 106 run: jump-if {at-bottom?: "boolean"}, {: "offset"}
9999 mem: location 1007 is 0
9998 run: jump-if fell through
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1005 is 4
9999 mem: storing 5 in location 1005
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {row: "number"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 4
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 1005 is 5
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 5 in location 1011
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 1008 in location 2062
 105 run: {screen: ("address" "screen")} <- cursor-to-start-of-line {screen: ("address" "screen")}
9999 mem: location 2062 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1961
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 141 -> 142
9999 mem: storing 1008 in location 1964
 106 run: {row: "number"} <- cursor-position {screen: ("address" "screen")}
9999 mem: location 1964 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 2063
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 142 -> 143
9999 mem: storing 1008 in location 2066
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2066 is 1008
9998 run: jump-unless fell through
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2066 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 2066 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 2067
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2066 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 2066 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 20
9999 mem: storing 20 in location 2068
 107 run: return {row: "number"}, {column: "number"}
9999 mem: location 2067 is 5
9999 mem: location 2068 is 20
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1965
 106 run: {column: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1966
 106 run: {screen: ("address" "screen")} <- move-cursor {screen: ("address" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1964 is 1008
9999 mem: location 1965 is 5
9999 mem: location 1966 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 2063
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 143 -> 144
9999 mem: storing 1008 in location 2066
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 2067
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 2068
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2066 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 2066 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 2067 is 5
9999 mem: location 2066 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 5 in location 1011
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 2066 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 2068 is 0
9999 mem: location 2066 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2066 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 1008 in location 1964
 106 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1964 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 1008 in location 2062
 105 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2062 is 1008
9999 abandon: saving in free-list of size 4
9999 trace: reply: decrementing callstack depth from 4
 104 run: jump {: "offset"}
9998 run: jumping to instruction 6
 104 run: {done?: "boolean"} <- lesser-than {row: "number"}, {0: "literal"}
9999 mem: location 1933 is 2
9999 mem: storing 0 in location 1935
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1935 is 0
9998 run: jump-if fell through
 104 run: {rank: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1933 is 2
9999 mem: storing 3 in location 1936
 104 run: print-integer {screen: ("address" "screen")}, {rank: "number"}
9999 mem: location 1931 is 1008
9999 mem: location 1936 is 3
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1736
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 144 -> 145
9999 mem: storing 1008 in location 1739
 105 run: {n: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1740
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1741
9999 mem: storing 0 in location 1742
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1742 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1741
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1743
9999 mem: storing 0 in location 1744
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1744 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1743
 105 run: {s: ("address" "array" "character")} <- to-text_3 {n: "number"}
9999 mem: location 1740 is 3
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 16
9999 mem: allocating size 18
9999 abandon: picking up space from free-list of size 18
9999 mem: new alloc from free list: 1943
 106 run: {n: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1946
 106 run: jump-if {n: "number"}, {: "offset"}
9999 mem: location 1946 is 3
9998 run: jumping to instruction 6
 106 run: {negate-result: "boolean"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1948
 106 run: {negative?: "boolean"} <- lesser-than {n: "number"}, {0: "literal"}
9999 mem: location 1946 is 3
9999 mem: storing 0 in location 1949
 106 run: jump-unless {negative?: "boolean"}, {: "offset"}
9999 mem: location 1949 is 0
9998 run: jumping to instruction 13
 106 run: {tmp: ("address" "buffer")} <- new-buffer {30: "literal"}
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1961
 107 run: {capacity: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 30 in location 1964
 107 run: {result: ("address" "buffer")} <- new {buffer: "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 2241
9999 mem: storing 0 in location 2241
9999 mem: storing 0 in location 2242
9999 mem: storing 0 in location 2243
9999 mem: incrementing refcount of 2241: 0 -> 1
9999 mem: storing 2241 in location 1965
 107 run: {result: ("address" "buffer"), "lookup": ()} <- put {result: ("address" "buffer"), "lookup": ()}, {length: "offset"}, {0: "literal"}
9999 mem: location 1965 is 2241
9999 mem: skipping refcount at 2241
9999 mem: location 2242 is 0
9999 mem: location 2243 is 0
9999 mem: location 1965 is 2241
9999 mem: skipping refcount at 2241
9998 run: address to copy to is 2242
9999 mem: storing 0 in location 2242
 107 run: {data: ("address" "array" "character")} <- new {character: "type"}, {capacity: "number"}
9999 mem: location 1964 is 30
9999 mem: array size is 30
9999 mem: allocating size 32
9999 mem: new alloc: 2244
9999 mem: storing 0 in location 2244
9999 mem: storing 0 in location 2245
9999 mem: storing 0 in location 2246
9999 mem: storing 0 in location 2247
9999 mem: storing 0 in location 2248
9999 mem: storing 0 in location 2249
9999 mem: storing 0 in location 2250
9999 mem: storing 0 in location 2251
9999 mem: storing 0 in location 2252
9999 mem: storing 0 in location 2253
9999 mem: storing 0 in location 2254
9999 mem: storing 0 in location 2255
9999 mem: storing 0 in location 2256
9999 mem: storing 0 in location 2257
9999 mem: storing 0 in location 2258
9999 mem: storing 0 in location 2259
9999 mem: storing 0 in location 2260
9999 mem: storing 0 in location 2261
9999 mem: storing 0 in location 2262
9999 mem: storing 0 in location 2263
9999 mem: storing 0 in location 2264
9999 mem: storing 0 in location 2265
9999 mem: storing 0 in location 2266
9999 mem: storing 0 in location 2267
9999 mem: storing 0 in location 2268
9999 mem: storing 0 in location 2269
9999 mem: storing 0 in location 2270
9999 mem: storing 0 in location 2271
9999 mem: storing 0 in location 2272
9999 mem: storing 0 in location 2273
9999 mem: storing 0 in location 2274
9999 mem: storing 0 in location 2275
9999 mem: storing 30 in location 2245
9999 mem: incrementing refcount of 2244: 0 -> 1
9999 mem: storing 2244 in location 1966
 107 run: {result: ("address" "buffer"), "lookup": ()} <- put {result: ("address" "buffer"), "lookup": ()}, {data: "offset"}, {data: ("address" "array" "character")}
9999 mem: location 1965 is 2241
9999 mem: skipping refcount at 2241
9999 mem: location 2242 is 0
9999 mem: location 2243 is 0
9999 mem: location 1966 is 2244
9999 mem: location 1965 is 2241
9999 mem: skipping refcount at 2241
9998 run: address to copy to is 2243
9999 mem: incrementing refcount of 2244: 1 -> 2
9999 mem: storing 2244 in location 2243
 107 run: return {result: ("address" "buffer")}
9999 mem: location 1965 is 2241
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 2241
9999 mem: incrementing refcount of 2241: 1 -> 2
9999 mem: storing 2241 in location 1950
 106 run: {digit-base: "number"} <- copy {48: "literal"}
9999 mem: storing 48 in location 1951
 106 run: {done?: "boolean"} <- equal {n: "number"}, {0: "literal"}
9999 mem: location 1946 is 3
9999 mem: storing 0 in location 1952
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1952 is 0
9998 run: jump-if fell through
 106 run: {n: "number"}, {digit: "number"} <- divide-with-remainder {n: "number"}, {10: "literal"}
9999 mem: location 1946 is 3
9999 mem: storing 0 in location 1946
9999 mem: storing 3 in location 1953
 106 run: {c: "character"} <- add {digit-base: "number"}, {digit: "number"}
9999 mem: location 1951 is 48
9999 mem: location 1953 is 3
9999 mem: storing 51 in location 1954
 106 run: {tmp: ("address" "buffer")} <- append_2 {tmp: ("address" "buffer")}, {c: "character"}
9999 mem: location 1950 is 2241
9999 mem: location 1954 is 51
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 2002
 107 run: {in: ("address" "buffer")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 2241: 2 -> 3
9999 mem: storing 2241 in location 2005
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 51 in location 2006
 107 run: {len: "number"} <- get {in: ("address" "buffer"), "lookup": ()}, {length: "offset"}
9999 mem: location 2005 is 2241
9999 mem: skipping refcount at 2241
9999 mem: location 2242 is 0
9999 mem: location 2243 is 2244
9999 mem: location 2005 is 2241
9999 mem: skipping refcount at 2241
9998 run: address to copy is 2242
9998 run: its type is "number"
9999 mem: location 2242 is 0
9999 mem: storing 0 in location 2007
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal", "backspace": ()}
9999 mem: location 2006 is 51
9999 mem: storing 0 in location 2008
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2008 is 0
9998 run: jumping to instruction 15
 107 run: {full?: "boolean"} <- buffer-full? {in: ("address" "buffer")}
9999 mem: location 2005 is 2241
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 108 run: {in: ("address" "buffer")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 2241: 3 -> 4
9999 mem: storing 2241 in location 1003
 108 run: {len: "number"} <- get {in: ("address" "buffer"), "lookup": ()}, {length: "offset"}
9999 mem: location 1003 is 2241
9999 mem: skipping refcount at 2241
9999 mem: location 2242 is 0
9999 mem: location 2243 is 2244
9999 mem: location 1003 is 2241
9999 mem: skipping refcount at 2241
9998 run: address to copy is 2242
9998 run: its type is "number"
9999 mem: location 2242 is 0
9999 mem: storing 0 in location 1004
 108 run: {s: ("address" "array" "character")} <- get {in: ("address" "buffer"), "lookup": ()}, {data: "offset"}
9999 mem: location 1003 is 2241
9999 mem: skipping refcount at 2241
9999 mem: location 2242 is 0
9999 mem: location 2243 is 2244
9999 mem: location 1003 is 2241
9999 mem: skipping refcount at 2241
9998 run: address to copy is 2243
9998 run: its type is ("address" "array" "character")
9999 mem: location 2243 is 2244
9999 mem: incrementing refcount of 2244: 2 -> 3
9999 mem: storing 2244 in location 1005
 108 run: {capacity: "number"} <- length {s: ("address" "array" "character"), "lookup": ()}
9999 mem: location 1005 is 2244
9999 mem: skipping refcount at 2244
9999 mem: storing 30 in location 1006
 108 run: {result: "boolean"} <- greater-or-equal {len: "number"}, {capacity: "number"}
9999 mem: location 1004 is 0
9999 mem: location 1006 is 30
9999 mem: storing 0 in location 1007
 108 run: reply {result: "boolean"}
9999 mem: location 1007 is 0
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 0
9999 mem: storing 0 in location 2010
 107 run: jump-unless {full?: "boolean"}, {: "offset"}
9999 mem: location 2010 is 0
9998 run: jumping to instruction 20
 107 run: {s: ("address" "array" "character")} <- get {in: ("address" "buffer"), "lookup": ()}, {data: "offset"}
9999 mem: location 2005 is 2241
9999 mem: skipping refcount at 2241
9999 mem: location 2242 is 0
9999 mem: location 2243 is 2244
9999 mem: location 2005 is 2241
9999 mem: skipping refcount at 2241
9998 run: address to copy is 2243
9998 run: its type is ("address" "array" "character")
9999 mem: location 2243 is 2244
9999 mem: incrementing refcount of 2244: 3 -> 4
9999 mem: storing 2244 in location 2011
 107 run: {s: ("address" "array" "character"), "lookup": ()} <- put-index {s: ("address" "array" "character"), "lookup": ()}, {len: "number"}, {c: "character"}
9999 mem: location 2011 is 2244
9999 mem: skipping refcount at 2244
9999 mem: location 2007 is 0
9998 run: address to copy to is 2246
9999 mem: location 2006 is 51
9999 mem: storing 51 in location 2246
 107 run: {len: "number"} <- add {len: "number"}, {1: "literal"}
9999 mem: location 2007 is 0
9999 mem: storing 1 in location 2007
 107 run: {in: ("address" "buffer"), "lookup": ()} <- put {in: ("address" "buffer"), "lookup": ()}, {length: "offset"}, {len: "number"}
9999 mem: location 2005 is 2241
9999 mem: skipping refcount at 2241
9999 mem: location 2242 is 0
9999 mem: location 2243 is 2244
9999 mem: location 2007 is 1
9999 mem: location 2005 is 2241
9999 mem: skipping refcount at 2241
9998 run: address to copy to is 2242
9999 mem: storing 1 in location 2242
 107 run: reply {in: ("address" "buffer"), "same-as-ingredient": "0"}
9999 mem: location 2005 is 2241
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 2241
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 2241 in location 1950
 106 run: jump {: "offset"}
9998 run: jumping to instruction 17
 106 run: {done?: "boolean"} <- equal {n: "number"}, {0: "literal"}
9999 mem: location 1946 is 0
9999 mem: storing 1 in location 1952
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1952 is 1
9998 run: jumping to instruction 23
 106 run: jump-unless {negate-result: "boolean"}, {: "offset"}
9999 mem: location 1948 is 0
9998 run: jumping to instruction 28
 106 run: {len: "number"} <- get {tmp: ("address" "buffer"), "lookup": ()}, {length: "offset"}
9999 mem: location 1950 is 2241
9999 mem: skipping refcount at 2241
9999 mem: location 2242 is 1
9999 mem: location 2243 is 2244
9999 mem: location 1950 is 2241
9999 mem: skipping refcount at 2241
9998 run: address to copy is 2242
9998 run: its type is "number"
9999 mem: location 2242 is 1
9999 mem: storing 1 in location 1956
 106 run: {buf: ("address" "array" "character")} <- get {tmp: ("address" "buffer"), "lookup": ()}, {data: "offset"}
9999 mem: location 1950 is 2241
9999 mem: skipping refcount at 2241
9999 mem: location 2242 is 1
9999 mem: location 2243 is 2244
9999 mem: location 1950 is 2241
9999 mem: skipping refcount at 2241
9998 run: address to copy is 2243
9998 run: its type is ("address" "array" "character")
9999 mem: location 2243 is 2244
9999 mem: incrementing refcount of 2244: 4 -> 5
9999 mem: storing 2244 in location 1957
 106 run: {result: ("address" "array" "character")} <- new {character: "type"}, {len: "number"}
9999 mem: location 1956 is 1
9999 mem: array size is 1
9999 mem: allocating size 3
9999 mem: new alloc: 2276
9999 mem: storing 0 in location 2276
9999 mem: storing 0 in location 2277
9999 mem: storing 0 in location 2278
9999 mem: storing 1 in location 2277
9999 mem: incrementing refcount of 2276: 0 -> 1
9999 mem: storing 2276 in location 1947
 106 run: {i: "number"} <- subtract {len: "number"}, {1: "literal"}
9999 mem: location 1956 is 1
9999 mem: storing 0 in location 1958
 106 run: {j: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1959
 106 run: {done?: "boolean"} <- lesser-than {i: "number"}, {0: "literal"}
9999 mem: location 1958 is 0
9999 mem: storing 0 in location 1952
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1952 is 0
9998 run: jump-if fell through
 106 run: {src: "character"} <- index {buf: ("address" "array" "character"), "lookup": ()}, {i: "number"}
9999 mem: location 1957 is 2244
9999 mem: skipping refcount at 2244
9998 run: base address is 2245
9999 mem: location 1958 is 0
9998 run: address to copy is 2246
9998 run: its type is character
9999 mem: location 2246 is 51
9999 mem: storing 51 in location 1960
 106 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {j: "number"}, {src: "character"}
9999 mem: location 1947 is 2276
9999 mem: skipping refcount at 2276
9999 mem: location 1959 is 0
9998 run: address to copy to is 2278
9999 mem: location 1960 is 51
9999 mem: storing 51 in location 2278
 106 run: {i: "number"} <- subtract {i: "number"}, {1: "literal"}
9999 mem: location 1958 is 0
9999 mem: storing -1 in location 1958
 106 run: {j: "number"} <- add {j: "number"}, {1: "literal"}
9999 mem: location 1959 is 0
9999 mem: storing 1 in location 1959
 106 run: jump {: "offset"}
9998 run: jumping to instruction 35
 106 run: {done?: "boolean"} <- lesser-than {i: "number"}, {0: "literal"}
9999 mem: location 1958 is -1
9999 mem: storing 1 in location 1952
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1952 is 1
9998 run: jumping to instruction 42
 106 run: reply {result: ("address" "array" "character")}
9999 mem: location 1947 is 2276
9999 abandon: saving in free-list of size 18
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 2276
9999 mem: incrementing refcount of 2276: 1 -> 2
9999 mem: storing 2276 in location 1745
 105 run: {screen: ("address" "screen")} <- print_2 {screen: ("address" "screen")}, {s: ("address" "array" "character")}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1739 is 1008
9999 mem: location 1745 is 2276
9999 mem: location 1741 is 7
9999 mem: location 1743 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 11
9999 mem: allocating size 13
9999 abandon: picking up space from free-list of size 13
9999 mem: new alloc from free list: 2015
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 145 -> 146
9999 mem: storing 1008 in location 2018
 106 run: {s: ("address" "array" "character")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 2276: 2 -> 3
9999 mem: storing 2276 in location 2019
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 2020
9999 mem: storing 1 in location 2021
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2021 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2022
9999 mem: storing 1 in location 2023
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2023 is 1
9998 run: jumping to instruction 12
 106 run: {len: "number"} <- length {s: ("address" "array" "character"), "lookup": ()}
9999 mem: location 2019 is 2276
9999 mem: skipping refcount at 2276
9999 mem: storing 1 in location 2024
 106 run: {i: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 2025
 106 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 2025 is 0
9999 mem: location 2024 is 1
9999 mem: storing 0 in location 2026
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 2026 is 0
9998 run: jump-if fell through
 106 run: {c: "character"} <- index {s: ("address" "array" "character"), "lookup": ()}, {i: "number"}
9999 mem: location 2019 is 2276
9999 mem: skipping refcount at 2276
9998 run: base address is 2277
9999 mem: location 2025 is 0
9998 run: address to copy is 2278
9998 run: its type is character
9999 mem: location 2278 is 51
9999 mem: storing 51 in location 2027
 106 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 2018 is 1008
9999 mem: location 2027 is 51
9999 mem: location 2020 is 7
9999 mem: location 2022 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 146 -> 147
9999 mem: storing 1008 in location 2031
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 51 in location 2032
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 2033
9999 mem: storing 1 in location 2034
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 1 in location 2036
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 51
  90 print-character: 51 
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 2039
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 5
9999 mem: storing 1 in location 2040
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 5
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 2041
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 0
9999 mem: storing 1 in location 2040
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 0
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 51
9999 mem: storing 0 in location 2042
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 5
9999 mem: location 2037 is 30
9999 mem: storing 150 in location 2045
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 150
9999 mem: location 2041 is 0
9999 mem: storing 150 in location 2045
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 102 -> 103
9999 mem: storing 1014 in location 2046
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 51
9999 mem: storing 0 in location 2048
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 51
9999 mem: location 2033 is 7
9999 mem: storing 51 in location 2050
9999 mem: storing 7 in location 2051
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 150
9998 run: address to copy to is 1316
9999 mem: location 2050 is 51
9999 mem: location 2051 is 7
9999 mem: storing 51 in location 1316
9999 mem: storing 7 in location 1317
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 0
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 0
9999 mem: storing 1 in location 2041
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 1
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
 106 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 2025 is 0
9999 mem: storing 1 in location 2025
 106 run: jump {: "offset"}
9998 run: jumping to instruction 16
 106 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 2025 is 1
9999 mem: location 2024 is 1
9999 mem: storing 1 in location 2026
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 2026 is 1
9998 run: jumping to instruction 22
 106 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2018 is 1008
9999 abandon: saving in free-list of size 13
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 1008 in location 1739
 105 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1739 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 4
 104 run: {print_10_1: ("address" "array" "character")} <- new {" | ": "literal-string"}
9999 mem: new string alloc: 2279
9999 mem: decrementing refcount of 2236: 2 -> 1
9999 mem: incrementing refcount of 2279: 0 -> 1
9999 mem: storing 2279 in location 1937
 104 run: print_2 {screen: ("address" "screen")}, {print_10_1: ("address" "array" "character")}
9999 mem: location 1931 is 1008
9999 mem: location 1937 is 2279
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 11
9999 mem: allocating size 13
9999 abandon: picking up space from free-list of size 13
9999 mem: new alloc from free list: 2015
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 147 -> 148
9999 mem: storing 1008 in location 2018
 105 run: {s: ("address" "array" "character")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 2279: 1 -> 2
9999 mem: storing 2279 in location 2019
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2020
9999 mem: storing 0 in location 2021
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2021 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2020
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2022
9999 mem: storing 0 in location 2023
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2023 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2022
 105 run: {len: "number"} <- length {s: ("address" "array" "character"), "lookup": ()}
9999 mem: location 2019 is 2279
9999 mem: skipping refcount at 2279
9999 mem: storing 3 in location 2024
 105 run: {i: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 2025
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 2025 is 0
9999 mem: location 2024 is 3
9999 mem: storing 0 in location 2026
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 2026 is 0
9998 run: jump-if fell through
 105 run: {c: "character"} <- index {s: ("address" "array" "character"), "lookup": ()}, {i: "number"}
9999 mem: location 2019 is 2279
9999 mem: skipping refcount at 2279
9998 run: base address is 2280
9999 mem: location 2025 is 0
9998 run: address to copy is 2281
9998 run: its type is character
9999 mem: location 2281 is 32
9999 mem: storing 32 in location 2027
 105 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 2018 is 1008
9999 mem: location 2027 is 32
9999 mem: location 2020 is 7
9999 mem: location 2022 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 148 -> 149
9999 mem: storing 1008 in location 2031
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 2033
9999 mem: storing 1 in location 2034
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 1 in location 2036
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 2039
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 5
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 5
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 2041
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 1
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 1
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 5
9999 mem: location 2037 is 30
9999 mem: storing 150 in location 2045
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 150
9999 mem: location 2041 is 1
9999 mem: storing 151 in location 2045
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 103 -> 104
9999 mem: storing 1014 in location 2046
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 151
9998 run: address to copy to is 1318
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1318
9999 mem: storing 7 in location 1319
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 1
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 1
9999 mem: storing 2 in location 2041
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 2
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 2025 is 0
9999 mem: storing 1 in location 2025
 105 run: jump {: "offset"}
9998 run: jumping to instruction 16
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 2025 is 1
9999 mem: location 2024 is 3
9999 mem: storing 0 in location 2026
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 2026 is 0
9998 run: jump-if fell through
 105 run: {c: "character"} <- index {s: ("address" "array" "character"), "lookup": ()}, {i: "number"}
9999 mem: location 2019 is 2279
9999 mem: skipping refcount at 2279
9998 run: base address is 2280
9999 mem: location 2025 is 1
9998 run: address to copy is 2282
9998 run: its type is character
9999 mem: location 2282 is 124
9999 mem: storing 124 in location 2027
 105 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 2018 is 1008
9999 mem: location 2027 is 124
9999 mem: location 2020 is 7
9999 mem: location 2022 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 149 -> 150
9999 mem: storing 1008 in location 2031
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 124 in location 2032
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 2033
9999 mem: storing 1 in location 2034
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 1 in location 2036
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 124
  90 print-character: 124 
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 2039
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 5
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 5
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 2041
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 2
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 2
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 124
9999 mem: storing 0 in location 2042
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 5
9999 mem: location 2037 is 30
9999 mem: storing 150 in location 2045
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 150
9999 mem: location 2041 is 2
9999 mem: storing 152 in location 2045
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 104 -> 105
9999 mem: storing 1014 in location 2046
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 124
9999 mem: storing 0 in location 2048
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 124
9999 mem: location 2033 is 7
9999 mem: storing 124 in location 2050
9999 mem: storing 7 in location 2051
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 152
9998 run: address to copy to is 1320
9999 mem: location 2050 is 124
9999 mem: location 2051 is 7
9999 mem: storing 124 in location 1320
9999 mem: storing 7 in location 1321
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 2
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 2
9999 mem: storing 3 in location 2041
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 3
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 2025 is 1
9999 mem: storing 2 in location 2025
 105 run: jump {: "offset"}
9998 run: jumping to instruction 16
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 2025 is 2
9999 mem: location 2024 is 3
9999 mem: storing 0 in location 2026
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 2026 is 0
9998 run: jump-if fell through
 105 run: {c: "character"} <- index {s: ("address" "array" "character"), "lookup": ()}, {i: "number"}
9999 mem: location 2019 is 2279
9999 mem: skipping refcount at 2279
9998 run: base address is 2280
9999 mem: location 2025 is 2
9998 run: address to copy is 2283
9998 run: its type is character
9999 mem: location 2283 is 32
9999 mem: storing 32 in location 2027
 105 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 2018 is 1008
9999 mem: location 2027 is 32
9999 mem: location 2020 is 7
9999 mem: location 2022 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 150 -> 151
9999 mem: storing 1008 in location 2031
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 2033
9999 mem: storing 1 in location 2034
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 1 in location 2036
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 2039
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 5
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 5
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 2041
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 3
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 3
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 5
9999 mem: location 2037 is 30
9999 mem: storing 150 in location 2045
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 150
9999 mem: location 2041 is 3
9999 mem: storing 153 in location 2045
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 105 -> 106
9999 mem: storing 1014 in location 2046
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
9990 schedule: print/print_2/print-board/run_1001/scenario_making-a-move
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 153
9998 run: address to copy to is 1322
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1322
9999 mem: storing 7 in location 1323
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 3
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 3
9999 mem: storing 4 in location 2041
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 4
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 2025 is 2
9999 mem: storing 3 in location 2025
 105 run: jump {: "offset"}
9998 run: jumping to instruction 16
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 2025 is 3
9999 mem: location 2024 is 3
9999 mem: storing 1 in location 2026
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 2026 is 1
9998 run: jumping to instruction 22
 105 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2018 is 1008
9999 abandon: saving in free-list of size 13
9999 trace: reply: decrementing callstack depth from 4
 104 run: {col: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1938
 104 run: {done?: "boolean"} <- equal {col: "number"}, {8: "literal"}
9999 mem: location 1938 is 0
9999 mem: storing 0 in location 1935
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1935 is 0
9998 run: jump-if fell through
 104 run: {f: ("address" "array" "character")} <- index {board: ("address" "array" "address" "array" "character"), "lookup": ()}, {col: "number"}
9999 mem: location 1932 is 1826
9999 mem: skipping refcount at 1826
9998 run: base address is 1827
9999 mem: location 1938 is 0
9998 run: address to copy is 1828
9998 run: its type is address
9999 mem: location 1828 is 1836
9999 mem: decrementing refcount of 1906: 4 -> 3
9999 mem: incrementing refcount of 1836: 2 -> 3
9999 mem: storing 1836 in location 1939
 104 run: {c: "character"} <- index {f: ("address" "array" "character"), "lookup": ()}, {row: "number"}
9999 mem: location 1939 is 1836
9999 mem: skipping refcount at 1836
9998 run: base address is 1837
9999 mem: location 1933 is 2
9998 run: address to copy is 1840
9998 run: its type is character
9999 mem: location 1840 is 32
9999 mem: storing 32 in location 1940
 104 run: print {screen: ("address" "screen")}, {c: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1940 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 151 -> 152
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 5
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 5
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 4
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 4
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 5
9999 mem: location 2037 is 30
9999 mem: storing 150 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 150
9999 mem: location 2041 is 4
9999 mem: storing 154 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 106 -> 107
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 154
9998 run: address to copy to is 1324
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1324
9999 mem: storing 7 in location 1325
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 4
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 4
9999 mem: storing 5 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 5
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: print {screen: ("address" "screen")}, {space: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1934 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 152 -> 153
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 5
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 5
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 5
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 5
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 5
9999 mem: location 2037 is 30
9999 mem: storing 150 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 150
9999 mem: location 2041 is 5
9999 mem: storing 155 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 107 -> 108
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 155
9998 run: address to copy to is 1326
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1326
9999 mem: storing 7 in location 1327
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 5
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 5
9999 mem: storing 6 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 6
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {col: "number"} <- add {col: "number"}, {1: "literal"}
9999 mem: location 1938 is 0
9999 mem: storing 1 in location 1938
 104 run: jump {: "offset"}
9998 run: jumping to instruction 14
 104 run: {done?: "boolean"} <- equal {col: "number"}, {8: "literal"}
9999 mem: location 1938 is 1
9999 mem: storing 0 in location 1935
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1935 is 0
9998 run: jump-if fell through
 104 run: {f: ("address" "array" "character")} <- index {board: ("address" "array" "address" "array" "character"), "lookup": ()}, {col: "number"}
9999 mem: location 1932 is 1826
9999 mem: skipping refcount at 1826
9998 run: base address is 1827
9999 mem: location 1938 is 1
9998 run: address to copy is 1829
9998 run: its type is address
9999 mem: location 1829 is 1846
9999 mem: decrementing refcount of 1836: 3 -> 2
9999 mem: incrementing refcount of 1846: 2 -> 3
9999 mem: storing 1846 in location 1939
 104 run: {c: "character"} <- index {f: ("address" "array" "character"), "lookup": ()}, {row: "number"}
9999 mem: location 1939 is 1846
9999 mem: skipping refcount at 1846
9998 run: base address is 1847
9999 mem: location 1933 is 2
9998 run: address to copy is 1850
9998 run: its type is character
9999 mem: location 1850 is 32
9999 mem: storing 32 in location 1940
 104 run: print {screen: ("address" "screen")}, {c: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1940 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 153 -> 154
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 5
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 5
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 6
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 6
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 5
9999 mem: location 2037 is 30
9999 mem: storing 150 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 150
9999 mem: location 2041 is 6
9999 mem: storing 156 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 108 -> 109
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 156
9998 run: address to copy to is 1328
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1328
9999 mem: storing 7 in location 1329
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 6
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 6
9999 mem: storing 7 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 7
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: print {screen: ("address" "screen")}, {space: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1934 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 154 -> 155
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 5
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 5
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 7
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 7
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 5
9999 mem: location 2037 is 30
9999 mem: storing 150 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 150
9999 mem: location 2041 is 7
9999 mem: storing 157 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 109 -> 110
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 157
9998 run: address to copy to is 1330
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1330
9999 mem: storing 7 in location 1331
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 7
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 7
9999 mem: storing 8 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 8
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {col: "number"} <- add {col: "number"}, {1: "literal"}
9999 mem: location 1938 is 1
9999 mem: storing 2 in location 1938
 104 run: jump {: "offset"}
9998 run: jumping to instruction 14
 104 run: {done?: "boolean"} <- equal {col: "number"}, {8: "literal"}
9999 mem: location 1938 is 2
9999 mem: storing 0 in location 1935
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1935 is 0
9998 run: jump-if fell through
 104 run: {f: ("address" "array" "character")} <- index {board: ("address" "array" "address" "array" "character"), "lookup": ()}, {col: "number"}
9999 mem: location 1932 is 1826
9999 mem: skipping refcount at 1826
9998 run: base address is 1827
9999 mem: location 1938 is 2
9998 run: address to copy is 1830
9998 run: its type is address
9999 mem: location 1830 is 1856
9999 mem: decrementing refcount of 1846: 3 -> 2
9999 mem: incrementing refcount of 1856: 2 -> 3
9999 mem: storing 1856 in location 1939
 104 run: {c: "character"} <- index {f: ("address" "array" "character"), "lookup": ()}, {row: "number"}
9999 mem: location 1939 is 1856
9999 mem: skipping refcount at 1856
9998 run: base address is 1857
9999 mem: location 1933 is 2
9998 run: address to copy is 1860
9998 run: its type is character
9999 mem: location 1860 is 32
9999 mem: storing 32 in location 1940
 104 run: print {screen: ("address" "screen")}, {c: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1940 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 155 -> 156
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 5
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 5
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 8
9999 mem: storing 8 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 8
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 8
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 5
9999 mem: location 2037 is 30
9999 mem: storing 150 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 150
9999 mem: location 2041 is 8
9999 mem: storing 158 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 110 -> 111
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 158
9998 run: address to copy to is 1332
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1332
9999 mem: storing 7 in location 1333
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 8
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 8
9999 mem: storing 9 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 9
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 9 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: print {screen: ("address" "screen")}, {space: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1934 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 156 -> 157
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 5
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 5
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 9
9999 mem: storing 9 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 9
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 9
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 5
9999 mem: location 2037 is 30
9999 mem: storing 150 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 150
9999 mem: location 2041 is 9
9999 mem: storing 159 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 111 -> 112
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 159
9998 run: address to copy to is 1334
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1334
9999 mem: storing 7 in location 1335
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 9
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 9
9999 mem: storing 10 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 10
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 10 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {col: "number"} <- add {col: "number"}, {1: "literal"}
9999 mem: location 1938 is 2
9999 mem: storing 3 in location 1938
 104 run: jump {: "offset"}
9998 run: jumping to instruction 14
 104 run: {done?: "boolean"} <- equal {col: "number"}, {8: "literal"}
9999 mem: location 1938 is 3
9999 mem: storing 0 in location 1935
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1935 is 0
9998 run: jump-if fell through
 104 run: {f: ("address" "array" "character")} <- index {board: ("address" "array" "address" "array" "character"), "lookup": ()}, {col: "number"}
9999 mem: location 1932 is 1826
9999 mem: skipping refcount at 1826
9998 run: base address is 1827
9999 mem: location 1938 is 3
9998 run: address to copy is 1831
9998 run: its type is address
9999 mem: location 1831 is 1866
9999 mem: decrementing refcount of 1856: 3 -> 2
9999 mem: incrementing refcount of 1866: 2 -> 3
9999 mem: storing 1866 in location 1939
 104 run: {c: "character"} <- index {f: ("address" "array" "character"), "lookup": ()}, {row: "number"}
9999 mem: location 1939 is 1866
9999 mem: skipping refcount at 1866
9998 run: base address is 1867
9999 mem: location 1933 is 2
9998 run: address to copy is 1870
9998 run: its type is character
9999 mem: location 1870 is 32
9999 mem: storing 32 in location 1940
 104 run: print {screen: ("address" "screen")}, {c: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1940 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 157 -> 158
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 5
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 5
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 10
9999 mem: storing 10 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 10
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 10
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 5
9999 mem: location 2037 is 30
9999 mem: storing 150 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 150
9999 mem: location 2041 is 10
9999 mem: storing 160 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 112 -> 113
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 160
9998 run: address to copy to is 1336
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1336
9999 mem: storing 7 in location 1337
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 10
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 10
9999 mem: storing 11 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 11
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 11 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: print {screen: ("address" "screen")}, {space: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1934 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 158 -> 159
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 5
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 5
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 11
9999 mem: storing 11 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 11
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 11
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 5
9999 mem: location 2037 is 30
9999 mem: storing 150 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 150
9999 mem: location 2041 is 11
9999 mem: storing 161 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 113 -> 114
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
9990 schedule: print/print-board/run_1001/scenario_making-a-move
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 161
9998 run: address to copy to is 1338
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1338
9999 mem: storing 7 in location 1339
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 11
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 11
9999 mem: storing 12 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 12
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 12 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {col: "number"} <- add {col: "number"}, {1: "literal"}
9999 mem: location 1938 is 3
9999 mem: storing 4 in location 1938
 104 run: jump {: "offset"}
9998 run: jumping to instruction 14
 104 run: {done?: "boolean"} <- equal {col: "number"}, {8: "literal"}
9999 mem: location 1938 is 4
9999 mem: storing 0 in location 1935
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1935 is 0
9998 run: jump-if fell through
 104 run: {f: ("address" "array" "character")} <- index {board: ("address" "array" "address" "array" "character"), "lookup": ()}, {col: "number"}
9999 mem: location 1932 is 1826
9999 mem: skipping refcount at 1826
9998 run: base address is 1827
9999 mem: location 1938 is 4
9998 run: address to copy is 1832
9998 run: its type is address
9999 mem: location 1832 is 1876
9999 mem: decrementing refcount of 1866: 3 -> 2
9999 mem: incrementing refcount of 1876: 2 -> 3
9999 mem: storing 1876 in location 1939
 104 run: {c: "character"} <- index {f: ("address" "array" "character"), "lookup": ()}, {row: "number"}
9999 mem: location 1939 is 1876
9999 mem: skipping refcount at 1876
9998 run: base address is 1877
9999 mem: location 1933 is 2
9998 run: address to copy is 1880
9998 run: its type is character
9999 mem: location 1880 is 32
9999 mem: storing 32 in location 1940
 104 run: print {screen: ("address" "screen")}, {c: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1940 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 159 -> 160
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 5
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 5
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 12
9999 mem: storing 12 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 12
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 5
9999 mem: location 2037 is 30
9999 mem: storing 150 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 150
9999 mem: location 2041 is 12
9999 mem: storing 162 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 114 -> 115
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 162
9998 run: address to copy to is 1340
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1340
9999 mem: storing 7 in location 1341
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 12
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 12
9999 mem: storing 13 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 13
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 13 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: print {screen: ("address" "screen")}, {space: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1934 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 160 -> 161
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 5
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 5
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 13
9999 mem: storing 13 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 13
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 13
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 5
9999 mem: location 2037 is 30
9999 mem: storing 150 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 150
9999 mem: location 2041 is 13
9999 mem: storing 163 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 115 -> 116
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 163
9998 run: address to copy to is 1342
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1342
9999 mem: storing 7 in location 1343
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 13
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 13
9999 mem: storing 14 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 14
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 14 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {col: "number"} <- add {col: "number"}, {1: "literal"}
9999 mem: location 1938 is 4
9999 mem: storing 5 in location 1938
 104 run: jump {: "offset"}
9998 run: jumping to instruction 14
 104 run: {done?: "boolean"} <- equal {col: "number"}, {8: "literal"}
9999 mem: location 1938 is 5
9999 mem: storing 0 in location 1935
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1935 is 0
9998 run: jump-if fell through
 104 run: {f: ("address" "array" "character")} <- index {board: ("address" "array" "address" "array" "character"), "lookup": ()}, {col: "number"}
9999 mem: location 1932 is 1826
9999 mem: skipping refcount at 1826
9998 run: base address is 1827
9999 mem: location 1938 is 5
9998 run: address to copy is 1833
9998 run: its type is address
9999 mem: location 1833 is 1886
9999 mem: decrementing refcount of 1876: 3 -> 2
9999 mem: incrementing refcount of 1886: 2 -> 3
9999 mem: storing 1886 in location 1939
 104 run: {c: "character"} <- index {f: ("address" "array" "character"), "lookup": ()}, {row: "number"}
9999 mem: location 1939 is 1886
9999 mem: skipping refcount at 1886
9998 run: base address is 1887
9999 mem: location 1933 is 2
9998 run: address to copy is 1890
9998 run: its type is character
9999 mem: location 1890 is 32
9999 mem: storing 32 in location 1940
 104 run: print {screen: ("address" "screen")}, {c: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1940 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 161 -> 162
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 5
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 5
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 14
9999 mem: storing 14 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 14
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 14
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 5
9999 mem: location 2037 is 30
9999 mem: storing 150 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 150
9999 mem: location 2041 is 14
9999 mem: storing 164 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 116 -> 117
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 164
9998 run: address to copy to is 1344
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1344
9999 mem: storing 7 in location 1345
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 14
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 14
9999 mem: storing 15 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 15
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 15 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: print {screen: ("address" "screen")}, {space: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1934 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 162 -> 163
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 5
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 5
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 15
9999 mem: storing 15 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 15
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 15
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 5
9999 mem: location 2037 is 30
9999 mem: storing 150 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 150
9999 mem: location 2041 is 15
9999 mem: storing 165 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 117 -> 118
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 165
9998 run: address to copy to is 1346
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1346
9999 mem: storing 7 in location 1347
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 15
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 15
9999 mem: storing 16 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 16
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 16 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {col: "number"} <- add {col: "number"}, {1: "literal"}
9999 mem: location 1938 is 5
9999 mem: storing 6 in location 1938
 104 run: jump {: "offset"}
9998 run: jumping to instruction 14
 104 run: {done?: "boolean"} <- equal {col: "number"}, {8: "literal"}
9999 mem: location 1938 is 6
9999 mem: storing 0 in location 1935
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1935 is 0
9998 run: jump-if fell through
 104 run: {f: ("address" "array" "character")} <- index {board: ("address" "array" "address" "array" "character"), "lookup": ()}, {col: "number"}
9999 mem: location 1932 is 1826
9999 mem: skipping refcount at 1826
9998 run: base address is 1827
9999 mem: location 1938 is 6
9998 run: address to copy is 1834
9998 run: its type is address
9999 mem: location 1834 is 1896
9999 mem: decrementing refcount of 1886: 3 -> 2
9999 mem: incrementing refcount of 1896: 4 -> 5
9999 mem: storing 1896 in location 1939
 104 run: {c: "character"} <- index {f: ("address" "array" "character"), "lookup": ()}, {row: "number"}
9999 mem: location 1939 is 1896
9999 mem: skipping refcount at 1896
9998 run: base address is 1897
9999 mem: location 1933 is 2
9998 run: address to copy is 1900
9998 run: its type is character
9999 mem: location 1900 is 32
9999 mem: storing 32 in location 1940
 104 run: print {screen: ("address" "screen")}, {c: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1940 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 163 -> 164
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 5
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 5
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 16
9999 mem: storing 16 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 16
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 16
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 5
9999 mem: location 2037 is 30
9999 mem: storing 150 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 150
9999 mem: location 2041 is 16
9999 mem: storing 166 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 118 -> 119
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 166
9998 run: address to copy to is 1348
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1348
9999 mem: storing 7 in location 1349
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 16
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 16
9999 mem: storing 17 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 17
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 17 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: print {screen: ("address" "screen")}, {space: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1934 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 164 -> 165
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 5
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 5
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 17
9999 mem: storing 17 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 17
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 17
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 5
9999 mem: location 2037 is 30
9999 mem: storing 150 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 150
9999 mem: location 2041 is 17
9999 mem: storing 167 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 119 -> 120
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 167
9998 run: address to copy to is 1350
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1350
9999 mem: storing 7 in location 1351
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 17
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 17
9999 mem: storing 18 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 18
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 18 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {col: "number"} <- add {col: "number"}, {1: "literal"}
9999 mem: location 1938 is 6
9999 mem: storing 7 in location 1938
 104 run: jump {: "offset"}
9998 run: jumping to instruction 14
 104 run: {done?: "boolean"} <- equal {col: "number"}, {8: "literal"}
9999 mem: location 1938 is 7
9999 mem: storing 0 in location 1935
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1935 is 0
9998 run: jump-if fell through
 104 run: {f: ("address" "array" "character")} <- index {board: ("address" "array" "address" "array" "character"), "lookup": ()}, {col: "number"}
9999 mem: location 1932 is 1826
9999 mem: skipping refcount at 1826
9998 run: base address is 1827
9999 mem: location 1938 is 7
9998 run: address to copy is 1835
9998 run: its type is address
9999 mem: location 1835 is 1906
9999 mem: decrementing refcount of 1896: 5 -> 4
9999 mem: incrementing refcount of 1906: 3 -> 4
9999 mem: storing 1906 in location 1939
 104 run: {c: "character"} <- index {f: ("address" "array" "character"), "lookup": ()}, {row: "number"}
9999 mem: location 1939 is 1906
9999 mem: skipping refcount at 1906
9998 run: base address is 1907
9999 mem: location 1933 is 2
9998 run: address to copy is 1910
9998 run: its type is character
9999 mem: location 1910 is 32
9999 mem: storing 32 in location 1940
 104 run: print {screen: ("address" "screen")}, {c: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1940 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 165 -> 166
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 5
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 5
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 18
9999 mem: storing 18 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 18
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 18
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 5
9999 mem: location 2037 is 30
9999 mem: storing 150 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 150
9999 mem: location 2041 is 18
9999 mem: storing 168 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 120 -> 121
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 168
9998 run: address to copy to is 1352
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1352
9999 mem: storing 7 in location 1353
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 18
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 18
9999 mem: storing 19 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 19
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 19 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: print {screen: ("address" "screen")}, {space: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1934 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 166 -> 167
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 5
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 5
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 19
9999 mem: storing 19 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 19
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 19
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 5
9999 mem: location 2037 is 30
9999 mem: storing 150 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 150
9999 mem: location 2041 is 19
9999 mem: storing 169 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 121 -> 122
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
9990 schedule: print/print-board/run_1001/scenario_making-a-move
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 169
9998 run: address to copy to is 1354
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1354
9999 mem: storing 7 in location 1355
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 19
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 19
9999 mem: storing 20 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 20
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 20 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {col: "number"} <- add {col: "number"}, {1: "literal"}
9999 mem: location 1938 is 7
9999 mem: storing 8 in location 1938
 104 run: jump {: "offset"}
9998 run: jumping to instruction 14
 104 run: {done?: "boolean"} <- equal {col: "number"}, {8: "literal"}
9999 mem: location 1938 is 8
9999 mem: storing 1 in location 1935
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1935 is 1
9998 run: jumping to instruction 22
 104 run: {row: "number"} <- subtract {row: "number"}, {1: "literal"}
9999 mem: location 1933 is 2
9999 mem: storing 1 in location 1933
 104 run: cursor-to-next-line {screen: ("address" "screen")}
9999 mem: location 1931 is 1008
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 2
9999 mem: allocating size 4
9999 abandon: picking up space from free-list of size 4
9999 mem: new alloc from free list: 2059
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 167 -> 168
9999 mem: storing 1008 in location 2062
 105 run: {screen: ("address" "screen")} <- cursor-down {screen: ("address" "screen")}
9999 mem: location 2062 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 168 -> 169
9999 mem: storing 1008 in location 1003
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1004
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1005
 106 run: {max: "number"} <- subtract {height: "number"}, {1: "literal"}
9999 mem: location 1004 is 12
9999 mem: storing 11 in location 1006
 106 run: {at-bottom?: "boolean"} <- greater-or-equal {row: "number"}, {max: "number"}
9999 mem: location 1005 is 5
9999 mem: location 1006 is 11
9999 mem: storing 0 in location 1007
 106 run: jump-if {at-bottom?: "boolean"}, {: "offset"}
9999 mem: location 1007 is 0
9998 run: jump-if fell through
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1005 is 5
9999 mem: storing 6 in location 1005
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {row: "number"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 5
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 1005 is 6
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 6 in location 1011
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 1008 in location 2062
 105 run: {screen: ("address" "screen")} <- cursor-to-start-of-line {screen: ("address" "screen")}
9999 mem: location 2062 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1961
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 169 -> 170
9999 mem: storing 1008 in location 1964
 106 run: {row: "number"} <- cursor-position {screen: ("address" "screen")}
9999 mem: location 1964 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 2063
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 170 -> 171
9999 mem: storing 1008 in location 2066
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2066 is 1008
9998 run: jump-unless fell through
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2066 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 2066 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 2067
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2066 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 2066 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 20
9999 mem: storing 20 in location 2068
 107 run: return {row: "number"}, {column: "number"}
9999 mem: location 2067 is 6
9999 mem: location 2068 is 20
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 6
9999 mem: storing 6 in location 1965
 106 run: {column: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1966
 106 run: {screen: ("address" "screen")} <- move-cursor {screen: ("address" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1964 is 1008
9999 mem: location 1965 is 6
9999 mem: location 1966 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 2063
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 171 -> 172
9999 mem: storing 1008 in location 2066
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 6 in location 2067
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 2068
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2066 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 2066 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 2067 is 6
9999 mem: location 2066 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 6 in location 1011
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 2066 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 2068 is 0
9999 mem: location 2066 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2066 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 1008 in location 1964
 106 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1964 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 1008 in location 2062
 105 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2062 is 1008
9999 abandon: saving in free-list of size 4
9999 trace: reply: decrementing callstack depth from 4
 104 run: jump {: "offset"}
9998 run: jumping to instruction 6
 104 run: {done?: "boolean"} <- lesser-than {row: "number"}, {0: "literal"}
9999 mem: location 1933 is 1
9999 mem: storing 0 in location 1935
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1935 is 0
9998 run: jump-if fell through
 104 run: {rank: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1933 is 1
9999 mem: storing 2 in location 1936
 104 run: print-integer {screen: ("address" "screen")}, {rank: "number"}
9999 mem: location 1931 is 1008
9999 mem: location 1936 is 2
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1736
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 172 -> 173
9999 mem: storing 1008 in location 1739
 105 run: {n: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1740
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1741
9999 mem: storing 0 in location 1742
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1742 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1741
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1743
9999 mem: storing 0 in location 1744
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1744 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1743
 105 run: {s: ("address" "array" "character")} <- to-text_3 {n: "number"}
9999 mem: location 1740 is 2
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 16
9999 mem: allocating size 18
9999 abandon: picking up space from free-list of size 18
9999 mem: new alloc from free list: 1943
 106 run: {n: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1946
 106 run: jump-if {n: "number"}, {: "offset"}
9999 mem: location 1946 is 2
9998 run: jumping to instruction 6
 106 run: {negate-result: "boolean"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1948
 106 run: {negative?: "boolean"} <- lesser-than {n: "number"}, {0: "literal"}
9999 mem: location 1946 is 2
9999 mem: storing 0 in location 1949
 106 run: jump-unless {negative?: "boolean"}, {: "offset"}
9999 mem: location 1949 is 0
9998 run: jumping to instruction 13
 106 run: {tmp: ("address" "buffer")} <- new-buffer {30: "literal"}
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1961
 107 run: {capacity: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 30 in location 1964
 107 run: {result: ("address" "buffer")} <- new {buffer: "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 2284
9999 mem: storing 0 in location 2284
9999 mem: storing 0 in location 2285
9999 mem: storing 0 in location 2286
9999 mem: incrementing refcount of 2284: 0 -> 1
9999 mem: storing 2284 in location 1965
 107 run: {result: ("address" "buffer"), "lookup": ()} <- put {result: ("address" "buffer"), "lookup": ()}, {length: "offset"}, {0: "literal"}
9999 mem: location 1965 is 2284
9999 mem: skipping refcount at 2284
9999 mem: location 2285 is 0
9999 mem: location 2286 is 0
9999 mem: location 1965 is 2284
9999 mem: skipping refcount at 2284
9998 run: address to copy to is 2285
9999 mem: storing 0 in location 2285
 107 run: {data: ("address" "array" "character")} <- new {character: "type"}, {capacity: "number"}
9999 mem: location 1964 is 30
9999 mem: array size is 30
9999 mem: allocating size 32
9999 mem: new alloc: 2287
9999 mem: storing 0 in location 2287
9999 mem: storing 0 in location 2288
9999 mem: storing 0 in location 2289
9999 mem: storing 0 in location 2290
9999 mem: storing 0 in location 2291
9999 mem: storing 0 in location 2292
9999 mem: storing 0 in location 2293
9999 mem: storing 0 in location 2294
9999 mem: storing 0 in location 2295
9999 mem: storing 0 in location 2296
9999 mem: storing 0 in location 2297
9999 mem: storing 0 in location 2298
9999 mem: storing 0 in location 2299
9999 mem: storing 0 in location 2300
9999 mem: storing 0 in location 2301
9999 mem: storing 0 in location 2302
9999 mem: storing 0 in location 2303
9999 mem: storing 0 in location 2304
9999 mem: storing 0 in location 2305
9999 mem: storing 0 in location 2306
9999 mem: storing 0 in location 2307
9999 mem: storing 0 in location 2308
9999 mem: storing 0 in location 2309
9999 mem: storing 0 in location 2310
9999 mem: storing 0 in location 2311
9999 mem: storing 0 in location 2312
9999 mem: storing 0 in location 2313
9999 mem: storing 0 in location 2314
9999 mem: storing 0 in location 2315
9999 mem: storing 0 in location 2316
9999 mem: storing 0 in location 2317
9999 mem: storing 0 in location 2318
9999 mem: storing 30 in location 2288
9999 mem: incrementing refcount of 2287: 0 -> 1
9999 mem: storing 2287 in location 1966
 107 run: {result: ("address" "buffer"), "lookup": ()} <- put {result: ("address" "buffer"), "lookup": ()}, {data: "offset"}, {data: ("address" "array" "character")}
9999 mem: location 1965 is 2284
9999 mem: skipping refcount at 2284
9999 mem: location 2285 is 0
9999 mem: location 2286 is 0
9999 mem: location 1966 is 2287
9999 mem: location 1965 is 2284
9999 mem: skipping refcount at 2284
9998 run: address to copy to is 2286
9999 mem: incrementing refcount of 2287: 1 -> 2
9999 mem: storing 2287 in location 2286
 107 run: return {result: ("address" "buffer")}
9999 mem: location 1965 is 2284
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 2284
9999 mem: incrementing refcount of 2284: 1 -> 2
9999 mem: storing 2284 in location 1950
 106 run: {digit-base: "number"} <- copy {48: "literal"}
9999 mem: storing 48 in location 1951
 106 run: {done?: "boolean"} <- equal {n: "number"}, {0: "literal"}
9999 mem: location 1946 is 2
9999 mem: storing 0 in location 1952
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1952 is 0
9998 run: jump-if fell through
 106 run: {n: "number"}, {digit: "number"} <- divide-with-remainder {n: "number"}, {10: "literal"}
9999 mem: location 1946 is 2
9999 mem: storing 0 in location 1946
9999 mem: storing 2 in location 1953
 106 run: {c: "character"} <- add {digit-base: "number"}, {digit: "number"}
9999 mem: location 1951 is 48
9999 mem: location 1953 is 2
9999 mem: storing 50 in location 1954
 106 run: {tmp: ("address" "buffer")} <- append_2 {tmp: ("address" "buffer")}, {c: "character"}
9999 mem: location 1950 is 2284
9999 mem: location 1954 is 50
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 2002
 107 run: {in: ("address" "buffer")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 2284: 2 -> 3
9999 mem: storing 2284 in location 2005
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 50 in location 2006
 107 run: {len: "number"} <- get {in: ("address" "buffer"), "lookup": ()}, {length: "offset"}
9999 mem: location 2005 is 2284
9999 mem: skipping refcount at 2284
9999 mem: location 2285 is 0
9999 mem: location 2286 is 2287
9999 mem: location 2005 is 2284
9999 mem: skipping refcount at 2284
9998 run: address to copy is 2285
9998 run: its type is "number"
9999 mem: location 2285 is 0
9999 mem: storing 0 in location 2007
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal", "backspace": ()}
9999 mem: location 2006 is 50
9999 mem: storing 0 in location 2008
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2008 is 0
9998 run: jumping to instruction 15
 107 run: {full?: "boolean"} <- buffer-full? {in: ("address" "buffer")}
9999 mem: location 2005 is 2284
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 108 run: {in: ("address" "buffer")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 2284: 3 -> 4
9999 mem: storing 2284 in location 1003
 108 run: {len: "number"} <- get {in: ("address" "buffer"), "lookup": ()}, {length: "offset"}
9999 mem: location 1003 is 2284
9999 mem: skipping refcount at 2284
9999 mem: location 2285 is 0
9999 mem: location 2286 is 2287
9999 mem: location 1003 is 2284
9999 mem: skipping refcount at 2284
9998 run: address to copy is 2285
9998 run: its type is "number"
9999 mem: location 2285 is 0
9999 mem: storing 0 in location 1004
 108 run: {s: ("address" "array" "character")} <- get {in: ("address" "buffer"), "lookup": ()}, {data: "offset"}
9999 mem: location 1003 is 2284
9999 mem: skipping refcount at 2284
9999 mem: location 2285 is 0
9999 mem: location 2286 is 2287
9999 mem: location 1003 is 2284
9999 mem: skipping refcount at 2284
9998 run: address to copy is 2286
9998 run: its type is ("address" "array" "character")
9999 mem: location 2286 is 2287
9999 mem: incrementing refcount of 2287: 2 -> 3
9999 mem: storing 2287 in location 1005
 108 run: {capacity: "number"} <- length {s: ("address" "array" "character"), "lookup": ()}
9999 mem: location 1005 is 2287
9999 mem: skipping refcount at 2287
9999 mem: storing 30 in location 1006
 108 run: {result: "boolean"} <- greater-or-equal {len: "number"}, {capacity: "number"}
9999 mem: location 1004 is 0
9999 mem: location 1006 is 30
9999 mem: storing 0 in location 1007
 108 run: reply {result: "boolean"}
9999 mem: location 1007 is 0
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 0
9999 mem: storing 0 in location 2010
 107 run: jump-unless {full?: "boolean"}, {: "offset"}
9999 mem: location 2010 is 0
9998 run: jumping to instruction 20
 107 run: {s: ("address" "array" "character")} <- get {in: ("address" "buffer"), "lookup": ()}, {data: "offset"}
9999 mem: location 2005 is 2284
9999 mem: skipping refcount at 2284
9999 mem: location 2285 is 0
9999 mem: location 2286 is 2287
9999 mem: location 2005 is 2284
9999 mem: skipping refcount at 2284
9998 run: address to copy is 2286
9998 run: its type is ("address" "array" "character")
9999 mem: location 2286 is 2287
9999 mem: incrementing refcount of 2287: 3 -> 4
9999 mem: storing 2287 in location 2011
 107 run: {s: ("address" "array" "character"), "lookup": ()} <- put-index {s: ("address" "array" "character"), "lookup": ()}, {len: "number"}, {c: "character"}
9999 mem: location 2011 is 2287
9999 mem: skipping refcount at 2287
9999 mem: location 2007 is 0
9998 run: address to copy to is 2289
9999 mem: location 2006 is 50
9999 mem: storing 50 in location 2289
 107 run: {len: "number"} <- add {len: "number"}, {1: "literal"}
9999 mem: location 2007 is 0
9999 mem: storing 1 in location 2007
 107 run: {in: ("address" "buffer"), "lookup": ()} <- put {in: ("address" "buffer"), "lookup": ()}, {length: "offset"}, {len: "number"}
9999 mem: location 2005 is 2284
9999 mem: skipping refcount at 2284
9999 mem: location 2285 is 0
9999 mem: location 2286 is 2287
9999 mem: location 2007 is 1
9999 mem: location 2005 is 2284
9999 mem: skipping refcount at 2284
9998 run: address to copy to is 2285
9999 mem: storing 1 in location 2285
 107 run: reply {in: ("address" "buffer"), "same-as-ingredient": "0"}
9999 mem: location 2005 is 2284
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 2284
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 2284 in location 1950
 106 run: jump {: "offset"}
9998 run: jumping to instruction 17
 106 run: {done?: "boolean"} <- equal {n: "number"}, {0: "literal"}
9999 mem: location 1946 is 0
9999 mem: storing 1 in location 1952
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1952 is 1
9998 run: jumping to instruction 23
 106 run: jump-unless {negate-result: "boolean"}, {: "offset"}
9999 mem: location 1948 is 0
9998 run: jumping to instruction 28
 106 run: {len: "number"} <- get {tmp: ("address" "buffer"), "lookup": ()}, {length: "offset"}
9999 mem: location 1950 is 2284
9999 mem: skipping refcount at 2284
9999 mem: location 2285 is 1
9999 mem: location 2286 is 2287
9999 mem: location 1950 is 2284
9999 mem: skipping refcount at 2284
9998 run: address to copy is 2285
9998 run: its type is "number"
9999 mem: location 2285 is 1
9999 mem: storing 1 in location 1956
 106 run: {buf: ("address" "array" "character")} <- get {tmp: ("address" "buffer"), "lookup": ()}, {data: "offset"}
9999 mem: location 1950 is 2284
9999 mem: skipping refcount at 2284
9999 mem: location 2285 is 1
9999 mem: location 2286 is 2287
9999 mem: location 1950 is 2284
9999 mem: skipping refcount at 2284
9998 run: address to copy is 2286
9998 run: its type is ("address" "array" "character")
9999 mem: location 2286 is 2287
9999 mem: incrementing refcount of 2287: 4 -> 5
9999 mem: storing 2287 in location 1957
 106 run: {result: ("address" "array" "character")} <- new {character: "type"}, {len: "number"}
9999 mem: location 1956 is 1
9999 mem: array size is 1
9999 mem: allocating size 3
9999 mem: new alloc: 2319
9999 mem: storing 0 in location 2319
9999 mem: storing 0 in location 2320
9999 mem: storing 0 in location 2321
9999 mem: storing 1 in location 2320
9999 mem: incrementing refcount of 2319: 0 -> 1
9999 mem: storing 2319 in location 1947
 106 run: {i: "number"} <- subtract {len: "number"}, {1: "literal"}
9999 mem: location 1956 is 1
9999 mem: storing 0 in location 1958
 106 run: {j: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1959
 106 run: {done?: "boolean"} <- lesser-than {i: "number"}, {0: "literal"}
9999 mem: location 1958 is 0
9999 mem: storing 0 in location 1952
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1952 is 0
9998 run: jump-if fell through
 106 run: {src: "character"} <- index {buf: ("address" "array" "character"), "lookup": ()}, {i: "number"}
9999 mem: location 1957 is 2287
9999 mem: skipping refcount at 2287
9998 run: base address is 2288
9999 mem: location 1958 is 0
9998 run: address to copy is 2289
9998 run: its type is character
9999 mem: location 2289 is 50
9999 mem: storing 50 in location 1960
 106 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {j: "number"}, {src: "character"}
9999 mem: location 1947 is 2319
9999 mem: skipping refcount at 2319
9999 mem: location 1959 is 0
9998 run: address to copy to is 2321
9999 mem: location 1960 is 50
9999 mem: storing 50 in location 2321
 106 run: {i: "number"} <- subtract {i: "number"}, {1: "literal"}
9999 mem: location 1958 is 0
9999 mem: storing -1 in location 1958
 106 run: {j: "number"} <- add {j: "number"}, {1: "literal"}
9999 mem: location 1959 is 0
9999 mem: storing 1 in location 1959
 106 run: jump {: "offset"}
9998 run: jumping to instruction 35
 106 run: {done?: "boolean"} <- lesser-than {i: "number"}, {0: "literal"}
9999 mem: location 1958 is -1
9999 mem: storing 1 in location 1952
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1952 is 1
9998 run: jumping to instruction 42
 106 run: reply {result: ("address" "array" "character")}
9999 mem: location 1947 is 2319
9999 abandon: saving in free-list of size 18
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 2319
9999 mem: incrementing refcount of 2319: 1 -> 2
9999 mem: storing 2319 in location 1745
 105 run: {screen: ("address" "screen")} <- print_2 {screen: ("address" "screen")}, {s: ("address" "array" "character")}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1739 is 1008
9999 mem: location 1745 is 2319
9999 mem: location 1741 is 7
9999 mem: location 1743 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 11
9999 mem: allocating size 13
9999 abandon: picking up space from free-list of size 13
9999 mem: new alloc from free list: 2015
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 173 -> 174
9999 mem: storing 1008 in location 2018
 106 run: {s: ("address" "array" "character")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 2319: 2 -> 3
9999 mem: storing 2319 in location 2019
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 2020
9999 mem: storing 1 in location 2021
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2021 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2022
9999 mem: storing 1 in location 2023
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2023 is 1
9998 run: jumping to instruction 12
 106 run: {len: "number"} <- length {s: ("address" "array" "character"), "lookup": ()}
9999 mem: location 2019 is 2319
9999 mem: skipping refcount at 2319
9999 mem: storing 1 in location 2024
 106 run: {i: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 2025
 106 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 2025 is 0
9999 mem: location 2024 is 1
9999 mem: storing 0 in location 2026
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 2026 is 0
9998 run: jump-if fell through
 106 run: {c: "character"} <- index {s: ("address" "array" "character"), "lookup": ()}, {i: "number"}
9999 mem: location 2019 is 2319
9999 mem: skipping refcount at 2319
9998 run: base address is 2320
9999 mem: location 2025 is 0
9998 run: address to copy is 2321
9998 run: its type is character
9999 mem: location 2321 is 50
9999 mem: storing 50 in location 2027
 106 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 2018 is 1008
9999 mem: location 2027 is 50
9999 mem: location 2020 is 7
9999 mem: location 2022 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 174 -> 175
9999 mem: storing 1008 in location 2031
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 50 in location 2032
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 2033
9999 mem: storing 1 in location 2034
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 1 in location 2036
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 50
  90 print-character: 50 
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 2039
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 6
9999 mem: storing 1 in location 2040
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 6
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 2041
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 0
9999 mem: storing 1 in location 2040
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 0
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 50
9999 mem: storing 0 in location 2042
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 6
9999 mem: location 2037 is 30
9999 mem: storing 180 in location 2045
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 180
9999 mem: location 2041 is 0
9999 mem: storing 180 in location 2045
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 122 -> 123
9999 mem: storing 1014 in location 2046
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 50
9999 mem: storing 0 in location 2048
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 50
9999 mem: location 2033 is 7
9999 mem: storing 50 in location 2050
9999 mem: storing 7 in location 2051
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 180
9998 run: address to copy to is 1376
9999 mem: location 2050 is 50
9999 mem: location 2051 is 7
9999 mem: storing 50 in location 1376
9999 mem: storing 7 in location 1377
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 0
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 0
9999 mem: storing 1 in location 2041
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 1
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
 106 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 2025 is 0
9999 mem: storing 1 in location 2025
 106 run: jump {: "offset"}
9998 run: jumping to instruction 16
 106 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 2025 is 1
9999 mem: location 2024 is 1
9999 mem: storing 1 in location 2026
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 2026 is 1
9998 run: jumping to instruction 22
 106 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2018 is 1008
9999 abandon: saving in free-list of size 13
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 1008 in location 1739
 105 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1739 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 4
 104 run: {print_10_1: ("address" "array" "character")} <- new {" | ": "literal-string"}
9999 mem: new string alloc: 2322
9999 mem: decrementing refcount of 2279: 2 -> 1
9999 mem: incrementing refcount of 2322: 0 -> 1
9999 mem: storing 2322 in location 1937
 104 run: print_2 {screen: ("address" "screen")}, {print_10_1: ("address" "array" "character")}
9999 mem: location 1931 is 1008
9999 mem: location 1937 is 2322
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 11
9999 mem: allocating size 13
9999 abandon: picking up space from free-list of size 13
9999 mem: new alloc from free list: 2015
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 175 -> 176
9999 mem: storing 1008 in location 2018
 105 run: {s: ("address" "array" "character")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 2322: 1 -> 2
9999 mem: storing 2322 in location 2019
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2020
9999 mem: storing 0 in location 2021
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2021 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2020
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2022
9999 mem: storing 0 in location 2023
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2023 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2022
 105 run: {len: "number"} <- length {s: ("address" "array" "character"), "lookup": ()}
9999 mem: location 2019 is 2322
9999 mem: skipping refcount at 2322
9999 mem: storing 3 in location 2024
 105 run: {i: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 2025
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 2025 is 0
9999 mem: location 2024 is 3
9999 mem: storing 0 in location 2026
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 2026 is 0
9998 run: jump-if fell through
 105 run: {c: "character"} <- index {s: ("address" "array" "character"), "lookup": ()}, {i: "number"}
9999 mem: location 2019 is 2322
9999 mem: skipping refcount at 2322
9998 run: base address is 2323
9999 mem: location 2025 is 0
9998 run: address to copy is 2324
9998 run: its type is character
9999 mem: location 2324 is 32
9999 mem: storing 32 in location 2027
 105 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 2018 is 1008
9999 mem: location 2027 is 32
9999 mem: location 2020 is 7
9999 mem: location 2022 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 176 -> 177
9999 mem: storing 1008 in location 2031
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 2033
9999 mem: storing 1 in location 2034
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 1 in location 2036
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 2039
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 6
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 6
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 2041
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 1
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 1
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 6
9999 mem: location 2037 is 30
9999 mem: storing 180 in location 2045
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 180
9999 mem: location 2041 is 1
9999 mem: storing 181 in location 2045
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 123 -> 124
9999 mem: storing 1014 in location 2046
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 181
9998 run: address to copy to is 1378
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1378
9999 mem: storing 7 in location 1379
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 1
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 1
9999 mem: storing 2 in location 2041
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 2
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 2025 is 0
9999 mem: storing 1 in location 2025
 105 run: jump {: "offset"}
9998 run: jumping to instruction 16
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 2025 is 1
9999 mem: location 2024 is 3
9999 mem: storing 0 in location 2026
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 2026 is 0
9998 run: jump-if fell through
 105 run: {c: "character"} <- index {s: ("address" "array" "character"), "lookup": ()}, {i: "number"}
9999 mem: location 2019 is 2322
9999 mem: skipping refcount at 2322
9998 run: base address is 2323
9999 mem: location 2025 is 1
9998 run: address to copy is 2325
9998 run: its type is character
9999 mem: location 2325 is 124
9999 mem: storing 124 in location 2027
 105 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 2018 is 1008
9999 mem: location 2027 is 124
9999 mem: location 2020 is 7
9999 mem: location 2022 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 177 -> 178
9999 mem: storing 1008 in location 2031
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 124 in location 2032
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 2033
9999 mem: storing 1 in location 2034
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 1 in location 2036
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 124
  90 print-character: 124 
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 2039
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 6
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 6
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 2041
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 2
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 2
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 124
9999 mem: storing 0 in location 2042
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 6
9999 mem: location 2037 is 30
9999 mem: storing 180 in location 2045
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 180
9999 mem: location 2041 is 2
9999 mem: storing 182 in location 2045
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 124 -> 125
9999 mem: storing 1014 in location 2046
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 124
9999 mem: storing 0 in location 2048
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 124
9999 mem: location 2033 is 7
9999 mem: storing 124 in location 2050
9999 mem: storing 7 in location 2051
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 182
9998 run: address to copy to is 1380
9999 mem: location 2050 is 124
9999 mem: location 2051 is 7
9999 mem: storing 124 in location 1380
9999 mem: storing 7 in location 1381
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 2
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 2
9999 mem: storing 3 in location 2041
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 3
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 2025 is 1
9999 mem: storing 2 in location 2025
 105 run: jump {: "offset"}
9998 run: jumping to instruction 16
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 2025 is 2
9999 mem: location 2024 is 3
9999 mem: storing 0 in location 2026
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 2026 is 0
9998 run: jump-if fell through
 105 run: {c: "character"} <- index {s: ("address" "array" "character"), "lookup": ()}, {i: "number"}
9999 mem: location 2019 is 2322
9999 mem: skipping refcount at 2322
9998 run: base address is 2323
9999 mem: location 2025 is 2
9998 run: address to copy is 2326
9998 run: its type is character
9999 mem: location 2326 is 32
9999 mem: storing 32 in location 2027
 105 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 2018 is 1008
9999 mem: location 2027 is 32
9999 mem: location 2020 is 7
9999 mem: location 2022 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 178 -> 179
9999 mem: storing 1008 in location 2031
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 2033
9999 mem: storing 1 in location 2034
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 1 in location 2036
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 2039
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 6
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 6
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 2041
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 3
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 3
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 6
9999 mem: location 2037 is 30
9999 mem: storing 180 in location 2045
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 180
9999 mem: location 2041 is 3
9999 mem: storing 183 in location 2045
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 125 -> 126
9999 mem: storing 1014 in location 2046
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 183
9998 run: address to copy to is 1382
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1382
9999 mem: storing 7 in location 1383
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 3
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 3
9999 mem: storing 4 in location 2041
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 4
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 2025 is 2
9999 mem: storing 3 in location 2025
 105 run: jump {: "offset"}
9998 run: jumping to instruction 16
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 2025 is 3
9999 mem: location 2024 is 3
9999 mem: storing 1 in location 2026
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 2026 is 1
9998 run: jumping to instruction 22
 105 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2018 is 1008
9999 abandon: saving in free-list of size 13
9999 trace: reply: decrementing callstack depth from 4
 104 run: {col: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1938
 104 run: {done?: "boolean"} <- equal {col: "number"}, {8: "literal"}
9999 mem: location 1938 is 0
9999 mem: storing 0 in location 1935
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1935 is 0
9998 run: jump-if fell through
 104 run: {f: ("address" "array" "character")} <- index {board: ("address" "array" "address" "array" "character"), "lookup": ()}, {col: "number"}
9999 mem: location 1932 is 1826
9999 mem: skipping refcount at 1826
9998 run: base address is 1827
9999 mem: location 1938 is 0
9998 run: address to copy is 1828
9998 run: its type is address
9999 mem: location 1828 is 1836
9999 mem: decrementing refcount of 1906: 4 -> 3
9999 mem: incrementing refcount of 1836: 2 -> 3
9999 mem: storing 1836 in location 1939
 104 run: {c: "character"} <- index {f: ("address" "array" "character"), "lookup": ()}, {row: "number"}
9999 mem: location 1939 is 1836
9999 mem: skipping refcount at 1836
9998 run: base address is 1837
9999 mem: location 1933 is 1
9998 run: address to copy is 1839
9998 run: its type is character
9999 mem: location 1839 is 80
9999 mem: storing 80 in location 1940
 104 run: print {screen: ("address" "screen")}, {c: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1940 is 80
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 179 -> 180
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 80 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 80
  90 print-character: 80 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 6
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 6
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 4
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 4
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 80
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 6
9999 mem: location 2037 is 30
9999 mem: storing 180 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 180
9999 mem: location 2041 is 4
9999 mem: storing 184 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 126 -> 127
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 80
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 80
9999 mem: location 2033 is 7
9999 mem: storing 80 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 184
9998 run: address to copy to is 1384
9999 mem: location 2050 is 80
9999 mem: location 2051 is 7
9999 mem: storing 80 in location 1384
9999 mem: storing 7 in location 1385
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 4
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
9990 schedule: print/print-board/run_1001/scenario_making-a-move
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 4
9999 mem: storing 5 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 5
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: print {screen: ("address" "screen")}, {space: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1934 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 180 -> 181
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 6
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 6
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 5
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 5
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 6
9999 mem: location 2037 is 30
9999 mem: storing 180 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 180
9999 mem: location 2041 is 5
9999 mem: storing 185 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 127 -> 128
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 185
9998 run: address to copy to is 1386
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1386
9999 mem: storing 7 in location 1387
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 5
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 5
9999 mem: storing 6 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 6
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {col: "number"} <- add {col: "number"}, {1: "literal"}
9999 mem: location 1938 is 0
9999 mem: storing 1 in location 1938
 104 run: jump {: "offset"}
9998 run: jumping to instruction 14
 104 run: {done?: "boolean"} <- equal {col: "number"}, {8: "literal"}
9999 mem: location 1938 is 1
9999 mem: storing 0 in location 1935
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1935 is 0
9998 run: jump-if fell through
 104 run: {f: ("address" "array" "character")} <- index {board: ("address" "array" "address" "array" "character"), "lookup": ()}, {col: "number"}
9999 mem: location 1932 is 1826
9999 mem: skipping refcount at 1826
9998 run: base address is 1827
9999 mem: location 1938 is 1
9998 run: address to copy is 1829
9998 run: its type is address
9999 mem: location 1829 is 1846
9999 mem: decrementing refcount of 1836: 3 -> 2
9999 mem: incrementing refcount of 1846: 2 -> 3
9999 mem: storing 1846 in location 1939
 104 run: {c: "character"} <- index {f: ("address" "array" "character"), "lookup": ()}, {row: "number"}
9999 mem: location 1939 is 1846
9999 mem: skipping refcount at 1846
9998 run: base address is 1847
9999 mem: location 1933 is 1
9998 run: address to copy is 1849
9998 run: its type is character
9999 mem: location 1849 is 80
9999 mem: storing 80 in location 1940
 104 run: print {screen: ("address" "screen")}, {c: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1940 is 80
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 181 -> 182
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 80 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 80
  90 print-character: 80 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 6
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 6
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 6
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 6
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 80
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 6
9999 mem: location 2037 is 30
9999 mem: storing 180 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 180
9999 mem: location 2041 is 6
9999 mem: storing 186 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 128 -> 129
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 80
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 80
9999 mem: location 2033 is 7
9999 mem: storing 80 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 186
9998 run: address to copy to is 1388
9999 mem: location 2050 is 80
9999 mem: location 2051 is 7
9999 mem: storing 80 in location 1388
9999 mem: storing 7 in location 1389
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 6
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 6
9999 mem: storing 7 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 7
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: print {screen: ("address" "screen")}, {space: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1934 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 182 -> 183
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 6
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 6
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 7
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 7
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 6
9999 mem: location 2037 is 30
9999 mem: storing 180 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 180
9999 mem: location 2041 is 7
9999 mem: storing 187 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 129 -> 130
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 187
9998 run: address to copy to is 1390
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1390
9999 mem: storing 7 in location 1391
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 7
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 7
9999 mem: storing 8 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 8
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {col: "number"} <- add {col: "number"}, {1: "literal"}
9999 mem: location 1938 is 1
9999 mem: storing 2 in location 1938
 104 run: jump {: "offset"}
9998 run: jumping to instruction 14
 104 run: {done?: "boolean"} <- equal {col: "number"}, {8: "literal"}
9999 mem: location 1938 is 2
9999 mem: storing 0 in location 1935
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1935 is 0
9998 run: jump-if fell through
 104 run: {f: ("address" "array" "character")} <- index {board: ("address" "array" "address" "array" "character"), "lookup": ()}, {col: "number"}
9999 mem: location 1932 is 1826
9999 mem: skipping refcount at 1826
9998 run: base address is 1827
9999 mem: location 1938 is 2
9998 run: address to copy is 1830
9998 run: its type is address
9999 mem: location 1830 is 1856
9999 mem: decrementing refcount of 1846: 3 -> 2
9999 mem: incrementing refcount of 1856: 2 -> 3
9999 mem: storing 1856 in location 1939
 104 run: {c: "character"} <- index {f: ("address" "array" "character"), "lookup": ()}, {row: "number"}
9999 mem: location 1939 is 1856
9999 mem: skipping refcount at 1856
9998 run: base address is 1857
9999 mem: location 1933 is 1
9998 run: address to copy is 1859
9998 run: its type is character
9999 mem: location 1859 is 80
9999 mem: storing 80 in location 1940
 104 run: print {screen: ("address" "screen")}, {c: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1940 is 80
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 183 -> 184
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 80 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 80
  90 print-character: 80 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 6
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 6
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 8
9999 mem: storing 8 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 8
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 8
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 80
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 6
9999 mem: location 2037 is 30
9999 mem: storing 180 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 180
9999 mem: location 2041 is 8
9999 mem: storing 188 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 130 -> 131
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 80
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 80
9999 mem: location 2033 is 7
9999 mem: storing 80 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 188
9998 run: address to copy to is 1392
9999 mem: location 2050 is 80
9999 mem: location 2051 is 7
9999 mem: storing 80 in location 1392
9999 mem: storing 7 in location 1393
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 8
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 8
9999 mem: storing 9 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 9
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 9 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: print {screen: ("address" "screen")}, {space: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1934 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 184 -> 185
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 6
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 6
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 9
9999 mem: storing 9 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 9
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 9
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 6
9999 mem: location 2037 is 30
9999 mem: storing 180 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 180
9999 mem: location 2041 is 9
9999 mem: storing 189 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 131 -> 132
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 189
9998 run: address to copy to is 1394
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1394
9999 mem: storing 7 in location 1395
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 9
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 9
9999 mem: storing 10 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 10
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 10 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {col: "number"} <- add {col: "number"}, {1: "literal"}
9999 mem: location 1938 is 2
9999 mem: storing 3 in location 1938
 104 run: jump {: "offset"}
9998 run: jumping to instruction 14
 104 run: {done?: "boolean"} <- equal {col: "number"}, {8: "literal"}
9999 mem: location 1938 is 3
9999 mem: storing 0 in location 1935
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1935 is 0
9998 run: jump-if fell through
 104 run: {f: ("address" "array" "character")} <- index {board: ("address" "array" "address" "array" "character"), "lookup": ()}, {col: "number"}
9999 mem: location 1932 is 1826
9999 mem: skipping refcount at 1826
9998 run: base address is 1827
9999 mem: location 1938 is 3
9998 run: address to copy is 1831
9998 run: its type is address
9999 mem: location 1831 is 1866
9999 mem: decrementing refcount of 1856: 3 -> 2
9999 mem: incrementing refcount of 1866: 2 -> 3
9999 mem: storing 1866 in location 1939
 104 run: {c: "character"} <- index {f: ("address" "array" "character"), "lookup": ()}, {row: "number"}
9999 mem: location 1939 is 1866
9999 mem: skipping refcount at 1866
9998 run: base address is 1867
9999 mem: location 1933 is 1
9998 run: address to copy is 1869
9998 run: its type is character
9999 mem: location 1869 is 80
9999 mem: storing 80 in location 1940
 104 run: print {screen: ("address" "screen")}, {c: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1940 is 80
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 185 -> 186
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 80 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 80
  90 print-character: 80 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 6
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 6
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 10
9999 mem: storing 10 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 10
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 10
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 80
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 6
9999 mem: location 2037 is 30
9999 mem: storing 180 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 180
9999 mem: location 2041 is 10
9999 mem: storing 190 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 132 -> 133
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 80
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 80
9999 mem: location 2033 is 7
9999 mem: storing 80 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 190
9998 run: address to copy to is 1396
9999 mem: location 2050 is 80
9999 mem: location 2051 is 7
9999 mem: storing 80 in location 1396
9999 mem: storing 7 in location 1397
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 10
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 10
9999 mem: storing 11 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 11
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 11 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: print {screen: ("address" "screen")}, {space: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1934 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 186 -> 187
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 6
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 6
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 11
9999 mem: storing 11 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 11
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 11
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 6
9999 mem: location 2037 is 30
9999 mem: storing 180 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 180
9999 mem: location 2041 is 11
9999 mem: storing 191 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 133 -> 134
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 191
9998 run: address to copy to is 1398
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1398
9999 mem: storing 7 in location 1399
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 11
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 11
9999 mem: storing 12 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 12
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 12 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {col: "number"} <- add {col: "number"}, {1: "literal"}
9999 mem: location 1938 is 3
9999 mem: storing 4 in location 1938
 104 run: jump {: "offset"}
9998 run: jumping to instruction 14
 104 run: {done?: "boolean"} <- equal {col: "number"}, {8: "literal"}
9999 mem: location 1938 is 4
9999 mem: storing 0 in location 1935
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1935 is 0
9998 run: jump-if fell through
 104 run: {f: ("address" "array" "character")} <- index {board: ("address" "array" "address" "array" "character"), "lookup": ()}, {col: "number"}
9999 mem: location 1932 is 1826
9999 mem: skipping refcount at 1826
9998 run: base address is 1827
9999 mem: location 1938 is 4
9998 run: address to copy is 1832
9998 run: its type is address
9999 mem: location 1832 is 1876
9999 mem: decrementing refcount of 1866: 3 -> 2
9999 mem: incrementing refcount of 1876: 2 -> 3
9999 mem: storing 1876 in location 1939
 104 run: {c: "character"} <- index {f: ("address" "array" "character"), "lookup": ()}, {row: "number"}
9999 mem: location 1939 is 1876
9999 mem: skipping refcount at 1876
9998 run: base address is 1877
9999 mem: location 1933 is 1
9998 run: address to copy is 1879
9998 run: its type is character
9999 mem: location 1879 is 80
9999 mem: storing 80 in location 1940
 104 run: print {screen: ("address" "screen")}, {c: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1940 is 80
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 187 -> 188
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 80 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 80
  90 print-character: 80 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 6
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 6
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 12
9999 mem: storing 12 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 12
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 80
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 6
9999 mem: location 2037 is 30
9999 mem: storing 180 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 180
9999 mem: location 2041 is 12
9999 mem: storing 192 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 134 -> 135
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 80
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 80
9999 mem: location 2033 is 7
9999 mem: storing 80 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 192
9998 run: address to copy to is 1400
9999 mem: location 2050 is 80
9999 mem: location 2051 is 7
9999 mem: storing 80 in location 1400
9999 mem: storing 7 in location 1401
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 12
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 12
9999 mem: storing 13 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 13
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 13 in location 1012
9990 schedule: print/print-board/run_1001/scenario_making-a-move
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: print {screen: ("address" "screen")}, {space: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1934 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 188 -> 189
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 6
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 6
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 13
9999 mem: storing 13 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 13
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 13
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 6
9999 mem: location 2037 is 30
9999 mem: storing 180 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 180
9999 mem: location 2041 is 13
9999 mem: storing 193 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 135 -> 136
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 193
9998 run: address to copy to is 1402
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1402
9999 mem: storing 7 in location 1403
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 13
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 13
9999 mem: storing 14 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 14
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 14 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {col: "number"} <- add {col: "number"}, {1: "literal"}
9999 mem: location 1938 is 4
9999 mem: storing 5 in location 1938
 104 run: jump {: "offset"}
9998 run: jumping to instruction 14
 104 run: {done?: "boolean"} <- equal {col: "number"}, {8: "literal"}
9999 mem: location 1938 is 5
9999 mem: storing 0 in location 1935
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1935 is 0
9998 run: jump-if fell through
 104 run: {f: ("address" "array" "character")} <- index {board: ("address" "array" "address" "array" "character"), "lookup": ()}, {col: "number"}
9999 mem: location 1932 is 1826
9999 mem: skipping refcount at 1826
9998 run: base address is 1827
9999 mem: location 1938 is 5
9998 run: address to copy is 1833
9998 run: its type is address
9999 mem: location 1833 is 1886
9999 mem: decrementing refcount of 1876: 3 -> 2
9999 mem: incrementing refcount of 1886: 2 -> 3
9999 mem: storing 1886 in location 1939
 104 run: {c: "character"} <- index {f: ("address" "array" "character"), "lookup": ()}, {row: "number"}
9999 mem: location 1939 is 1886
9999 mem: skipping refcount at 1886
9998 run: base address is 1887
9999 mem: location 1933 is 1
9998 run: address to copy is 1889
9998 run: its type is character
9999 mem: location 1889 is 80
9999 mem: storing 80 in location 1940
 104 run: print {screen: ("address" "screen")}, {c: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1940 is 80
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 189 -> 190
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 80 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 80
  90 print-character: 80 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 6
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 6
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 14
9999 mem: storing 14 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 14
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 14
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 80
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 6
9999 mem: location 2037 is 30
9999 mem: storing 180 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 180
9999 mem: location 2041 is 14
9999 mem: storing 194 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 136 -> 137
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 80
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 80
9999 mem: location 2033 is 7
9999 mem: storing 80 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 194
9998 run: address to copy to is 1404
9999 mem: location 2050 is 80
9999 mem: location 2051 is 7
9999 mem: storing 80 in location 1404
9999 mem: storing 7 in location 1405
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 14
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 14
9999 mem: storing 15 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 15
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 15 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: print {screen: ("address" "screen")}, {space: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1934 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 190 -> 191
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 6
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 6
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 15
9999 mem: storing 15 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 15
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 15
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 6
9999 mem: location 2037 is 30
9999 mem: storing 180 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 180
9999 mem: location 2041 is 15
9999 mem: storing 195 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 137 -> 138
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 195
9998 run: address to copy to is 1406
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1406
9999 mem: storing 7 in location 1407
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 15
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 15
9999 mem: storing 16 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 16
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 16 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {col: "number"} <- add {col: "number"}, {1: "literal"}
9999 mem: location 1938 is 5
9999 mem: storing 6 in location 1938
 104 run: jump {: "offset"}
9998 run: jumping to instruction 14
 104 run: {done?: "boolean"} <- equal {col: "number"}, {8: "literal"}
9999 mem: location 1938 is 6
9999 mem: storing 0 in location 1935
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1935 is 0
9998 run: jump-if fell through
 104 run: {f: ("address" "array" "character")} <- index {board: ("address" "array" "address" "array" "character"), "lookup": ()}, {col: "number"}
9999 mem: location 1932 is 1826
9999 mem: skipping refcount at 1826
9998 run: base address is 1827
9999 mem: location 1938 is 6
9998 run: address to copy is 1834
9998 run: its type is address
9999 mem: location 1834 is 1896
9999 mem: decrementing refcount of 1886: 3 -> 2
9999 mem: incrementing refcount of 1896: 4 -> 5
9999 mem: storing 1896 in location 1939
 104 run: {c: "character"} <- index {f: ("address" "array" "character"), "lookup": ()}, {row: "number"}
9999 mem: location 1939 is 1896
9999 mem: skipping refcount at 1896
9998 run: base address is 1897
9999 mem: location 1933 is 1
9998 run: address to copy is 1899
9998 run: its type is character
9999 mem: location 1899 is 32
9999 mem: storing 32 in location 1940
 104 run: print {screen: ("address" "screen")}, {c: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1940 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 191 -> 192
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 6
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 6
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 16
9999 mem: storing 16 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 16
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 16
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 6
9999 mem: location 2037 is 30
9999 mem: storing 180 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 180
9999 mem: location 2041 is 16
9999 mem: storing 196 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 138 -> 139
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 196
9998 run: address to copy to is 1408
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1408
9999 mem: storing 7 in location 1409
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 16
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 16
9999 mem: storing 17 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 17
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 17 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: print {screen: ("address" "screen")}, {space: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1934 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 192 -> 193
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 6
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 6
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 17
9999 mem: storing 17 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 17
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 17
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 6
9999 mem: location 2037 is 30
9999 mem: storing 180 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 180
9999 mem: location 2041 is 17
9999 mem: storing 197 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 139 -> 140
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 197
9998 run: address to copy to is 1410
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1410
9999 mem: storing 7 in location 1411
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 17
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 17
9999 mem: storing 18 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 18
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 18 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {col: "number"} <- add {col: "number"}, {1: "literal"}
9999 mem: location 1938 is 6
9999 mem: storing 7 in location 1938
 104 run: jump {: "offset"}
9998 run: jumping to instruction 14
 104 run: {done?: "boolean"} <- equal {col: "number"}, {8: "literal"}
9999 mem: location 1938 is 7
9999 mem: storing 0 in location 1935
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1935 is 0
9998 run: jump-if fell through
 104 run: {f: ("address" "array" "character")} <- index {board: ("address" "array" "address" "array" "character"), "lookup": ()}, {col: "number"}
9999 mem: location 1932 is 1826
9999 mem: skipping refcount at 1826
9998 run: base address is 1827
9999 mem: location 1938 is 7
9998 run: address to copy is 1835
9998 run: its type is address
9999 mem: location 1835 is 1906
9999 mem: decrementing refcount of 1896: 5 -> 4
9999 mem: incrementing refcount of 1906: 3 -> 4
9999 mem: storing 1906 in location 1939
 104 run: {c: "character"} <- index {f: ("address" "array" "character"), "lookup": ()}, {row: "number"}
9999 mem: location 1939 is 1906
9999 mem: skipping refcount at 1906
9998 run: base address is 1907
9999 mem: location 1933 is 1
9998 run: address to copy is 1909
9998 run: its type is character
9999 mem: location 1909 is 80
9999 mem: storing 80 in location 1940
 104 run: print {screen: ("address" "screen")}, {c: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1940 is 80
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 193 -> 194
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 80 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 80
  90 print-character: 80 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 6
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 6
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 18
9999 mem: storing 18 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 18
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 18
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 80
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 6
9999 mem: location 2037 is 30
9999 mem: storing 180 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 180
9999 mem: location 2041 is 18
9999 mem: storing 198 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 140 -> 141
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 80
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 80
9999 mem: location 2033 is 7
9999 mem: storing 80 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 198
9998 run: address to copy to is 1412
9999 mem: location 2050 is 80
9999 mem: location 2051 is 7
9999 mem: storing 80 in location 1412
9999 mem: storing 7 in location 1413
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 18
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 18
9999 mem: storing 19 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 19
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 19 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: print {screen: ("address" "screen")}, {space: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1934 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 194 -> 195
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 6
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 6
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 19
9999 mem: storing 19 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 19
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 19
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 6
9999 mem: location 2037 is 30
9999 mem: storing 180 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 180
9999 mem: location 2041 is 19
9999 mem: storing 199 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 141 -> 142
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 199
9998 run: address to copy to is 1414
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1414
9999 mem: storing 7 in location 1415
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 19
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 19
9999 mem: storing 20 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 20
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 20 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {col: "number"} <- add {col: "number"}, {1: "literal"}
9999 mem: location 1938 is 7
9999 mem: storing 8 in location 1938
 104 run: jump {: "offset"}
9998 run: jumping to instruction 14
 104 run: {done?: "boolean"} <- equal {col: "number"}, {8: "literal"}
9999 mem: location 1938 is 8
9999 mem: storing 1 in location 1935
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1935 is 1
9998 run: jumping to instruction 22
 104 run: {row: "number"} <- subtract {row: "number"}, {1: "literal"}
9999 mem: location 1933 is 1
9999 mem: storing 0 in location 1933
 104 run: cursor-to-next-line {screen: ("address" "screen")}
9999 mem: location 1931 is 1008
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 2
9999 mem: allocating size 4
9999 abandon: picking up space from free-list of size 4
9999 mem: new alloc from free list: 2059
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 195 -> 196
9999 mem: storing 1008 in location 2062
 105 run: {screen: ("address" "screen")} <- cursor-down {screen: ("address" "screen")}
9999 mem: location 2062 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 196 -> 197
9999 mem: storing 1008 in location 1003
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1004
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 6
9999 mem: storing 6 in location 1005
 106 run: {max: "number"} <- subtract {height: "number"}, {1: "literal"}
9999 mem: location 1004 is 12
9999 mem: storing 11 in location 1006
 106 run: {at-bottom?: "boolean"} <- greater-or-equal {row: "number"}, {max: "number"}
9999 mem: location 1005 is 6
9999 mem: location 1006 is 11
9999 mem: storing 0 in location 1007
 106 run: jump-if {at-bottom?: "boolean"}, {: "offset"}
9999 mem: location 1007 is 0
9998 run: jump-if fell through
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1005 is 6
9999 mem: storing 7 in location 1005
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {row: "number"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 6
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 1005 is 7
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 7 in location 1011
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 1008 in location 2062
 105 run: {screen: ("address" "screen")} <- cursor-to-start-of-line {screen: ("address" "screen")}
9999 mem: location 2062 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1961
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 197 -> 198
9999 mem: storing 1008 in location 1964
 106 run: {row: "number"} <- cursor-position {screen: ("address" "screen")}
9999 mem: location 1964 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 2063
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 198 -> 199
9999 mem: storing 1008 in location 2066
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2066 is 1008
9998 run: jump-unless fell through
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2066 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 2066 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 2067
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2066 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 2066 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 20
9999 mem: storing 20 in location 2068
 107 run: return {row: "number"}, {column: "number"}
9999 mem: location 2067 is 7
9999 mem: location 2068 is 20
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1965
 106 run: {column: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1966
 106 run: {screen: ("address" "screen")} <- move-cursor {screen: ("address" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1964 is 1008
9999 mem: location 1965 is 7
9999 mem: location 1966 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 2063
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 199 -> 200
9999 mem: storing 1008 in location 2066
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 2067
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 2068
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2066 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 2066 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 2067 is 7
9999 mem: location 2066 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 7 in location 1011
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 2066 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 2068 is 0
9999 mem: location 2066 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2066 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 1008 in location 1964
 106 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1964 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 1008 in location 2062
 105 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2062 is 1008
9999 abandon: saving in free-list of size 4
9999 trace: reply: decrementing callstack depth from 4
 104 run: jump {: "offset"}
9998 run: jumping to instruction 6
 104 run: {done?: "boolean"} <- lesser-than {row: "number"}, {0: "literal"}
9999 mem: location 1933 is 0
9999 mem: storing 0 in location 1935
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1935 is 0
9998 run: jump-if fell through
 104 run: {rank: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1933 is 0
9999 mem: storing 1 in location 1936
 104 run: print-integer {screen: ("address" "screen")}, {rank: "number"}
9999 mem: location 1931 is 1008
9999 mem: location 1936 is 1
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1736
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 200 -> 201
9999 mem: storing 1008 in location 1739
 105 run: {n: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1740
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1741
9999 mem: storing 0 in location 1742
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1742 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1741
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1743
9999 mem: storing 0 in location 1744
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1744 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1743
 105 run: {s: ("address" "array" "character")} <- to-text_3 {n: "number"}
9999 mem: location 1740 is 1
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 16
9999 mem: allocating size 18
9999 abandon: picking up space from free-list of size 18
9999 mem: new alloc from free list: 1943
9990 schedule: to-text_3/print-integer/print-board/run_1001/scenario_making-a-move
 106 run: {n: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1946
 106 run: jump-if {n: "number"}, {: "offset"}
9999 mem: location 1946 is 1
9998 run: jumping to instruction 6
 106 run: {negate-result: "boolean"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1948
 106 run: {negative?: "boolean"} <- lesser-than {n: "number"}, {0: "literal"}
9999 mem: location 1946 is 1
9999 mem: storing 0 in location 1949
 106 run: jump-unless {negative?: "boolean"}, {: "offset"}
9999 mem: location 1949 is 0
9998 run: jumping to instruction 13
 106 run: {tmp: ("address" "buffer")} <- new-buffer {30: "literal"}
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1961
 107 run: {capacity: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 30 in location 1964
 107 run: {result: ("address" "buffer")} <- new {buffer: "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 2327
9999 mem: storing 0 in location 2327
9999 mem: storing 0 in location 2328
9999 mem: storing 0 in location 2329
9999 mem: incrementing refcount of 2327: 0 -> 1
9999 mem: storing 2327 in location 1965
 107 run: {result: ("address" "buffer"), "lookup": ()} <- put {result: ("address" "buffer"), "lookup": ()}, {length: "offset"}, {0: "literal"}
9999 mem: location 1965 is 2327
9999 mem: skipping refcount at 2327
9999 mem: location 2328 is 0
9999 mem: location 2329 is 0
9999 mem: location 1965 is 2327
9999 mem: skipping refcount at 2327
9998 run: address to copy to is 2328
9999 mem: storing 0 in location 2328
 107 run: {data: ("address" "array" "character")} <- new {character: "type"}, {capacity: "number"}
9999 mem: location 1964 is 30
9999 mem: array size is 30
9999 mem: allocating size 32
9999 mem: new alloc: 2330
9999 mem: storing 0 in location 2330
9999 mem: storing 0 in location 2331
9999 mem: storing 0 in location 2332
9999 mem: storing 0 in location 2333
9999 mem: storing 0 in location 2334
9999 mem: storing 0 in location 2335
9999 mem: storing 0 in location 2336
9999 mem: storing 0 in location 2337
9999 mem: storing 0 in location 2338
9999 mem: storing 0 in location 2339
9999 mem: storing 0 in location 2340
9999 mem: storing 0 in location 2341
9999 mem: storing 0 in location 2342
9999 mem: storing 0 in location 2343
9999 mem: storing 0 in location 2344
9999 mem: storing 0 in location 2345
9999 mem: storing 0 in location 2346
9999 mem: storing 0 in location 2347
9999 mem: storing 0 in location 2348
9999 mem: storing 0 in location 2349
9999 mem: storing 0 in location 2350
9999 mem: storing 0 in location 2351
9999 mem: storing 0 in location 2352
9999 mem: storing 0 in location 2353
9999 mem: storing 0 in location 2354
9999 mem: storing 0 in location 2355
9999 mem: storing 0 in location 2356
9999 mem: storing 0 in location 2357
9999 mem: storing 0 in location 2358
9999 mem: storing 0 in location 2359
9999 mem: storing 0 in location 2360
9999 mem: storing 0 in location 2361
9999 mem: storing 30 in location 2331
9999 mem: incrementing refcount of 2330: 0 -> 1
9999 mem: storing 2330 in location 1966
 107 run: {result: ("address" "buffer"), "lookup": ()} <- put {result: ("address" "buffer"), "lookup": ()}, {data: "offset"}, {data: ("address" "array" "character")}
9999 mem: location 1965 is 2327
9999 mem: skipping refcount at 2327
9999 mem: location 2328 is 0
9999 mem: location 2329 is 0
9999 mem: location 1966 is 2330
9999 mem: location 1965 is 2327
9999 mem: skipping refcount at 2327
9998 run: address to copy to is 2329
9999 mem: incrementing refcount of 2330: 1 -> 2
9999 mem: storing 2330 in location 2329
 107 run: return {result: ("address" "buffer")}
9999 mem: location 1965 is 2327
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 2327
9999 mem: incrementing refcount of 2327: 1 -> 2
9999 mem: storing 2327 in location 1950
 106 run: {digit-base: "number"} <- copy {48: "literal"}
9999 mem: storing 48 in location 1951
 106 run: {done?: "boolean"} <- equal {n: "number"}, {0: "literal"}
9999 mem: location 1946 is 1
9999 mem: storing 0 in location 1952
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1952 is 0
9998 run: jump-if fell through
 106 run: {n: "number"}, {digit: "number"} <- divide-with-remainder {n: "number"}, {10: "literal"}
9999 mem: location 1946 is 1
9999 mem: storing 0 in location 1946
9999 mem: storing 1 in location 1953
 106 run: {c: "character"} <- add {digit-base: "number"}, {digit: "number"}
9999 mem: location 1951 is 48
9999 mem: location 1953 is 1
9999 mem: storing 49 in location 1954
 106 run: {tmp: ("address" "buffer")} <- append_2 {tmp: ("address" "buffer")}, {c: "character"}
9999 mem: location 1950 is 2327
9999 mem: location 1954 is 49
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 2002
 107 run: {in: ("address" "buffer")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 2327: 2 -> 3
9999 mem: storing 2327 in location 2005
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 49 in location 2006
 107 run: {len: "number"} <- get {in: ("address" "buffer"), "lookup": ()}, {length: "offset"}
9999 mem: location 2005 is 2327
9999 mem: skipping refcount at 2327
9999 mem: location 2328 is 0
9999 mem: location 2329 is 2330
9999 mem: location 2005 is 2327
9999 mem: skipping refcount at 2327
9998 run: address to copy is 2328
9998 run: its type is "number"
9999 mem: location 2328 is 0
9999 mem: storing 0 in location 2007
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal", "backspace": ()}
9999 mem: location 2006 is 49
9999 mem: storing 0 in location 2008
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2008 is 0
9998 run: jumping to instruction 15
 107 run: {full?: "boolean"} <- buffer-full? {in: ("address" "buffer")}
9999 mem: location 2005 is 2327
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 108 run: {in: ("address" "buffer")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 2327: 3 -> 4
9999 mem: storing 2327 in location 1003
 108 run: {len: "number"} <- get {in: ("address" "buffer"), "lookup": ()}, {length: "offset"}
9999 mem: location 1003 is 2327
9999 mem: skipping refcount at 2327
9999 mem: location 2328 is 0
9999 mem: location 2329 is 2330
9999 mem: location 1003 is 2327
9999 mem: skipping refcount at 2327
9998 run: address to copy is 2328
9998 run: its type is "number"
9999 mem: location 2328 is 0
9999 mem: storing 0 in location 1004
 108 run: {s: ("address" "array" "character")} <- get {in: ("address" "buffer"), "lookup": ()}, {data: "offset"}
9999 mem: location 1003 is 2327
9999 mem: skipping refcount at 2327
9999 mem: location 2328 is 0
9999 mem: location 2329 is 2330
9999 mem: location 1003 is 2327
9999 mem: skipping refcount at 2327
9998 run: address to copy is 2329
9998 run: its type is ("address" "array" "character")
9999 mem: location 2329 is 2330
9999 mem: incrementing refcount of 2330: 2 -> 3
9999 mem: storing 2330 in location 1005
 108 run: {capacity: "number"} <- length {s: ("address" "array" "character"), "lookup": ()}
9999 mem: location 1005 is 2330
9999 mem: skipping refcount at 2330
9999 mem: storing 30 in location 1006
 108 run: {result: "boolean"} <- greater-or-equal {len: "number"}, {capacity: "number"}
9999 mem: location 1004 is 0
9999 mem: location 1006 is 30
9999 mem: storing 0 in location 1007
 108 run: reply {result: "boolean"}
9999 mem: location 1007 is 0
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 0
9999 mem: storing 0 in location 2010
 107 run: jump-unless {full?: "boolean"}, {: "offset"}
9999 mem: location 2010 is 0
9998 run: jumping to instruction 20
 107 run: {s: ("address" "array" "character")} <- get {in: ("address" "buffer"), "lookup": ()}, {data: "offset"}
9999 mem: location 2005 is 2327
9999 mem: skipping refcount at 2327
9999 mem: location 2328 is 0
9999 mem: location 2329 is 2330
9999 mem: location 2005 is 2327
9999 mem: skipping refcount at 2327
9998 run: address to copy is 2329
9998 run: its type is ("address" "array" "character")
9999 mem: location 2329 is 2330
9999 mem: incrementing refcount of 2330: 3 -> 4
9999 mem: storing 2330 in location 2011
 107 run: {s: ("address" "array" "character"), "lookup": ()} <- put-index {s: ("address" "array" "character"), "lookup": ()}, {len: "number"}, {c: "character"}
9999 mem: location 2011 is 2330
9999 mem: skipping refcount at 2330
9999 mem: location 2007 is 0
9998 run: address to copy to is 2332
9999 mem: location 2006 is 49
9999 mem: storing 49 in location 2332
 107 run: {len: "number"} <- add {len: "number"}, {1: "literal"}
9999 mem: location 2007 is 0
9999 mem: storing 1 in location 2007
 107 run: {in: ("address" "buffer"), "lookup": ()} <- put {in: ("address" "buffer"), "lookup": ()}, {length: "offset"}, {len: "number"}
9999 mem: location 2005 is 2327
9999 mem: skipping refcount at 2327
9999 mem: location 2328 is 0
9999 mem: location 2329 is 2330
9999 mem: location 2007 is 1
9999 mem: location 2005 is 2327
9999 mem: skipping refcount at 2327
9998 run: address to copy to is 2328
9999 mem: storing 1 in location 2328
 107 run: reply {in: ("address" "buffer"), "same-as-ingredient": "0"}
9999 mem: location 2005 is 2327
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 2327
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 2327 in location 1950
 106 run: jump {: "offset"}
9998 run: jumping to instruction 17
 106 run: {done?: "boolean"} <- equal {n: "number"}, {0: "literal"}
9999 mem: location 1946 is 0
9999 mem: storing 1 in location 1952
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1952 is 1
9998 run: jumping to instruction 23
 106 run: jump-unless {negate-result: "boolean"}, {: "offset"}
9999 mem: location 1948 is 0
9998 run: jumping to instruction 28
 106 run: {len: "number"} <- get {tmp: ("address" "buffer"), "lookup": ()}, {length: "offset"}
9999 mem: location 1950 is 2327
9999 mem: skipping refcount at 2327
9999 mem: location 2328 is 1
9999 mem: location 2329 is 2330
9999 mem: location 1950 is 2327
9999 mem: skipping refcount at 2327
9998 run: address to copy is 2328
9998 run: its type is "number"
9999 mem: location 2328 is 1
9999 mem: storing 1 in location 1956
 106 run: {buf: ("address" "array" "character")} <- get {tmp: ("address" "buffer"), "lookup": ()}, {data: "offset"}
9999 mem: location 1950 is 2327
9999 mem: skipping refcount at 2327
9999 mem: location 2328 is 1
9999 mem: location 2329 is 2330
9999 mem: location 1950 is 2327
9999 mem: skipping refcount at 2327
9998 run: address to copy is 2329
9998 run: its type is ("address" "array" "character")
9999 mem: location 2329 is 2330
9999 mem: incrementing refcount of 2330: 4 -> 5
9999 mem: storing 2330 in location 1957
 106 run: {result: ("address" "array" "character")} <- new {character: "type"}, {len: "number"}
9999 mem: location 1956 is 1
9999 mem: array size is 1
9999 mem: allocating size 3
9999 mem: new alloc: 2362
9999 mem: storing 0 in location 2362
9999 mem: storing 0 in location 2363
9999 mem: storing 0 in location 2364
9999 mem: storing 1 in location 2363
9999 mem: incrementing refcount of 2362: 0 -> 1
9999 mem: storing 2362 in location 1947
 106 run: {i: "number"} <- subtract {len: "number"}, {1: "literal"}
9999 mem: location 1956 is 1
9999 mem: storing 0 in location 1958
 106 run: {j: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1959
 106 run: {done?: "boolean"} <- lesser-than {i: "number"}, {0: "literal"}
9999 mem: location 1958 is 0
9999 mem: storing 0 in location 1952
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1952 is 0
9998 run: jump-if fell through
 106 run: {src: "character"} <- index {buf: ("address" "array" "character"), "lookup": ()}, {i: "number"}
9999 mem: location 1957 is 2330
9999 mem: skipping refcount at 2330
9998 run: base address is 2331
9999 mem: location 1958 is 0
9998 run: address to copy is 2332
9998 run: its type is character
9999 mem: location 2332 is 49
9999 mem: storing 49 in location 1960
 106 run: {result: ("address" "array" "character"), "lookup": ()} <- put-index {result: ("address" "array" "character"), "lookup": ()}, {j: "number"}, {src: "character"}
9999 mem: location 1947 is 2362
9999 mem: skipping refcount at 2362
9999 mem: location 1959 is 0
9998 run: address to copy to is 2364
9999 mem: location 1960 is 49
9999 mem: storing 49 in location 2364
 106 run: {i: "number"} <- subtract {i: "number"}, {1: "literal"}
9999 mem: location 1958 is 0
9999 mem: storing -1 in location 1958
 106 run: {j: "number"} <- add {j: "number"}, {1: "literal"}
9999 mem: location 1959 is 0
9999 mem: storing 1 in location 1959
 106 run: jump {: "offset"}
9998 run: jumping to instruction 35
 106 run: {done?: "boolean"} <- lesser-than {i: "number"}, {0: "literal"}
9999 mem: location 1958 is -1
9999 mem: storing 1 in location 1952
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1952 is 1
9998 run: jumping to instruction 42
 106 run: reply {result: ("address" "array" "character")}
9999 mem: location 1947 is 2362
9999 abandon: saving in free-list of size 18
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 2362
9999 mem: incrementing refcount of 2362: 1 -> 2
9999 mem: storing 2362 in location 1745
 105 run: {screen: ("address" "screen")} <- print_2 {screen: ("address" "screen")}, {s: ("address" "array" "character")}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1739 is 1008
9999 mem: location 1745 is 2362
9999 mem: location 1741 is 7
9999 mem: location 1743 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 11
9999 mem: allocating size 13
9999 abandon: picking up space from free-list of size 13
9999 mem: new alloc from free list: 2015
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 201 -> 202
9999 mem: storing 1008 in location 2018
 106 run: {s: ("address" "array" "character")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 2362: 2 -> 3
9999 mem: storing 2362 in location 2019
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 2020
9999 mem: storing 1 in location 2021
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2021 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2022
9999 mem: storing 1 in location 2023
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2023 is 1
9998 run: jumping to instruction 12
 106 run: {len: "number"} <- length {s: ("address" "array" "character"), "lookup": ()}
9999 mem: location 2019 is 2362
9999 mem: skipping refcount at 2362
9999 mem: storing 1 in location 2024
 106 run: {i: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 2025
 106 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 2025 is 0
9999 mem: location 2024 is 1
9999 mem: storing 0 in location 2026
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 2026 is 0
9998 run: jump-if fell through
 106 run: {c: "character"} <- index {s: ("address" "array" "character"), "lookup": ()}, {i: "number"}
9999 mem: location 2019 is 2362
9999 mem: skipping refcount at 2362
9998 run: base address is 2363
9999 mem: location 2025 is 0
9998 run: address to copy is 2364
9998 run: its type is character
9999 mem: location 2364 is 49
9999 mem: storing 49 in location 2027
 106 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 2018 is 1008
9999 mem: location 2027 is 49
9999 mem: location 2020 is 7
9999 mem: location 2022 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 202 -> 203
9999 mem: storing 1008 in location 2031
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 49 in location 2032
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 2033
9999 mem: storing 1 in location 2034
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 1 in location 2036
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 49
  90 print-character: 49 
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 2039
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 7
9999 mem: storing 1 in location 2040
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 7
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 2041
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 0
9999 mem: storing 1 in location 2040
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 0
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 49
9999 mem: storing 0 in location 2042
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 7
9999 mem: location 2037 is 30
9999 mem: storing 210 in location 2045
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 210
9999 mem: location 2041 is 0
9999 mem: storing 210 in location 2045
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 142 -> 143
9999 mem: storing 1014 in location 2046
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 49
9999 mem: storing 0 in location 2048
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 49
9999 mem: location 2033 is 7
9999 mem: storing 49 in location 2050
9999 mem: storing 7 in location 2051
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 210
9998 run: address to copy to is 1436
9999 mem: location 2050 is 49
9999 mem: location 2051 is 7
9999 mem: storing 49 in location 1436
9999 mem: storing 7 in location 1437
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 0
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 0
9999 mem: storing 1 in location 2041
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 1
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
 106 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 2025 is 0
9999 mem: storing 1 in location 2025
 106 run: jump {: "offset"}
9998 run: jumping to instruction 16
 106 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 2025 is 1
9999 mem: location 2024 is 1
9999 mem: storing 1 in location 2026
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 2026 is 1
9998 run: jumping to instruction 22
 106 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2018 is 1008
9999 abandon: saving in free-list of size 13
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 1008 in location 1739
 105 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1739 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 4
 104 run: {print_10_1: ("address" "array" "character")} <- new {" | ": "literal-string"}
9999 mem: new string alloc: 2365
9999 mem: decrementing refcount of 2322: 2 -> 1
9999 mem: incrementing refcount of 2365: 0 -> 1
9999 mem: storing 2365 in location 1937
 104 run: print_2 {screen: ("address" "screen")}, {print_10_1: ("address" "array" "character")}
9999 mem: location 1931 is 1008
9999 mem: location 1937 is 2365
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 11
9999 mem: allocating size 13
9999 abandon: picking up space from free-list of size 13
9999 mem: new alloc from free list: 2015
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 203 -> 204
9999 mem: storing 1008 in location 2018
 105 run: {s: ("address" "array" "character")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 2365: 1 -> 2
9999 mem: storing 2365 in location 2019
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2020
9999 mem: storing 0 in location 2021
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2021 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2020
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2022
9999 mem: storing 0 in location 2023
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2023 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2022
 105 run: {len: "number"} <- length {s: ("address" "array" "character"), "lookup": ()}
9999 mem: location 2019 is 2365
9999 mem: skipping refcount at 2365
9999 mem: storing 3 in location 2024
 105 run: {i: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 2025
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 2025 is 0
9999 mem: location 2024 is 3
9999 mem: storing 0 in location 2026
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 2026 is 0
9998 run: jump-if fell through
 105 run: {c: "character"} <- index {s: ("address" "array" "character"), "lookup": ()}, {i: "number"}
9999 mem: location 2019 is 2365
9999 mem: skipping refcount at 2365
9998 run: base address is 2366
9999 mem: location 2025 is 0
9998 run: address to copy is 2367
9998 run: its type is character
9999 mem: location 2367 is 32
9999 mem: storing 32 in location 2027
 105 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 2018 is 1008
9999 mem: location 2027 is 32
9999 mem: location 2020 is 7
9999 mem: location 2022 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 204 -> 205
9999 mem: storing 1008 in location 2031
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 2033
9999 mem: storing 1 in location 2034
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 1 in location 2036
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 2039
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 7
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 7
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 2041
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 1
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 1
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 7
9999 mem: location 2037 is 30
9999 mem: storing 210 in location 2045
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 210
9999 mem: location 2041 is 1
9999 mem: storing 211 in location 2045
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 143 -> 144
9999 mem: storing 1014 in location 2046
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 211
9998 run: address to copy to is 1438
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1438
9999 mem: storing 7 in location 1439
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 1
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 1
9999 mem: storing 2 in location 2041
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 2
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 2025 is 0
9999 mem: storing 1 in location 2025
 105 run: jump {: "offset"}
9998 run: jumping to instruction 16
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 2025 is 1
9999 mem: location 2024 is 3
9999 mem: storing 0 in location 2026
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 2026 is 0
9998 run: jump-if fell through
 105 run: {c: "character"} <- index {s: ("address" "array" "character"), "lookup": ()}, {i: "number"}
9999 mem: location 2019 is 2365
9999 mem: skipping refcount at 2365
9998 run: base address is 2366
9999 mem: location 2025 is 1
9998 run: address to copy is 2368
9998 run: its type is character
9999 mem: location 2368 is 124
9999 mem: storing 124 in location 2027
 105 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 2018 is 1008
9999 mem: location 2027 is 124
9999 mem: location 2020 is 7
9999 mem: location 2022 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 205 -> 206
9999 mem: storing 1008 in location 2031
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 124 in location 2032
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 2033
9999 mem: storing 1 in location 2034
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 1 in location 2036
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 124
  90 print-character: 124 
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 2039
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 7
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 7
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 2041
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 2
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 2
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 124
9999 mem: storing 0 in location 2042
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 7
9999 mem: location 2037 is 30
9999 mem: storing 210 in location 2045
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 210
9999 mem: location 2041 is 2
9999 mem: storing 212 in location 2045
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 144 -> 145
9999 mem: storing 1014 in location 2046
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 124
9999 mem: storing 0 in location 2048
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 124
9999 mem: location 2033 is 7
9999 mem: storing 124 in location 2050
9999 mem: storing 7 in location 2051
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 212
9998 run: address to copy to is 1440
9999 mem: location 2050 is 124
9999 mem: location 2051 is 7
9999 mem: storing 124 in location 1440
9999 mem: storing 7 in location 1441
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 2
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 2
9999 mem: storing 3 in location 2041
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 3
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 2025 is 1
9999 mem: storing 2 in location 2025
 105 run: jump {: "offset"}
9998 run: jumping to instruction 16
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 2025 is 2
9999 mem: location 2024 is 3
9999 mem: storing 0 in location 2026
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 2026 is 0
9998 run: jump-if fell through
 105 run: {c: "character"} <- index {s: ("address" "array" "character"), "lookup": ()}, {i: "number"}
9999 mem: location 2019 is 2365
9999 mem: skipping refcount at 2365
9998 run: base address is 2366
9999 mem: location 2025 is 2
9998 run: address to copy is 2369
9998 run: its type is character
9999 mem: location 2369 is 32
9999 mem: storing 32 in location 2027
 105 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 2018 is 1008
9999 mem: location 2027 is 32
9999 mem: location 2020 is 7
9999 mem: location 2022 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 206 -> 207
9999 mem: storing 1008 in location 2031
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 2033
9999 mem: storing 1 in location 2034
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 1 in location 2036
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 2039
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 7
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 7
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 2041
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 3
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 3
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 7
9999 mem: location 2037 is 30
9999 mem: storing 210 in location 2045
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 210
9999 mem: location 2041 is 3
9999 mem: storing 213 in location 2045
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 145 -> 146
9999 mem: storing 1014 in location 2046
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 213
9998 run: address to copy to is 1442
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1442
9999 mem: storing 7 in location 1443
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 3
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 3
9999 mem: storing 4 in location 2041
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 4
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 2025 is 2
9999 mem: storing 3 in location 2025
 105 run: jump {: "offset"}
9998 run: jumping to instruction 16
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 2025 is 3
9999 mem: location 2024 is 3
9999 mem: storing 1 in location 2026
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 2026 is 1
9998 run: jumping to instruction 22
 105 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2018 is 1008
9999 abandon: saving in free-list of size 13
9999 trace: reply: decrementing callstack depth from 4
 104 run: {col: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1938
 104 run: {done?: "boolean"} <- equal {col: "number"}, {8: "literal"}
9999 mem: location 1938 is 0
9999 mem: storing 0 in location 1935
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1935 is 0
9998 run: jump-if fell through
 104 run: {f: ("address" "array" "character")} <- index {board: ("address" "array" "address" "array" "character"), "lookup": ()}, {col: "number"}
9999 mem: location 1932 is 1826
9999 mem: skipping refcount at 1826
9998 run: base address is 1827
9999 mem: location 1938 is 0
9998 run: address to copy is 1828
9998 run: its type is address
9999 mem: location 1828 is 1836
9999 mem: decrementing refcount of 1906: 4 -> 3
9999 mem: incrementing refcount of 1836: 2 -> 3
9999 mem: storing 1836 in location 1939
 104 run: {c: "character"} <- index {f: ("address" "array" "character"), "lookup": ()}, {row: "number"}
9999 mem: location 1939 is 1836
9999 mem: skipping refcount at 1836
9998 run: base address is 1837
9999 mem: location 1933 is 0
9998 run: address to copy is 1838
9998 run: its type is character
9999 mem: location 1838 is 82
9999 mem: storing 82 in location 1940
 104 run: print {screen: ("address" "screen")}, {c: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1940 is 82
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 207 -> 208
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 82 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 82
  90 print-character: 82 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 7
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 7
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 4
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 4
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 82
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 7
9999 mem: location 2037 is 30
9999 mem: storing 210 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 210
9999 mem: location 2041 is 4
9999 mem: storing 214 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 146 -> 147
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 82
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 82
9999 mem: location 2033 is 7
9999 mem: storing 82 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 214
9998 run: address to copy to is 1444
9999 mem: location 2050 is 82
9999 mem: location 2051 is 7
9999 mem: storing 82 in location 1444
9999 mem: storing 7 in location 1445
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 4
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 4
9999 mem: storing 5 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 5
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: print {screen: ("address" "screen")}, {space: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1934 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 208 -> 209
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 7
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 7
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 5
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 5
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 7
9999 mem: location 2037 is 30
9999 mem: storing 210 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 210
9999 mem: location 2041 is 5
9999 mem: storing 215 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 147 -> 148
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 215
9998 run: address to copy to is 1446
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1446
9999 mem: storing 7 in location 1447
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 5
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 5
9999 mem: storing 6 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 6
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {col: "number"} <- add {col: "number"}, {1: "literal"}
9999 mem: location 1938 is 0
9999 mem: storing 1 in location 1938
 104 run: jump {: "offset"}
9998 run: jumping to instruction 14
 104 run: {done?: "boolean"} <- equal {col: "number"}, {8: "literal"}
9999 mem: location 1938 is 1
9999 mem: storing 0 in location 1935
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1935 is 0
9998 run: jump-if fell through
 104 run: {f: ("address" "array" "character")} <- index {board: ("address" "array" "address" "array" "character"), "lookup": ()}, {col: "number"}
9999 mem: location 1932 is 1826
9999 mem: skipping refcount at 1826
9998 run: base address is 1827
9999 mem: location 1938 is 1
9998 run: address to copy is 1829
9998 run: its type is address
9999 mem: location 1829 is 1846
9999 mem: decrementing refcount of 1836: 3 -> 2
9999 mem: incrementing refcount of 1846: 2 -> 3
9999 mem: storing 1846 in location 1939
 104 run: {c: "character"} <- index {f: ("address" "array" "character"), "lookup": ()}, {row: "number"}
9999 mem: location 1939 is 1846
9999 mem: skipping refcount at 1846
9998 run: base address is 1847
9999 mem: location 1933 is 0
9998 run: address to copy is 1848
9998 run: its type is character
9999 mem: location 1848 is 78
9999 mem: storing 78 in location 1940
 104 run: print {screen: ("address" "screen")}, {c: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1940 is 78
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 209 -> 210
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 78 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
9990 schedule: print/print-board/run_1001/scenario_making-a-move
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 78
  90 print-character: 78 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 7
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 7
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 6
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 6
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 78
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 7
9999 mem: location 2037 is 30
9999 mem: storing 210 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 210
9999 mem: location 2041 is 6
9999 mem: storing 216 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 148 -> 149
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 78
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 78
9999 mem: location 2033 is 7
9999 mem: storing 78 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 216
9998 run: address to copy to is 1448
9999 mem: location 2050 is 78
9999 mem: location 2051 is 7
9999 mem: storing 78 in location 1448
9999 mem: storing 7 in location 1449
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 6
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 6
9999 mem: storing 7 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 7
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: print {screen: ("address" "screen")}, {space: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1934 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 210 -> 211
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 7
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 7
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 7
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 7
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 7
9999 mem: location 2037 is 30
9999 mem: storing 210 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 210
9999 mem: location 2041 is 7
9999 mem: storing 217 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 149 -> 150
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 217
9998 run: address to copy to is 1450
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1450
9999 mem: storing 7 in location 1451
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 7
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 7
9999 mem: storing 8 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 8
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {col: "number"} <- add {col: "number"}, {1: "literal"}
9999 mem: location 1938 is 1
9999 mem: storing 2 in location 1938
 104 run: jump {: "offset"}
9998 run: jumping to instruction 14
 104 run: {done?: "boolean"} <- equal {col: "number"}, {8: "literal"}
9999 mem: location 1938 is 2
9999 mem: storing 0 in location 1935
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1935 is 0
9998 run: jump-if fell through
 104 run: {f: ("address" "array" "character")} <- index {board: ("address" "array" "address" "array" "character"), "lookup": ()}, {col: "number"}
9999 mem: location 1932 is 1826
9999 mem: skipping refcount at 1826
9998 run: base address is 1827
9999 mem: location 1938 is 2
9998 run: address to copy is 1830
9998 run: its type is address
9999 mem: location 1830 is 1856
9999 mem: decrementing refcount of 1846: 3 -> 2
9999 mem: incrementing refcount of 1856: 2 -> 3
9999 mem: storing 1856 in location 1939
 104 run: {c: "character"} <- index {f: ("address" "array" "character"), "lookup": ()}, {row: "number"}
9999 mem: location 1939 is 1856
9999 mem: skipping refcount at 1856
9998 run: base address is 1857
9999 mem: location 1933 is 0
9998 run: address to copy is 1858
9998 run: its type is character
9999 mem: location 1858 is 66
9999 mem: storing 66 in location 1940
 104 run: print {screen: ("address" "screen")}, {c: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1940 is 66
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 211 -> 212
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 66 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 66
  90 print-character: 66 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 7
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 7
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 8
9999 mem: storing 8 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 8
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 8
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 66
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 7
9999 mem: location 2037 is 30
9999 mem: storing 210 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 210
9999 mem: location 2041 is 8
9999 mem: storing 218 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 150 -> 151
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 66
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 66
9999 mem: location 2033 is 7
9999 mem: storing 66 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 218
9998 run: address to copy to is 1452
9999 mem: location 2050 is 66
9999 mem: location 2051 is 7
9999 mem: storing 66 in location 1452
9999 mem: storing 7 in location 1453
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 8
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 8
9999 mem: storing 9 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 9
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 9 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: print {screen: ("address" "screen")}, {space: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1934 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 212 -> 213
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 7
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 7
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 9
9999 mem: storing 9 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 9
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 9
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 7
9999 mem: location 2037 is 30
9999 mem: storing 210 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 210
9999 mem: location 2041 is 9
9999 mem: storing 219 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 151 -> 152
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 219
9998 run: address to copy to is 1454
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1454
9999 mem: storing 7 in location 1455
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 9
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 9
9999 mem: storing 10 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 10
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 10 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {col: "number"} <- add {col: "number"}, {1: "literal"}
9999 mem: location 1938 is 2
9999 mem: storing 3 in location 1938
 104 run: jump {: "offset"}
9998 run: jumping to instruction 14
 104 run: {done?: "boolean"} <- equal {col: "number"}, {8: "literal"}
9999 mem: location 1938 is 3
9999 mem: storing 0 in location 1935
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1935 is 0
9998 run: jump-if fell through
 104 run: {f: ("address" "array" "character")} <- index {board: ("address" "array" "address" "array" "character"), "lookup": ()}, {col: "number"}
9999 mem: location 1932 is 1826
9999 mem: skipping refcount at 1826
9998 run: base address is 1827
9999 mem: location 1938 is 3
9998 run: address to copy is 1831
9998 run: its type is address
9999 mem: location 1831 is 1866
9999 mem: decrementing refcount of 1856: 3 -> 2
9999 mem: incrementing refcount of 1866: 2 -> 3
9999 mem: storing 1866 in location 1939
 104 run: {c: "character"} <- index {f: ("address" "array" "character"), "lookup": ()}, {row: "number"}
9999 mem: location 1939 is 1866
9999 mem: skipping refcount at 1866
9998 run: base address is 1867
9999 mem: location 1933 is 0
9998 run: address to copy is 1868
9998 run: its type is character
9999 mem: location 1868 is 81
9999 mem: storing 81 in location 1940
 104 run: print {screen: ("address" "screen")}, {c: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1940 is 81
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 213 -> 214
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 81 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 81
  90 print-character: 81 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 7
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 7
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 10
9999 mem: storing 10 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 10
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 10
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 81
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 7
9999 mem: location 2037 is 30
9999 mem: storing 210 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 210
9999 mem: location 2041 is 10
9999 mem: storing 220 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 152 -> 153
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 81
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 81
9999 mem: location 2033 is 7
9999 mem: storing 81 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 220
9998 run: address to copy to is 1456
9999 mem: location 2050 is 81
9999 mem: location 2051 is 7
9999 mem: storing 81 in location 1456
9999 mem: storing 7 in location 1457
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 10
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 10
9999 mem: storing 11 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 11
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 11 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: print {screen: ("address" "screen")}, {space: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1934 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 214 -> 215
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 7
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 7
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 11
9999 mem: storing 11 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 11
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 11
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 7
9999 mem: location 2037 is 30
9999 mem: storing 210 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 210
9999 mem: location 2041 is 11
9999 mem: storing 221 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 153 -> 154
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 221
9998 run: address to copy to is 1458
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1458
9999 mem: storing 7 in location 1459
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 11
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 11
9999 mem: storing 12 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 12
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 12 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {col: "number"} <- add {col: "number"}, {1: "literal"}
9999 mem: location 1938 is 3
9999 mem: storing 4 in location 1938
 104 run: jump {: "offset"}
9998 run: jumping to instruction 14
 104 run: {done?: "boolean"} <- equal {col: "number"}, {8: "literal"}
9999 mem: location 1938 is 4
9999 mem: storing 0 in location 1935
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1935 is 0
9998 run: jump-if fell through
 104 run: {f: ("address" "array" "character")} <- index {board: ("address" "array" "address" "array" "character"), "lookup": ()}, {col: "number"}
9999 mem: location 1932 is 1826
9999 mem: skipping refcount at 1826
9998 run: base address is 1827
9999 mem: location 1938 is 4
9998 run: address to copy is 1832
9998 run: its type is address
9999 mem: location 1832 is 1876
9999 mem: decrementing refcount of 1866: 3 -> 2
9999 mem: incrementing refcount of 1876: 2 -> 3
9999 mem: storing 1876 in location 1939
 104 run: {c: "character"} <- index {f: ("address" "array" "character"), "lookup": ()}, {row: "number"}
9999 mem: location 1939 is 1876
9999 mem: skipping refcount at 1876
9998 run: base address is 1877
9999 mem: location 1933 is 0
9998 run: address to copy is 1878
9998 run: its type is character
9999 mem: location 1878 is 75
9999 mem: storing 75 in location 1940
 104 run: print {screen: ("address" "screen")}, {c: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1940 is 75
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 215 -> 216
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 75 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 75
  90 print-character: 75 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 7
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 7
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 12
9999 mem: storing 12 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 12
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 75
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 7
9999 mem: location 2037 is 30
9999 mem: storing 210 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 210
9999 mem: location 2041 is 12
9999 mem: storing 222 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 154 -> 155
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 75
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 75
9999 mem: location 2033 is 7
9999 mem: storing 75 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 222
9998 run: address to copy to is 1460
9999 mem: location 2050 is 75
9999 mem: location 2051 is 7
9999 mem: storing 75 in location 1460
9999 mem: storing 7 in location 1461
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 12
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 12
9999 mem: storing 13 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 13
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 13 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: print {screen: ("address" "screen")}, {space: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1934 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 216 -> 217
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 7
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 7
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 13
9999 mem: storing 13 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 13
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 13
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 7
9999 mem: location 2037 is 30
9999 mem: storing 210 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 210
9999 mem: location 2041 is 13
9999 mem: storing 223 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 155 -> 156
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 223
9998 run: address to copy to is 1462
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1462
9999 mem: storing 7 in location 1463
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 13
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 13
9999 mem: storing 14 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 14
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 14 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {col: "number"} <- add {col: "number"}, {1: "literal"}
9999 mem: location 1938 is 4
9999 mem: storing 5 in location 1938
 104 run: jump {: "offset"}
9998 run: jumping to instruction 14
 104 run: {done?: "boolean"} <- equal {col: "number"}, {8: "literal"}
9999 mem: location 1938 is 5
9999 mem: storing 0 in location 1935
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1935 is 0
9998 run: jump-if fell through
 104 run: {f: ("address" "array" "character")} <- index {board: ("address" "array" "address" "array" "character"), "lookup": ()}, {col: "number"}
9999 mem: location 1932 is 1826
9999 mem: skipping refcount at 1826
9998 run: base address is 1827
9999 mem: location 1938 is 5
9998 run: address to copy is 1833
9998 run: its type is address
9999 mem: location 1833 is 1886
9999 mem: decrementing refcount of 1876: 3 -> 2
9999 mem: incrementing refcount of 1886: 2 -> 3
9999 mem: storing 1886 in location 1939
 104 run: {c: "character"} <- index {f: ("address" "array" "character"), "lookup": ()}, {row: "number"}
9999 mem: location 1939 is 1886
9999 mem: skipping refcount at 1886
9998 run: base address is 1887
9999 mem: location 1933 is 0
9998 run: address to copy is 1888
9998 run: its type is character
9999 mem: location 1888 is 66
9999 mem: storing 66 in location 1940
 104 run: print {screen: ("address" "screen")}, {c: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1940 is 66
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 217 -> 218
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 66 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
9990 schedule: print/print-board/run_1001/scenario_making-a-move
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 66
  90 print-character: 66 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 7
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 7
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 14
9999 mem: storing 14 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 14
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 14
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 66
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 7
9999 mem: location 2037 is 30
9999 mem: storing 210 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 210
9999 mem: location 2041 is 14
9999 mem: storing 224 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 156 -> 157
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 66
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 66
9999 mem: location 2033 is 7
9999 mem: storing 66 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 224
9998 run: address to copy to is 1464
9999 mem: location 2050 is 66
9999 mem: location 2051 is 7
9999 mem: storing 66 in location 1464
9999 mem: storing 7 in location 1465
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 14
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 14
9999 mem: storing 15 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 15
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 15 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: print {screen: ("address" "screen")}, {space: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1934 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 218 -> 219
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 7
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 7
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 15
9999 mem: storing 15 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 15
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 15
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 7
9999 mem: location 2037 is 30
9999 mem: storing 210 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 210
9999 mem: location 2041 is 15
9999 mem: storing 225 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 157 -> 158
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 225
9998 run: address to copy to is 1466
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1466
9999 mem: storing 7 in location 1467
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 15
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 15
9999 mem: storing 16 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 16
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 16 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {col: "number"} <- add {col: "number"}, {1: "literal"}
9999 mem: location 1938 is 5
9999 mem: storing 6 in location 1938
 104 run: jump {: "offset"}
9998 run: jumping to instruction 14
 104 run: {done?: "boolean"} <- equal {col: "number"}, {8: "literal"}
9999 mem: location 1938 is 6
9999 mem: storing 0 in location 1935
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1935 is 0
9998 run: jump-if fell through
 104 run: {f: ("address" "array" "character")} <- index {board: ("address" "array" "address" "array" "character"), "lookup": ()}, {col: "number"}
9999 mem: location 1932 is 1826
9999 mem: skipping refcount at 1826
9998 run: base address is 1827
9999 mem: location 1938 is 6
9998 run: address to copy is 1834
9998 run: its type is address
9999 mem: location 1834 is 1896
9999 mem: decrementing refcount of 1886: 3 -> 2
9999 mem: incrementing refcount of 1896: 4 -> 5
9999 mem: storing 1896 in location 1939
 104 run: {c: "character"} <- index {f: ("address" "array" "character"), "lookup": ()}, {row: "number"}
9999 mem: location 1939 is 1896
9999 mem: skipping refcount at 1896
9998 run: base address is 1897
9999 mem: location 1933 is 0
9998 run: address to copy is 1898
9998 run: its type is character
9999 mem: location 1898 is 78
9999 mem: storing 78 in location 1940
 104 run: print {screen: ("address" "screen")}, {c: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1940 is 78
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 219 -> 220
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 78 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 78
  90 print-character: 78 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 7
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 7
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 16
9999 mem: storing 16 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 16
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 16
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 78
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 7
9999 mem: location 2037 is 30
9999 mem: storing 210 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 210
9999 mem: location 2041 is 16
9999 mem: storing 226 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 158 -> 159
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 78
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 78
9999 mem: location 2033 is 7
9999 mem: storing 78 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 226
9998 run: address to copy to is 1468
9999 mem: location 2050 is 78
9999 mem: location 2051 is 7
9999 mem: storing 78 in location 1468
9999 mem: storing 7 in location 1469
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 16
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 16
9999 mem: storing 17 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 17
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 17 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: print {screen: ("address" "screen")}, {space: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1934 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 220 -> 221
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 7
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 7
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 17
9999 mem: storing 17 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 17
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 17
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 7
9999 mem: location 2037 is 30
9999 mem: storing 210 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 210
9999 mem: location 2041 is 17
9999 mem: storing 227 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 159 -> 160
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 227
9998 run: address to copy to is 1470
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1470
9999 mem: storing 7 in location 1471
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 17
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 17
9999 mem: storing 18 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 18
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 18 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {col: "number"} <- add {col: "number"}, {1: "literal"}
9999 mem: location 1938 is 6
9999 mem: storing 7 in location 1938
 104 run: jump {: "offset"}
9998 run: jumping to instruction 14
 104 run: {done?: "boolean"} <- equal {col: "number"}, {8: "literal"}
9999 mem: location 1938 is 7
9999 mem: storing 0 in location 1935
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1935 is 0
9998 run: jump-if fell through
 104 run: {f: ("address" "array" "character")} <- index {board: ("address" "array" "address" "array" "character"), "lookup": ()}, {col: "number"}
9999 mem: location 1932 is 1826
9999 mem: skipping refcount at 1826
9998 run: base address is 1827
9999 mem: location 1938 is 7
9998 run: address to copy is 1835
9998 run: its type is address
9999 mem: location 1835 is 1906
9999 mem: decrementing refcount of 1896: 5 -> 4
9999 mem: incrementing refcount of 1906: 3 -> 4
9999 mem: storing 1906 in location 1939
 104 run: {c: "character"} <- index {f: ("address" "array" "character"), "lookup": ()}, {row: "number"}
9999 mem: location 1939 is 1906
9999 mem: skipping refcount at 1906
9998 run: base address is 1907
9999 mem: location 1933 is 0
9998 run: address to copy is 1908
9998 run: its type is character
9999 mem: location 1908 is 82
9999 mem: storing 82 in location 1940
 104 run: print {screen: ("address" "screen")}, {c: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1940 is 82
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 221 -> 222
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 82 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 82
  90 print-character: 82 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 7
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 7
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 18
9999 mem: storing 18 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 18
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 18
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 82
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 7
9999 mem: location 2037 is 30
9999 mem: storing 210 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 210
9999 mem: location 2041 is 18
9999 mem: storing 228 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 160 -> 161
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 82
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 82
9999 mem: location 2033 is 7
9999 mem: storing 82 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 228
9998 run: address to copy to is 1472
9999 mem: location 2050 is 82
9999 mem: location 2051 is 7
9999 mem: storing 82 in location 1472
9999 mem: storing 7 in location 1473
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 18
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 18
9999 mem: storing 19 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 19
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 19 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: print {screen: ("address" "screen")}, {space: "character"}
9999 mem: location 1931 is 1008
9999 mem: location 1934 is 32
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 222 -> 223
9999 mem: storing 1008 in location 2031
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2033
9999 mem: storing 0 in location 2034
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2033
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 0 in location 2036
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2035
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 105 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 105 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 2039
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 7
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 7
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 105 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 19
9999 mem: storing 19 in location 2041
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 19
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 19
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 105 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 7
9999 mem: location 2037 is 30
9999 mem: storing 210 in location 2045
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 210
9999 mem: location 2041 is 19
9999 mem: storing 229 in location 2045
 105 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 161 -> 162
9999 mem: storing 1014 in location 2046
 105 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 105 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 229
9998 run: address to copy to is 1474
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1474
9999 mem: storing 7 in location 1475
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 19
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 19
9999 mem: storing 20 in location 2041
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 20
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 20 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {col: "number"} <- add {col: "number"}, {1: "literal"}
9999 mem: location 1938 is 7
9999 mem: storing 8 in location 1938
 104 run: jump {: "offset"}
9998 run: jumping to instruction 14
 104 run: {done?: "boolean"} <- equal {col: "number"}, {8: "literal"}
9999 mem: location 1938 is 8
9999 mem: storing 1 in location 1935
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1935 is 1
9998 run: jumping to instruction 22
 104 run: {row: "number"} <- subtract {row: "number"}, {1: "literal"}
9999 mem: location 1933 is 0
9999 mem: storing -1 in location 1933
 104 run: cursor-to-next-line {screen: ("address" "screen")}
9999 mem: location 1931 is 1008
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 2
9999 mem: allocating size 4
9999 abandon: picking up space from free-list of size 4
9999 mem: new alloc from free list: 2059
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 223 -> 224
9999 mem: storing 1008 in location 2062
 105 run: {screen: ("address" "screen")} <- cursor-down {screen: ("address" "screen")}
9999 mem: location 2062 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 224 -> 225
9999 mem: storing 1008 in location 1003
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1004
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 7
9999 mem: storing 7 in location 1005
 106 run: {max: "number"} <- subtract {height: "number"}, {1: "literal"}
9999 mem: location 1004 is 12
9999 mem: storing 11 in location 1006
 106 run: {at-bottom?: "boolean"} <- greater-or-equal {row: "number"}, {max: "number"}
9999 mem: location 1005 is 7
9999 mem: location 1006 is 11
9999 mem: storing 0 in location 1007
 106 run: jump-if {at-bottom?: "boolean"}, {: "offset"}
9999 mem: location 1007 is 0
9998 run: jump-if fell through
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1005 is 7
9999 mem: storing 8 in location 1005
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {row: "number"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 7
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 1005 is 8
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 8 in location 1011
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 1008 in location 2062
 105 run: {screen: ("address" "screen")} <- cursor-to-start-of-line {screen: ("address" "screen")}
9999 mem: location 2062 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1961
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 225 -> 226
9999 mem: storing 1008 in location 1964
 106 run: {row: "number"} <- cursor-position {screen: ("address" "screen")}
9999 mem: location 1964 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 2063
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 226 -> 227
9999 mem: storing 1008 in location 2066
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2066 is 1008
9998 run: jump-unless fell through
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2066 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 2066 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 8
9999 mem: storing 8 in location 2067
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2066 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 2066 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 20
9999 mem: storing 20 in location 2068
 107 run: return {row: "number"}, {column: "number"}
9999 mem: location 2067 is 8
9999 mem: location 2068 is 20
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 8
9999 mem: storing 8 in location 1965
 106 run: {column: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1966
 106 run: {screen: ("address" "screen")} <- move-cursor {screen: ("address" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1964 is 1008
9999 mem: location 1965 is 8
9999 mem: location 1966 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 2063
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 227 -> 228
9999 mem: storing 1008 in location 2066
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 8 in location 2067
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 2068
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2066 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 2066 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 2067 is 8
9999 mem: location 2066 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 8 in location 1011
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 2066 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 20
9999 mem: location 1013 is 1014
9999 mem: location 2068 is 0
9999 mem: location 2066 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2066 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 1008 in location 1964
 106 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1964 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 1008 in location 2062
 105 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2062 is 1008
9999 abandon: saving in free-list of size 4
9999 trace: reply: decrementing callstack depth from 4
 104 run: jump {: "offset"}
9998 run: jumping to instruction 6
 104 run: {done?: "boolean"} <- lesser-than {row: "number"}, {0: "literal"}
9999 mem: location 1933 is -1
9999 mem: storing 1 in location 1935
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1935 is 1
9998 run: jumping to instruction 26
 104 run: {print_26_1: ("address" "array" "character")} <- new {"  +----------------": "literal-string"}
9999 mem: new string alloc: 2370
9999 mem: incrementing refcount of 2370: 0 -> 1
9999 mem: storing 2370 in location 1941
 104 run: print_2 {screen: ("address" "screen")}, {print_26_1: ("address" "array" "character")}
9999 mem: location 1931 is 1008
9999 mem: location 1941 is 2370
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 11
9999 mem: allocating size 13
9999 abandon: picking up space from free-list of size 13
9999 mem: new alloc from free list: 2015
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 228 -> 229
9999 mem: storing 1008 in location 2018
 105 run: {s: ("address" "array" "character")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 2370: 1 -> 2
9999 mem: storing 2370 in location 2019
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2020
9999 mem: storing 0 in location 2021
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2021 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2020
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2022
9999 mem: storing 0 in location 2023
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2023 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2022
 105 run: {len: "number"} <- length {s: ("address" "array" "character"), "lookup": ()}
9999 mem: location 2019 is 2370
9999 mem: skipping refcount at 2370
9999 mem: storing 19 in location 2024
 105 run: {i: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 2025
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 2025 is 0
9999 mem: location 2024 is 19
9999 mem: storing 0 in location 2026
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 2026 is 0
9998 run: jump-if fell through
 105 run: {c: "character"} <- index {s: ("address" "array" "character"), "lookup": ()}, {i: "number"}
9999 mem: location 2019 is 2370
9999 mem: skipping refcount at 2370
9998 run: base address is 2371
9999 mem: location 2025 is 0
9998 run: address to copy is 2372
9998 run: its type is character
9999 mem: location 2372 is 32
9999 mem: storing 32 in location 2027
 105 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 2018 is 1008
9999 mem: location 2027 is 32
9999 mem: location 2020 is 7
9999 mem: location 2022 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 229 -> 230
9999 mem: storing 1008 in location 2031
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 2033
9999 mem: storing 1 in location 2034
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 1 in location 2036
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 8
9999 mem: storing 8 in location 2039
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 8
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 8
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 2041
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 0
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 0
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 8
9999 mem: location 2037 is 30
9999 mem: storing 240 in location 2045
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 240
9999 mem: location 2041 is 0
9999 mem: storing 240 in location 2045
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 162 -> 163
9999 mem: storing 1014 in location 2046
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 240
9998 run: address to copy to is 1496
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1496
9999 mem: storing 7 in location 1497
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 0
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 0
9999 mem: storing 1 in location 2041
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 1
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 2025 is 0
9999 mem: storing 1 in location 2025
 105 run: jump {: "offset"}
9998 run: jumping to instruction 16
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 2025 is 1
9999 mem: location 2024 is 19
9999 mem: storing 0 in location 2026
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 2026 is 0
9998 run: jump-if fell through
 105 run: {c: "character"} <- index {s: ("address" "array" "character"), "lookup": ()}, {i: "number"}
9999 mem: location 2019 is 2370
9999 mem: skipping refcount at 2370
9998 run: base address is 2371
9999 mem: location 2025 is 1
9998 run: address to copy is 2373
9998 run: its type is character
9999 mem: location 2373 is 32
9999 mem: storing 32 in location 2027
 105 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 2018 is 1008
9999 mem: location 2027 is 32
9999 mem: location 2020 is 7
9999 mem: location 2022 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 230 -> 231
9999 mem: storing 1008 in location 2031
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 2033
9999 mem: storing 1 in location 2034
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 1 in location 2036
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 1
9998 run: jumping to instruction 12
9990 schedule: print/print_2/print-board/run_1001/scenario_making-a-move
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 8
9999 mem: storing 8 in location 2039
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 8
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 8
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 2041
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 1
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 1
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 8
9999 mem: location 2037 is 30
9999 mem: storing 240 in location 2045
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 240
9999 mem: location 2041 is 1
9999 mem: storing 241 in location 2045
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 163 -> 164
9999 mem: storing 1014 in location 2046
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 241
9998 run: address to copy to is 1498
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1498
9999 mem: storing 7 in location 1499
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 1
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 1
9999 mem: storing 2 in location 2041
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 2
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 2025 is 1
9999 mem: storing 2 in location 2025
 105 run: jump {: "offset"}
9998 run: jumping to instruction 16
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 2025 is 2
9999 mem: location 2024 is 19
9999 mem: storing 0 in location 2026
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 2026 is 0
9998 run: jump-if fell through
 105 run: {c: "character"} <- index {s: ("address" "array" "character"), "lookup": ()}, {i: "number"}
9999 mem: location 2019 is 2370
9999 mem: skipping refcount at 2370
9998 run: base address is 2371
9999 mem: location 2025 is 2
9998 run: address to copy is 2374
9998 run: its type is character
9999 mem: location 2374 is 43
9999 mem: storing 43 in location 2027
 105 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 2018 is 1008
9999 mem: location 2027 is 43
9999 mem: location 2020 is 7
9999 mem: location 2022 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 231 -> 232
9999 mem: storing 1008 in location 2031
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 43 in location 2032
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 2033
9999 mem: storing 1 in location 2034
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 1 in location 2036
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 43
  90 print-character: 43 
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 8
9999 mem: storing 8 in location 2039
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 8
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 8
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 2041
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 2
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 2
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 43
9999 mem: storing 0 in location 2042
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 8
9999 mem: location 2037 is 30
9999 mem: storing 240 in location 2045
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 240
9999 mem: location 2041 is 2
9999 mem: storing 242 in location 2045
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 164 -> 165
9999 mem: storing 1014 in location 2046
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 43
9999 mem: storing 0 in location 2048
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 43
9999 mem: location 2033 is 7
9999 mem: storing 43 in location 2050
9999 mem: storing 7 in location 2051
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 242
9998 run: address to copy to is 1500
9999 mem: location 2050 is 43
9999 mem: location 2051 is 7
9999 mem: storing 43 in location 1500
9999 mem: storing 7 in location 1501
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 2
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 2
9999 mem: storing 3 in location 2041
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 3
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 2025 is 2
9999 mem: storing 3 in location 2025
 105 run: jump {: "offset"}
9998 run: jumping to instruction 16
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 2025 is 3
9999 mem: location 2024 is 19
9999 mem: storing 0 in location 2026
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 2026 is 0
9998 run: jump-if fell through
 105 run: {c: "character"} <- index {s: ("address" "array" "character"), "lookup": ()}, {i: "number"}
9999 mem: location 2019 is 2370
9999 mem: skipping refcount at 2370
9998 run: base address is 2371
9999 mem: location 2025 is 3
9998 run: address to copy is 2375
9998 run: its type is character
9999 mem: location 2375 is 45
9999 mem: storing 45 in location 2027
 105 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 2018 is 1008
9999 mem: location 2027 is 45
9999 mem: location 2020 is 7
9999 mem: location 2022 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 232 -> 233
9999 mem: storing 1008 in location 2031
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 45 in location 2032
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 2033
9999 mem: storing 1 in location 2034
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 1 in location 2036
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 45
  90 print-character: 45 
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 8
9999 mem: storing 8 in location 2039
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 8
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 8
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 2041
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 3
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 3
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 45
9999 mem: storing 0 in location 2042
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 8
9999 mem: location 2037 is 30
9999 mem: storing 240 in location 2045
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 240
9999 mem: location 2041 is 3
9999 mem: storing 243 in location 2045
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 165 -> 166
9999 mem: storing 1014 in location 2046
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 45
9999 mem: storing 0 in location 2048
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 45
9999 mem: location 2033 is 7
9999 mem: storing 45 in location 2050
9999 mem: storing 7 in location 2051
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 243
9998 run: address to copy to is 1502
9999 mem: location 2050 is 45
9999 mem: location 2051 is 7
9999 mem: storing 45 in location 1502
9999 mem: storing 7 in location 1503
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 3
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 3
9999 mem: storing 4 in location 2041
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 4
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 2025 is 3
9999 mem: storing 4 in location 2025
 105 run: jump {: "offset"}
9998 run: jumping to instruction 16
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 2025 is 4
9999 mem: location 2024 is 19
9999 mem: storing 0 in location 2026
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 2026 is 0
9998 run: jump-if fell through
 105 run: {c: "character"} <- index {s: ("address" "array" "character"), "lookup": ()}, {i: "number"}
9999 mem: location 2019 is 2370
9999 mem: skipping refcount at 2370
9998 run: base address is 2371
9999 mem: location 2025 is 4
9998 run: address to copy is 2376
9998 run: its type is character
9999 mem: location 2376 is 45
9999 mem: storing 45 in location 2027
 105 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 2018 is 1008
9999 mem: location 2027 is 45
9999 mem: location 2020 is 7
9999 mem: location 2022 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 233 -> 234
9999 mem: storing 1008 in location 2031
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 45 in location 2032
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 2033
9999 mem: storing 1 in location 2034
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 1 in location 2036
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 45
  90 print-character: 45 
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 8
9999 mem: storing 8 in location 2039
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 8
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 8
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 2041
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 4
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 4
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 45
9999 mem: storing 0 in location 2042
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 8
9999 mem: location 2037 is 30
9999 mem: storing 240 in location 2045
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 240
9999 mem: location 2041 is 4
9999 mem: storing 244 in location 2045
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 166 -> 167
9999 mem: storing 1014 in location 2046
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 45
9999 mem: storing 0 in location 2048
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 45
9999 mem: location 2033 is 7
9999 mem: storing 45 in location 2050
9999 mem: storing 7 in location 2051
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 244
9998 run: address to copy to is 1504
9999 mem: location 2050 is 45
9999 mem: location 2051 is 7
9999 mem: storing 45 in location 1504
9999 mem: storing 7 in location 1505
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 4
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 4
9999 mem: storing 5 in location 2041
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 5
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 2025 is 4
9999 mem: storing 5 in location 2025
 105 run: jump {: "offset"}
9998 run: jumping to instruction 16
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 2025 is 5
9999 mem: location 2024 is 19
9999 mem: storing 0 in location 2026
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 2026 is 0
9998 run: jump-if fell through
 105 run: {c: "character"} <- index {s: ("address" "array" "character"), "lookup": ()}, {i: "number"}
9999 mem: location 2019 is 2370
9999 mem: skipping refcount at 2370
9998 run: base address is 2371
9999 mem: location 2025 is 5
9998 run: address to copy is 2377
9998 run: its type is character
9999 mem: location 2377 is 45
9999 mem: storing 45 in location 2027
 105 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 2018 is 1008
9999 mem: location 2027 is 45
9999 mem: location 2020 is 7
9999 mem: location 2022 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 234 -> 235
9999 mem: storing 1008 in location 2031
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 45 in location 2032
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 2033
9999 mem: storing 1 in location 2034
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 1 in location 2036
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 45
  90 print-character: 45 
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 8
9999 mem: storing 8 in location 2039
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 8
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 8
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 2041
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 5
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 5
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 45
9999 mem: storing 0 in location 2042
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 8
9999 mem: location 2037 is 30
9999 mem: storing 240 in location 2045
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 240
9999 mem: location 2041 is 5
9999 mem: storing 245 in location 2045
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 167 -> 168
9999 mem: storing 1014 in location 2046
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 45
9999 mem: storing 0 in location 2048
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 45
9999 mem: location 2033 is 7
9999 mem: storing 45 in location 2050
9999 mem: storing 7 in location 2051
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 245
9998 run: address to copy to is 1506
9999 mem: location 2050 is 45
9999 mem: location 2051 is 7
9999 mem: storing 45 in location 1506
9999 mem: storing 7 in location 1507
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 5
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 5
9999 mem: storing 6 in location 2041
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 6
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 2025 is 5
9999 mem: storing 6 in location 2025
 105 run: jump {: "offset"}
9998 run: jumping to instruction 16
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 2025 is 6
9999 mem: location 2024 is 19
9999 mem: storing 0 in location 2026
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 2026 is 0
9998 run: jump-if fell through
 105 run: {c: "character"} <- index {s: ("address" "array" "character"), "lookup": ()}, {i: "number"}
9999 mem: location 2019 is 2370
9999 mem: skipping refcount at 2370
9998 run: base address is 2371
9999 mem: location 2025 is 6
9998 run: address to copy is 2378
9998 run: its type is character
9999 mem: location 2378 is 45
9999 mem: storing 45 in location 2027
 105 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 2018 is 1008
9999 mem: location 2027 is 45
9999 mem: location 2020 is 7
9999 mem: location 2022 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 235 -> 236
9999 mem: storing 1008 in location 2031
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 45 in location 2032
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 2033
9999 mem: storing 1 in location 2034
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 1 in location 2036
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 45
  90 print-character: 45 
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 8
9999 mem: storing 8 in location 2039
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 8
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 8
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 2041
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 6
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 6
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 45
9999 mem: storing 0 in location 2042
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 8
9999 mem: location 2037 is 30
9999 mem: storing 240 in location 2045
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 240
9999 mem: location 2041 is 6
9999 mem: storing 246 in location 2045
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 168 -> 169
9999 mem: storing 1014 in location 2046
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 45
9999 mem: storing 0 in location 2048
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 45
9999 mem: location 2033 is 7
9999 mem: storing 45 in location 2050
9999 mem: storing 7 in location 2051
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 246
9998 run: address to copy to is 1508
9999 mem: location 2050 is 45
9999 mem: location 2051 is 7
9999 mem: storing 45 in location 1508
9999 mem: storing 7 in location 1509
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 6
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 6
9999 mem: storing 7 in location 2041
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 7
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 2025 is 6
9999 mem: storing 7 in location 2025
 105 run: jump {: "offset"}
9998 run: jumping to instruction 16
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 2025 is 7
9999 mem: location 2024 is 19
9999 mem: storing 0 in location 2026
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 2026 is 0
9998 run: jump-if fell through
 105 run: {c: "character"} <- index {s: ("address" "array" "character"), "lookup": ()}, {i: "number"}
9999 mem: location 2019 is 2370
9999 mem: skipping refcount at 2370
9998 run: base address is 2371
9999 mem: location 2025 is 7
9998 run: address to copy is 2379
9998 run: its type is character
9999 mem: location 2379 is 45
9999 mem: storing 45 in location 2027
 105 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 2018 is 1008
9999 mem: location 2027 is 45
9999 mem: location 2020 is 7
9999 mem: location 2022 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 236 -> 237
9999 mem: storing 1008 in location 2031
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 45 in location 2032
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 2033
9999 mem: storing 1 in location 2034
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 1 in location 2036
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 45
  90 print-character: 45 
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 8
9999 mem: storing 8 in location 2039
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 8
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 8
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 2041
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 7
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 7
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 45
9999 mem: storing 0 in location 2042
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 8
9999 mem: location 2037 is 30
9999 mem: storing 240 in location 2045
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 240
9999 mem: location 2041 is 7
9999 mem: storing 247 in location 2045
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 169 -> 170
9999 mem: storing 1014 in location 2046
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 45
9999 mem: storing 0 in location 2048
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 45
9999 mem: location 2033 is 7
9999 mem: storing 45 in location 2050
9999 mem: storing 7 in location 2051
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 247
9998 run: address to copy to is 1510
9999 mem: location 2050 is 45
9999 mem: location 2051 is 7
9999 mem: storing 45 in location 1510
9999 mem: storing 7 in location 1511
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 7
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 7
9999 mem: storing 8 in location 2041
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 8
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 2025 is 7
9999 mem: storing 8 in location 2025
 105 run: jump {: "offset"}
9998 run: jumping to instruction 16
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 2025 is 8
9999 mem: location 2024 is 19
9999 mem: storing 0 in location 2026
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 2026 is 0
9998 run: jump-if fell through
 105 run: {c: "character"} <- index {s: ("address" "array" "character"), "lookup": ()}, {i: "number"}
9999 mem: location 2019 is 2370
9999 mem: skipping refcount at 2370
9998 run: base address is 2371
9999 mem: location 2025 is 8
9998 run: address to copy is 2380
9998 run: its type is character
9999 mem: location 2380 is 45
9999 mem: storing 45 in location 2027
 105 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 2018 is 1008
9999 mem: location 2027 is 45
9999 mem: location 2020 is 7
9999 mem: location 2022 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 237 -> 238
9999 mem: storing 1008 in location 2031
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 45 in location 2032
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 2033
9999 mem: storing 1 in location 2034
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 1 in location 2036
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 45
  90 print-character: 45 
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 8
9999 mem: storing 8 in location 2039
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 8
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 8
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 8
9999 mem: storing 8 in location 2041
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 8
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 8
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 45
9999 mem: storing 0 in location 2042
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 8
9999 mem: location 2037 is 30
9999 mem: storing 240 in location 2045
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 240
9999 mem: location 2041 is 8
9999 mem: storing 248 in location 2045
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 170 -> 171
9999 mem: storing 1014 in location 2046
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 45
9999 mem: storing 0 in location 2048
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 45
9999 mem: location 2033 is 7
9999 mem: storing 45 in location 2050
9999 mem: storing 7 in location 2051
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 248
9998 run: address to copy to is 1512
9999 mem: location 2050 is 45
9999 mem: location 2051 is 7
9999 mem: storing 45 in location 1512
9999 mem: storing 7 in location 1513
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 8
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 8
9999 mem: storing 9 in location 2041
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 9
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 9 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 2025 is 8
9999 mem: storing 9 in location 2025
 105 run: jump {: "offset"}
9998 run: jumping to instruction 16
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 2025 is 9
9999 mem: location 2024 is 19
9999 mem: storing 0 in location 2026
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 2026 is 0
9998 run: jump-if fell through
 105 run: {c: "character"} <- index {s: ("address" "array" "character"), "lookup": ()}, {i: "number"}
9999 mem: location 2019 is 2370
9999 mem: skipping refcount at 2370
9998 run: base address is 2371
9999 mem: location 2025 is 9
9998 run: address to copy is 2381
9998 run: its type is character
9999 mem: location 2381 is 45
9999 mem: storing 45 in location 2027
 105 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 2018 is 1008
9999 mem: location 2027 is 45
9999 mem: location 2020 is 7
9999 mem: location 2022 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 238 -> 239
9999 mem: storing 1008 in location 2031
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 45 in location 2032
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 2033
9999 mem: storing 1 in location 2034
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 1 in location 2036
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 45
  90 print-character: 45 
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
9990 schedule: print/print_2/print-board/run_1001/scenario_making-a-move
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 8
9999 mem: storing 8 in location 2039
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 8
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 8
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 9
9999 mem: storing 9 in location 2041
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 9
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 9
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 45
9999 mem: storing 0 in location 2042
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 8
9999 mem: location 2037 is 30
9999 mem: storing 240 in location 2045
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 240
9999 mem: location 2041 is 9
9999 mem: storing 249 in location 2045
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 171 -> 172
9999 mem: storing 1014 in location 2046
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 45
9999 mem: storing 0 in location 2048
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 45
9999 mem: location 2033 is 7
9999 mem: storing 45 in location 2050
9999 mem: storing 7 in location 2051
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 249
9998 run: address to copy to is 1514
9999 mem: location 2050 is 45
9999 mem: location 2051 is 7
9999 mem: storing 45 in location 1514
9999 mem: storing 7 in location 1515
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 9
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 9
9999 mem: storing 10 in location 2041
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 10
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 10 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 2025 is 9
9999 mem: storing 10 in location 2025
 105 run: jump {: "offset"}
9998 run: jumping to instruction 16
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 2025 is 10
9999 mem: location 2024 is 19
9999 mem: storing 0 in location 2026
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 2026 is 0
9998 run: jump-if fell through
 105 run: {c: "character"} <- index {s: ("address" "array" "character"), "lookup": ()}, {i: "number"}
9999 mem: location 2019 is 2370
9999 mem: skipping refcount at 2370
9998 run: base address is 2371
9999 mem: location 2025 is 10
9998 run: address to copy is 2382
9998 run: its type is character
9999 mem: location 2382 is 45
9999 mem: storing 45 in location 2027
 105 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 2018 is 1008
9999 mem: location 2027 is 45
9999 mem: location 2020 is 7
9999 mem: location 2022 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 239 -> 240
9999 mem: storing 1008 in location 2031
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 45 in location 2032
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 2033
9999 mem: storing 1 in location 2034
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 1 in location 2036
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 45
  90 print-character: 45 
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 8
9999 mem: storing 8 in location 2039
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 8
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 8
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 10
9999 mem: storing 10 in location 2041
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 10
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 10
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 45
9999 mem: storing 0 in location 2042
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 8
9999 mem: location 2037 is 30
9999 mem: storing 240 in location 2045
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 240
9999 mem: location 2041 is 10
9999 mem: storing 250 in location 2045
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 172 -> 173
9999 mem: storing 1014 in location 2046
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 45
9999 mem: storing 0 in location 2048
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 45
9999 mem: location 2033 is 7
9999 mem: storing 45 in location 2050
9999 mem: storing 7 in location 2051
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 250
9998 run: address to copy to is 1516
9999 mem: location 2050 is 45
9999 mem: location 2051 is 7
9999 mem: storing 45 in location 1516
9999 mem: storing 7 in location 1517
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 10
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 10
9999 mem: storing 11 in location 2041
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 11
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 11 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 2025 is 10
9999 mem: storing 11 in location 2025
 105 run: jump {: "offset"}
9998 run: jumping to instruction 16
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 2025 is 11
9999 mem: location 2024 is 19
9999 mem: storing 0 in location 2026
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 2026 is 0
9998 run: jump-if fell through
 105 run: {c: "character"} <- index {s: ("address" "array" "character"), "lookup": ()}, {i: "number"}
9999 mem: location 2019 is 2370
9999 mem: skipping refcount at 2370
9998 run: base address is 2371
9999 mem: location 2025 is 11
9998 run: address to copy is 2383
9998 run: its type is character
9999 mem: location 2383 is 45
9999 mem: storing 45 in location 2027
 105 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 2018 is 1008
9999 mem: location 2027 is 45
9999 mem: location 2020 is 7
9999 mem: location 2022 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 240 -> 241
9999 mem: storing 1008 in location 2031
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 45 in location 2032
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 2033
9999 mem: storing 1 in location 2034
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 1 in location 2036
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 45
  90 print-character: 45 
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 8
9999 mem: storing 8 in location 2039
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 8
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 8
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 11
9999 mem: storing 11 in location 2041
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 11
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 11
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 45
9999 mem: storing 0 in location 2042
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 8
9999 mem: location 2037 is 30
9999 mem: storing 240 in location 2045
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 240
9999 mem: location 2041 is 11
9999 mem: storing 251 in location 2045
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 173 -> 174
9999 mem: storing 1014 in location 2046
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 45
9999 mem: storing 0 in location 2048
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 45
9999 mem: location 2033 is 7
9999 mem: storing 45 in location 2050
9999 mem: storing 7 in location 2051
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 251
9998 run: address to copy to is 1518
9999 mem: location 2050 is 45
9999 mem: location 2051 is 7
9999 mem: storing 45 in location 1518
9999 mem: storing 7 in location 1519
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 11
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 11
9999 mem: storing 12 in location 2041
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 12
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 12 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 2025 is 11
9999 mem: storing 12 in location 2025
 105 run: jump {: "offset"}
9998 run: jumping to instruction 16
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 2025 is 12
9999 mem: location 2024 is 19
9999 mem: storing 0 in location 2026
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 2026 is 0
9998 run: jump-if fell through
 105 run: {c: "character"} <- index {s: ("address" "array" "character"), "lookup": ()}, {i: "number"}
9999 mem: location 2019 is 2370
9999 mem: skipping refcount at 2370
9998 run: base address is 2371
9999 mem: location 2025 is 12
9998 run: address to copy is 2384
9998 run: its type is character
9999 mem: location 2384 is 45
9999 mem: storing 45 in location 2027
 105 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 2018 is 1008
9999 mem: location 2027 is 45
9999 mem: location 2020 is 7
9999 mem: location 2022 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 241 -> 242
9999 mem: storing 1008 in location 2031
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 45 in location 2032
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 2033
9999 mem: storing 1 in location 2034
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 1 in location 2036
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 45
  90 print-character: 45 
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 8
9999 mem: storing 8 in location 2039
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 8
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 8
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 12
9999 mem: storing 12 in location 2041
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 12
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 12
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 45
9999 mem: storing 0 in location 2042
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 8
9999 mem: location 2037 is 30
9999 mem: storing 240 in location 2045
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 240
9999 mem: location 2041 is 12
9999 mem: storing 252 in location 2045
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 174 -> 175
9999 mem: storing 1014 in location 2046
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 45
9999 mem: storing 0 in location 2048
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 45
9999 mem: location 2033 is 7
9999 mem: storing 45 in location 2050
9999 mem: storing 7 in location 2051
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 252
9998 run: address to copy to is 1520
9999 mem: location 2050 is 45
9999 mem: location 2051 is 7
9999 mem: storing 45 in location 1520
9999 mem: storing 7 in location 1521
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 12
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 12
9999 mem: storing 13 in location 2041
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 13
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 13 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 2025 is 12
9999 mem: storing 13 in location 2025
 105 run: jump {: "offset"}
9998 run: jumping to instruction 16
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 2025 is 13
9999 mem: location 2024 is 19
9999 mem: storing 0 in location 2026
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 2026 is 0
9998 run: jump-if fell through
 105 run: {c: "character"} <- index {s: ("address" "array" "character"), "lookup": ()}, {i: "number"}
9999 mem: location 2019 is 2370
9999 mem: skipping refcount at 2370
9998 run: base address is 2371
9999 mem: location 2025 is 13
9998 run: address to copy is 2385
9998 run: its type is character
9999 mem: location 2385 is 45
9999 mem: storing 45 in location 2027
 105 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 2018 is 1008
9999 mem: location 2027 is 45
9999 mem: location 2020 is 7
9999 mem: location 2022 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 242 -> 243
9999 mem: storing 1008 in location 2031
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 45 in location 2032
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 2033
9999 mem: storing 1 in location 2034
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 1 in location 2036
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 45
  90 print-character: 45 
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 8
9999 mem: storing 8 in location 2039
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 8
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 8
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 13
9999 mem: storing 13 in location 2041
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 13
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 13
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 45
9999 mem: storing 0 in location 2042
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 8
9999 mem: location 2037 is 30
9999 mem: storing 240 in location 2045
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 240
9999 mem: location 2041 is 13
9999 mem: storing 253 in location 2045
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 175 -> 176
9999 mem: storing 1014 in location 2046
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 45
9999 mem: storing 0 in location 2048
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 45
9999 mem: location 2033 is 7
9999 mem: storing 45 in location 2050
9999 mem: storing 7 in location 2051
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 253
9998 run: address to copy to is 1522
9999 mem: location 2050 is 45
9999 mem: location 2051 is 7
9999 mem: storing 45 in location 1522
9999 mem: storing 7 in location 1523
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 13
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 13
9999 mem: storing 14 in location 2041
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 14
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 14 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 2025 is 13
9999 mem: storing 14 in location 2025
 105 run: jump {: "offset"}
9998 run: jumping to instruction 16
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 2025 is 14
9999 mem: location 2024 is 19
9999 mem: storing 0 in location 2026
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 2026 is 0
9998 run: jump-if fell through
 105 run: {c: "character"} <- index {s: ("address" "array" "character"), "lookup": ()}, {i: "number"}
9999 mem: location 2019 is 2370
9999 mem: skipping refcount at 2370
9998 run: base address is 2371
9999 mem: location 2025 is 14
9998 run: address to copy is 2386
9998 run: its type is character
9999 mem: location 2386 is 45
9999 mem: storing 45 in location 2027
 105 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 2018 is 1008
9999 mem: location 2027 is 45
9999 mem: location 2020 is 7
9999 mem: location 2022 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 243 -> 244
9999 mem: storing 1008 in location 2031
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 45 in location 2032
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 2033
9999 mem: storing 1 in location 2034
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 1 in location 2036
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 45
  90 print-character: 45 
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 8
9999 mem: storing 8 in location 2039
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 8
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 8
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 14
9999 mem: storing 14 in location 2041
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 14
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 14
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 45
9999 mem: storing 0 in location 2042
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 8
9999 mem: location 2037 is 30
9999 mem: storing 240 in location 2045
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 240
9999 mem: location 2041 is 14
9999 mem: storing 254 in location 2045
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 176 -> 177
9999 mem: storing 1014 in location 2046
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 45
9999 mem: storing 0 in location 2048
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 45
9999 mem: location 2033 is 7
9999 mem: storing 45 in location 2050
9999 mem: storing 7 in location 2051
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 254
9998 run: address to copy to is 1524
9999 mem: location 2050 is 45
9999 mem: location 2051 is 7
9999 mem: storing 45 in location 1524
9999 mem: storing 7 in location 1525
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 14
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 14
9999 mem: storing 15 in location 2041
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 15
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 15 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 2025 is 14
9999 mem: storing 15 in location 2025
 105 run: jump {: "offset"}
9998 run: jumping to instruction 16
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 2025 is 15
9999 mem: location 2024 is 19
9999 mem: storing 0 in location 2026
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 2026 is 0
9998 run: jump-if fell through
 105 run: {c: "character"} <- index {s: ("address" "array" "character"), "lookup": ()}, {i: "number"}
9999 mem: location 2019 is 2370
9999 mem: skipping refcount at 2370
9998 run: base address is 2371
9999 mem: location 2025 is 15
9998 run: address to copy is 2387
9998 run: its type is character
9999 mem: location 2387 is 45
9999 mem: storing 45 in location 2027
 105 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 2018 is 1008
9999 mem: location 2027 is 45
9999 mem: location 2020 is 7
9999 mem: location 2022 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 244 -> 245
9999 mem: storing 1008 in location 2031
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 45 in location 2032
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 2033
9999 mem: storing 1 in location 2034
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 1 in location 2036
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 45
  90 print-character: 45 
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 8
9999 mem: storing 8 in location 2039
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 8
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 8
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 15
9999 mem: storing 15 in location 2041
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 15
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 15
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 45
9999 mem: storing 0 in location 2042
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 8
9999 mem: location 2037 is 30
9999 mem: storing 240 in location 2045
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 240
9999 mem: location 2041 is 15
9999 mem: storing 255 in location 2045
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 177 -> 178
9999 mem: storing 1014 in location 2046
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 45
9999 mem: storing 0 in location 2048
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 45
9999 mem: location 2033 is 7
9999 mem: storing 45 in location 2050
9999 mem: storing 7 in location 2051
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 255
9998 run: address to copy to is 1526
9999 mem: location 2050 is 45
9999 mem: location 2051 is 7
9999 mem: storing 45 in location 1526
9999 mem: storing 7 in location 1527
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 15
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 15
9999 mem: storing 16 in location 2041
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 16
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 16 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 2025 is 15
9999 mem: storing 16 in location 2025
 105 run: jump {: "offset"}
9998 run: jumping to instruction 16
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 2025 is 16
9999 mem: location 2024 is 19
9999 mem: storing 0 in location 2026
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 2026 is 0
9998 run: jump-if fell through
 105 run: {c: "character"} <- index {s: ("address" "array" "character"), "lookup": ()}, {i: "number"}
9999 mem: location 2019 is 2370
9999 mem: skipping refcount at 2370
9998 run: base address is 2371
9999 mem: location 2025 is 16
9998 run: address to copy is 2388
9998 run: its type is character
9999 mem: location 2388 is 45
9999 mem: storing 45 in location 2027
 105 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 2018 is 1008
9999 mem: location 2027 is 45
9999 mem: location 2020 is 7
9999 mem: location 2022 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 245 -> 246
9999 mem: storing 1008 in location 2031
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 45 in location 2032
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 2033
9999 mem: storing 1 in location 2034
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 1 in location 2036
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 45
  90 print-character: 45 
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 8
9999 mem: storing 8 in location 2039
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 8
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 8
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 16
9999 mem: storing 16 in location 2041
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 16
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 16
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 45
9999 mem: storing 0 in location 2042
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 8
9999 mem: location 2037 is 30
9999 mem: storing 240 in location 2045
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 240
9999 mem: location 2041 is 16
9999 mem: storing 256 in location 2045
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 178 -> 179
9999 mem: storing 1014 in location 2046
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 45
9999 mem: storing 0 in location 2048
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 45
9999 mem: location 2033 is 7
9999 mem: storing 45 in location 2050
9999 mem: storing 7 in location 2051
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 256
9998 run: address to copy to is 1528
9999 mem: location 2050 is 45
9999 mem: location 2051 is 7
9999 mem: storing 45 in location 1528
9999 mem: storing 7 in location 1529
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 16
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 16
9999 mem: storing 17 in location 2041
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 17
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 17 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 2025 is 16
9999 mem: storing 17 in location 2025
 105 run: jump {: "offset"}
9998 run: jumping to instruction 16
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 2025 is 17
9999 mem: location 2024 is 19
9999 mem: storing 0 in location 2026
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 2026 is 0
9998 run: jump-if fell through
 105 run: {c: "character"} <- index {s: ("address" "array" "character"), "lookup": ()}, {i: "number"}
9999 mem: location 2019 is 2370
9999 mem: skipping refcount at 2370
9998 run: base address is 2371
9999 mem: location 2025 is 17
9998 run: address to copy is 2389
9998 run: its type is character
9999 mem: location 2389 is 45
9999 mem: storing 45 in location 2027
 105 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 2018 is 1008
9999 mem: location 2027 is 45
9999 mem: location 2020 is 7
9999 mem: location 2022 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 246 -> 247
9999 mem: storing 1008 in location 2031
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 45 in location 2032
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 2033
9999 mem: storing 1 in location 2034
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 1 in location 2036
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 45
  90 print-character: 45 
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 8
9999 mem: storing 8 in location 2039
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 8
9999 mem: storing 1 in location 2040
9990 schedule: print/print_2/print-board/run_1001/scenario_making-a-move
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 8
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 17
9999 mem: storing 17 in location 2041
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 17
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 17
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 45
9999 mem: storing 0 in location 2042
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 8
9999 mem: location 2037 is 30
9999 mem: storing 240 in location 2045
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 240
9999 mem: location 2041 is 17
9999 mem: storing 257 in location 2045
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 179 -> 180
9999 mem: storing 1014 in location 2046
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 45
9999 mem: storing 0 in location 2048
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 45
9999 mem: location 2033 is 7
9999 mem: storing 45 in location 2050
9999 mem: storing 7 in location 2051
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 257
9998 run: address to copy to is 1530
9999 mem: location 2050 is 45
9999 mem: location 2051 is 7
9999 mem: storing 45 in location 1530
9999 mem: storing 7 in location 1531
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 17
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 17
9999 mem: storing 18 in location 2041
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 18
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 18 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 2025 is 17
9999 mem: storing 18 in location 2025
 105 run: jump {: "offset"}
9998 run: jumping to instruction 16
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 2025 is 18
9999 mem: location 2024 is 19
9999 mem: storing 0 in location 2026
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 2026 is 0
9998 run: jump-if fell through
 105 run: {c: "character"} <- index {s: ("address" "array" "character"), "lookup": ()}, {i: "number"}
9999 mem: location 2019 is 2370
9999 mem: skipping refcount at 2370
9998 run: base address is 2371
9999 mem: location 2025 is 18
9998 run: address to copy is 2390
9998 run: its type is character
9999 mem: location 2390 is 45
9999 mem: storing 45 in location 2027
 105 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 2018 is 1008
9999 mem: location 2027 is 45
9999 mem: location 2020 is 7
9999 mem: location 2022 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 247 -> 248
9999 mem: storing 1008 in location 2031
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 45 in location 2032
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 2033
9999 mem: storing 1 in location 2034
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 1 in location 2036
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 45
  90 print-character: 45 
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 8
9999 mem: storing 8 in location 2039
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 8
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 8
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 18
9999 mem: storing 18 in location 2041
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 18
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 18
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 45
9999 mem: storing 0 in location 2042
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 8
9999 mem: location 2037 is 30
9999 mem: storing 240 in location 2045
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 240
9999 mem: location 2041 is 18
9999 mem: storing 258 in location 2045
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 180 -> 181
9999 mem: storing 1014 in location 2046
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 45
9999 mem: storing 0 in location 2048
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 45
9999 mem: location 2033 is 7
9999 mem: storing 45 in location 2050
9999 mem: storing 7 in location 2051
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 258
9998 run: address to copy to is 1532
9999 mem: location 2050 is 45
9999 mem: location 2051 is 7
9999 mem: storing 45 in location 1532
9999 mem: storing 7 in location 1533
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 18
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 18
9999 mem: storing 19 in location 2041
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 19
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 19 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 2025 is 18
9999 mem: storing 19 in location 2025
 105 run: jump {: "offset"}
9998 run: jumping to instruction 16
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 2025 is 19
9999 mem: location 2024 is 19
9999 mem: storing 1 in location 2026
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 2026 is 1
9998 run: jumping to instruction 22
 105 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2018 is 1008
9999 abandon: saving in free-list of size 13
9999 trace: reply: decrementing callstack depth from 4
 104 run: cursor-to-next-line {screen: ("address" "screen")}
9999 mem: location 1931 is 1008
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 2
9999 mem: allocating size 4
9999 abandon: picking up space from free-list of size 4
9999 mem: new alloc from free list: 2059
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 248 -> 249
9999 mem: storing 1008 in location 2062
 105 run: {screen: ("address" "screen")} <- cursor-down {screen: ("address" "screen")}
9999 mem: location 2062 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 249 -> 250
9999 mem: storing 1008 in location 1003
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1004
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 8
9999 mem: storing 8 in location 1005
 106 run: {max: "number"} <- subtract {height: "number"}, {1: "literal"}
9999 mem: location 1004 is 12
9999 mem: storing 11 in location 1006
 106 run: {at-bottom?: "boolean"} <- greater-or-equal {row: "number"}, {max: "number"}
9999 mem: location 1005 is 8
9999 mem: location 1006 is 11
9999 mem: storing 0 in location 1007
 106 run: jump-if {at-bottom?: "boolean"}, {: "offset"}
9999 mem: location 1007 is 0
9998 run: jump-if fell through
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1005 is 8
9999 mem: storing 9 in location 1005
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {row: "number"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 8
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 1005 is 9
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 9 in location 1011
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 1008 in location 2062
 105 run: {screen: ("address" "screen")} <- cursor-to-start-of-line {screen: ("address" "screen")}
9999 mem: location 2062 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1961
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 250 -> 251
9999 mem: storing 1008 in location 1964
 106 run: {row: "number"} <- cursor-position {screen: ("address" "screen")}
9999 mem: location 1964 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 2063
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 251 -> 252
9999 mem: storing 1008 in location 2066
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2066 is 1008
9998 run: jump-unless fell through
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2066 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 2066 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 9
9999 mem: storing 9 in location 2067
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2066 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 2066 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 19
9999 mem: storing 19 in location 2068
 107 run: return {row: "number"}, {column: "number"}
9999 mem: location 2067 is 9
9999 mem: location 2068 is 19
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 9
9999 mem: storing 9 in location 1965
 106 run: {column: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1966
 106 run: {screen: ("address" "screen")} <- move-cursor {screen: ("address" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1964 is 1008
9999 mem: location 1965 is 9
9999 mem: location 1966 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 2063
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 252 -> 253
9999 mem: storing 1008 in location 2066
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 2067
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 2068
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2066 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 2066 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 2067 is 9
9999 mem: location 2066 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 9 in location 1011
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 2066 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 2068 is 0
9999 mem: location 2066 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2066 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 1008 in location 1964
 106 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1964 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 1008 in location 2062
 105 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2062 is 1008
9999 abandon: saving in free-list of size 4
9999 trace: reply: decrementing callstack depth from 4
 104 run: {print_28_1: ("address" "array" "character")} <- new {"    a b c d e f g h": "literal-string"}
9999 mem: new string alloc: 2391
9999 mem: incrementing refcount of 2391: 0 -> 1
9999 mem: storing 2391 in location 1942
 104 run: print_2 {screen: ("address" "screen")}, {print_28_1: ("address" "array" "character")}
9999 mem: location 1931 is 1008
9999 mem: location 1942 is 2391
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 11
9999 mem: allocating size 13
9999 abandon: picking up space from free-list of size 13
9999 mem: new alloc from free list: 2015
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 253 -> 254
9999 mem: storing 1008 in location 2018
 105 run: {s: ("address" "array" "character")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 2391: 1 -> 2
9999 mem: storing 2391 in location 2019
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2020
9999 mem: storing 0 in location 2021
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2021 is 0
9998 run: jump-if fell through
 105 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 2020
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2022
9999 mem: storing 0 in location 2023
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2023 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 2022
 105 run: {len: "number"} <- length {s: ("address" "array" "character"), "lookup": ()}
9999 mem: location 2019 is 2391
9999 mem: skipping refcount at 2391
9999 mem: storing 19 in location 2024
 105 run: {i: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 2025
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 2025 is 0
9999 mem: location 2024 is 19
9999 mem: storing 0 in location 2026
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 2026 is 0
9998 run: jump-if fell through
 105 run: {c: "character"} <- index {s: ("address" "array" "character"), "lookup": ()}, {i: "number"}
9999 mem: location 2019 is 2391
9999 mem: skipping refcount at 2391
9998 run: base address is 2392
9999 mem: location 2025 is 0
9998 run: address to copy is 2393
9998 run: its type is character
9999 mem: location 2393 is 32
9999 mem: storing 32 in location 2027
 105 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 2018 is 1008
9999 mem: location 2027 is 32
9999 mem: location 2020 is 7
9999 mem: location 2022 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 254 -> 255
9999 mem: storing 1008 in location 2031
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 2033
9999 mem: storing 1 in location 2034
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 1 in location 2036
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 9
9999 mem: storing 9 in location 2039
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 9
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 9
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 2041
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 0
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 0
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 9
9999 mem: location 2037 is 30
9999 mem: storing 270 in location 2045
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 270
9999 mem: location 2041 is 0
9999 mem: storing 270 in location 2045
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 181 -> 182
9999 mem: storing 1014 in location 2046
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 270
9998 run: address to copy to is 1556
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1556
9999 mem: storing 7 in location 1557
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 0
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 0
9999 mem: storing 1 in location 2041
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 1
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 2025 is 0
9999 mem: storing 1 in location 2025
 105 run: jump {: "offset"}
9998 run: jumping to instruction 16
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 2025 is 1
9999 mem: location 2024 is 19
9999 mem: storing 0 in location 2026
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 2026 is 0
9998 run: jump-if fell through
 105 run: {c: "character"} <- index {s: ("address" "array" "character"), "lookup": ()}, {i: "number"}
9999 mem: location 2019 is 2391
9999 mem: skipping refcount at 2391
9998 run: base address is 2392
9999 mem: location 2025 is 1
9998 run: address to copy is 2394
9998 run: its type is character
9999 mem: location 2394 is 32
9999 mem: storing 32 in location 2027
 105 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 2018 is 1008
9999 mem: location 2027 is 32
9999 mem: location 2020 is 7
9999 mem: location 2022 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 255 -> 256
9999 mem: storing 1008 in location 2031
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 2033
9999 mem: storing 1 in location 2034
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 1 in location 2036
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 9
9999 mem: storing 9 in location 2039
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 9
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 9
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 2041
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 1
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 1
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 9
9999 mem: location 2037 is 30
9999 mem: storing 270 in location 2045
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 270
9999 mem: location 2041 is 1
9999 mem: storing 271 in location 2045
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 182 -> 183
9999 mem: storing 1014 in location 2046
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 271
9998 run: address to copy to is 1558
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1558
9999 mem: storing 7 in location 1559
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 1
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 1
9999 mem: storing 2 in location 2041
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 2
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 2025 is 1
9999 mem: storing 2 in location 2025
 105 run: jump {: "offset"}
9998 run: jumping to instruction 16
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 2025 is 2
9999 mem: location 2024 is 19
9999 mem: storing 0 in location 2026
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 2026 is 0
9998 run: jump-if fell through
 105 run: {c: "character"} <- index {s: ("address" "array" "character"), "lookup": ()}, {i: "number"}
9999 mem: location 2019 is 2391
9999 mem: skipping refcount at 2391
9998 run: base address is 2392
9999 mem: location 2025 is 2
9998 run: address to copy is 2395
9998 run: its type is character
9999 mem: location 2395 is 32
9999 mem: storing 32 in location 2027
 105 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 2018 is 1008
9999 mem: location 2027 is 32
9999 mem: location 2020 is 7
9999 mem: location 2022 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 256 -> 257
9999 mem: storing 1008 in location 2031
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 2033
9999 mem: storing 1 in location 2034
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 1 in location 2036
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 9
9999 mem: storing 9 in location 2039
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 9
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 9
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 2041
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 2
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 2
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 9
9999 mem: location 2037 is 30
9999 mem: storing 270 in location 2045
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 270
9999 mem: location 2041 is 2
9999 mem: storing 272 in location 2045
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 183 -> 184
9999 mem: storing 1014 in location 2046
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 272
9998 run: address to copy to is 1560
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1560
9999 mem: storing 7 in location 1561
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 2
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 2
9999 mem: storing 3 in location 2041
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 3
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 2025 is 2
9999 mem: storing 3 in location 2025
 105 run: jump {: "offset"}
9998 run: jumping to instruction 16
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 2025 is 3
9999 mem: location 2024 is 19
9999 mem: storing 0 in location 2026
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 2026 is 0
9998 run: jump-if fell through
 105 run: {c: "character"} <- index {s: ("address" "array" "character"), "lookup": ()}, {i: "number"}
9999 mem: location 2019 is 2391
9999 mem: skipping refcount at 2391
9998 run: base address is 2392
9999 mem: location 2025 is 3
9998 run: address to copy is 2396
9998 run: its type is character
9999 mem: location 2396 is 32
9999 mem: storing 32 in location 2027
 105 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 2018 is 1008
9999 mem: location 2027 is 32
9999 mem: location 2020 is 7
9999 mem: location 2022 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 257 -> 258
9999 mem: storing 1008 in location 2031
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 2033
9999 mem: storing 1 in location 2034
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 1 in location 2036
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 9
9999 mem: storing 9 in location 2039
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 9
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 9
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 2041
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 3
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 3
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 9
9999 mem: location 2037 is 30
9999 mem: storing 270 in location 2045
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 270
9999 mem: location 2041 is 3
9999 mem: storing 273 in location 2045
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 184 -> 185
9999 mem: storing 1014 in location 2046
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 273
9998 run: address to copy to is 1562
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1562
9999 mem: storing 7 in location 1563
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 3
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 3
9999 mem: storing 4 in location 2041
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 4
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 2025 is 3
9999 mem: storing 4 in location 2025
 105 run: jump {: "offset"}
9998 run: jumping to instruction 16
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 2025 is 4
9999 mem: location 2024 is 19
9999 mem: storing 0 in location 2026
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 2026 is 0
9998 run: jump-if fell through
 105 run: {c: "character"} <- index {s: ("address" "array" "character"), "lookup": ()}, {i: "number"}
9999 mem: location 2019 is 2391
9999 mem: skipping refcount at 2391
9998 run: base address is 2392
9999 mem: location 2025 is 4
9998 run: address to copy is 2397
9998 run: its type is character
9999 mem: location 2397 is 97
9999 mem: storing 97 in location 2027
 105 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 2018 is 1008
9999 mem: location 2027 is 97
9999 mem: location 2020 is 7
9999 mem: location 2022 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 258 -> 259
9999 mem: storing 1008 in location 2031
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 2032
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 2033
9999 mem: storing 1 in location 2034
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 1 in location 2036
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 97
  90 print-character: 97 
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 9
9999 mem: storing 9 in location 2039
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 9
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 9
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 2041
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 4
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 4
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 97
9999 mem: storing 0 in location 2042
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 9
9999 mem: location 2037 is 30
9999 mem: storing 270 in location 2045
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 270
9999 mem: location 2041 is 4
9999 mem: storing 274 in location 2045
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 185 -> 186
9999 mem: storing 1014 in location 2046
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 97
9999 mem: storing 0 in location 2048
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 97
9999 mem: location 2033 is 7
9999 mem: storing 97 in location 2050
9999 mem: storing 7 in location 2051
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 274
9998 run: address to copy to is 1564
9999 mem: location 2050 is 97
9999 mem: location 2051 is 7
9999 mem: storing 97 in location 1564
9999 mem: storing 7 in location 1565
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 4
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 4
9999 mem: storing 5 in location 2041
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 5
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 2025 is 4
9999 mem: storing 5 in location 2025
 105 run: jump {: "offset"}
9998 run: jumping to instruction 16
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 2025 is 5
9999 mem: location 2024 is 19
9999 mem: storing 0 in location 2026
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 2026 is 0
9998 run: jump-if fell through
 105 run: {c: "character"} <- index {s: ("address" "array" "character"), "lookup": ()}, {i: "number"}
9999 mem: location 2019 is 2391
9999 mem: skipping refcount at 2391
9998 run: base address is 2392
9999 mem: location 2025 is 5
9998 run: address to copy is 2398
9998 run: its type is character
9999 mem: location 2398 is 32
9999 mem: storing 32 in location 2027
 105 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 2018 is 1008
9999 mem: location 2027 is 32
9999 mem: location 2020 is 7
9999 mem: location 2022 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 259 -> 260
9999 mem: storing 1008 in location 2031
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 2033
9999 mem: storing 1 in location 2034
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 1 in location 2036
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 9
9999 mem: storing 9 in location 2039
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 9
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
9990 schedule: print/print_2/print-board/run_1001/scenario_making-a-move
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 9
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 2041
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 5
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 5
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 9
9999 mem: location 2037 is 30
9999 mem: storing 270 in location 2045
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 270
9999 mem: location 2041 is 5
9999 mem: storing 275 in location 2045
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 186 -> 187
9999 mem: storing 1014 in location 2046
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 275
9998 run: address to copy to is 1566
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1566
9999 mem: storing 7 in location 1567
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 5
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 5
9999 mem: storing 6 in location 2041
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 6
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 2025 is 5
9999 mem: storing 6 in location 2025
 105 run: jump {: "offset"}
9998 run: jumping to instruction 16
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 2025 is 6
9999 mem: location 2024 is 19
9999 mem: storing 0 in location 2026
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 2026 is 0
9998 run: jump-if fell through
 105 run: {c: "character"} <- index {s: ("address" "array" "character"), "lookup": ()}, {i: "number"}
9999 mem: location 2019 is 2391
9999 mem: skipping refcount at 2391
9998 run: base address is 2392
9999 mem: location 2025 is 6
9998 run: address to copy is 2399
9998 run: its type is character
9999 mem: location 2399 is 98
9999 mem: storing 98 in location 2027
 105 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 2018 is 1008
9999 mem: location 2027 is 98
9999 mem: location 2020 is 7
9999 mem: location 2022 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 260 -> 261
9999 mem: storing 1008 in location 2031
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 2032
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 2033
9999 mem: storing 1 in location 2034
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 1 in location 2036
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 98
  90 print-character: 98 
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 9
9999 mem: storing 9 in location 2039
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 9
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 9
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 6
9999 mem: storing 6 in location 2041
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 6
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 6
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 98
9999 mem: storing 0 in location 2042
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 9
9999 mem: location 2037 is 30
9999 mem: storing 270 in location 2045
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 270
9999 mem: location 2041 is 6
9999 mem: storing 276 in location 2045
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 187 -> 188
9999 mem: storing 1014 in location 2046
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 98
9999 mem: storing 0 in location 2048
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 98
9999 mem: location 2033 is 7
9999 mem: storing 98 in location 2050
9999 mem: storing 7 in location 2051
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 276
9998 run: address to copy to is 1568
9999 mem: location 2050 is 98
9999 mem: location 2051 is 7
9999 mem: storing 98 in location 1568
9999 mem: storing 7 in location 1569
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 6
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 6
9999 mem: storing 7 in location 2041
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 7
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 7 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 2025 is 6
9999 mem: storing 7 in location 2025
 105 run: jump {: "offset"}
9998 run: jumping to instruction 16
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 2025 is 7
9999 mem: location 2024 is 19
9999 mem: storing 0 in location 2026
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 2026 is 0
9998 run: jump-if fell through
 105 run: {c: "character"} <- index {s: ("address" "array" "character"), "lookup": ()}, {i: "number"}
9999 mem: location 2019 is 2391
9999 mem: skipping refcount at 2391
9998 run: base address is 2392
9999 mem: location 2025 is 7
9998 run: address to copy is 2400
9998 run: its type is character
9999 mem: location 2400 is 32
9999 mem: storing 32 in location 2027
 105 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 2018 is 1008
9999 mem: location 2027 is 32
9999 mem: location 2020 is 7
9999 mem: location 2022 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 261 -> 262
9999 mem: storing 1008 in location 2031
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 2033
9999 mem: storing 1 in location 2034
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 1 in location 2036
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 9
9999 mem: storing 9 in location 2039
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 9
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 9
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 7
9999 mem: storing 7 in location 2041
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 7
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 7
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 9
9999 mem: location 2037 is 30
9999 mem: storing 270 in location 2045
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 270
9999 mem: location 2041 is 7
9999 mem: storing 277 in location 2045
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 188 -> 189
9999 mem: storing 1014 in location 2046
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 277
9998 run: address to copy to is 1570
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1570
9999 mem: storing 7 in location 1571
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 7
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 7
9999 mem: storing 8 in location 2041
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 8
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 8 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 2025 is 7
9999 mem: storing 8 in location 2025
 105 run: jump {: "offset"}
9998 run: jumping to instruction 16
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 2025 is 8
9999 mem: location 2024 is 19
9999 mem: storing 0 in location 2026
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 2026 is 0
9998 run: jump-if fell through
 105 run: {c: "character"} <- index {s: ("address" "array" "character"), "lookup": ()}, {i: "number"}
9999 mem: location 2019 is 2391
9999 mem: skipping refcount at 2391
9998 run: base address is 2392
9999 mem: location 2025 is 8
9998 run: address to copy is 2401
9998 run: its type is character
9999 mem: location 2401 is 99
9999 mem: storing 99 in location 2027
 105 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 2018 is 1008
9999 mem: location 2027 is 99
9999 mem: location 2020 is 7
9999 mem: location 2022 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 262 -> 263
9999 mem: storing 1008 in location 2031
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 2032
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 2033
9999 mem: storing 1 in location 2034
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 1 in location 2036
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 99
  90 print-character: 99 
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 9
9999 mem: storing 9 in location 2039
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 9
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 9
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 8
9999 mem: storing 8 in location 2041
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 8
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 8
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 99
9999 mem: storing 0 in location 2042
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 9
9999 mem: location 2037 is 30
9999 mem: storing 270 in location 2045
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 270
9999 mem: location 2041 is 8
9999 mem: storing 278 in location 2045
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 189 -> 190
9999 mem: storing 1014 in location 2046
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 99
9999 mem: storing 0 in location 2048
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 99
9999 mem: location 2033 is 7
9999 mem: storing 99 in location 2050
9999 mem: storing 7 in location 2051
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 278
9998 run: address to copy to is 1572
9999 mem: location 2050 is 99
9999 mem: location 2051 is 7
9999 mem: storing 99 in location 1572
9999 mem: storing 7 in location 1573
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 8
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 8
9999 mem: storing 9 in location 2041
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 9
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 9 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 2025 is 8
9999 mem: storing 9 in location 2025
 105 run: jump {: "offset"}
9998 run: jumping to instruction 16
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 2025 is 9
9999 mem: location 2024 is 19
9999 mem: storing 0 in location 2026
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 2026 is 0
9998 run: jump-if fell through
 105 run: {c: "character"} <- index {s: ("address" "array" "character"), "lookup": ()}, {i: "number"}
9999 mem: location 2019 is 2391
9999 mem: skipping refcount at 2391
9998 run: base address is 2392
9999 mem: location 2025 is 9
9998 run: address to copy is 2402
9998 run: its type is character
9999 mem: location 2402 is 32
9999 mem: storing 32 in location 2027
 105 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 2018 is 1008
9999 mem: location 2027 is 32
9999 mem: location 2020 is 7
9999 mem: location 2022 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 263 -> 264
9999 mem: storing 1008 in location 2031
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 2033
9999 mem: storing 1 in location 2034
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 1 in location 2036
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 9
9999 mem: storing 9 in location 2039
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 9
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 9
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 9
9999 mem: storing 9 in location 2041
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 9
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 9
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 9
9999 mem: location 2037 is 30
9999 mem: storing 270 in location 2045
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 270
9999 mem: location 2041 is 9
9999 mem: storing 279 in location 2045
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 190 -> 191
9999 mem: storing 1014 in location 2046
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 279
9998 run: address to copy to is 1574
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1574
9999 mem: storing 7 in location 1575
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 9
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 9
9999 mem: storing 10 in location 2041
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 10
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 10 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 2025 is 9
9999 mem: storing 10 in location 2025
 105 run: jump {: "offset"}
9998 run: jumping to instruction 16
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 2025 is 10
9999 mem: location 2024 is 19
9999 mem: storing 0 in location 2026
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 2026 is 0
9998 run: jump-if fell through
 105 run: {c: "character"} <- index {s: ("address" "array" "character"), "lookup": ()}, {i: "number"}
9999 mem: location 2019 is 2391
9999 mem: skipping refcount at 2391
9998 run: base address is 2392
9999 mem: location 2025 is 10
9998 run: address to copy is 2403
9998 run: its type is character
9999 mem: location 2403 is 100
9999 mem: storing 100 in location 2027
 105 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 2018 is 1008
9999 mem: location 2027 is 100
9999 mem: location 2020 is 7
9999 mem: location 2022 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 264 -> 265
9999 mem: storing 1008 in location 2031
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 2032
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 2033
9999 mem: storing 1 in location 2034
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 1 in location 2036
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 100
  90 print-character: 100 
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 9
9999 mem: storing 9 in location 2039
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 9
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 9
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 10
9999 mem: storing 10 in location 2041
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 10
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 10
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 100
9999 mem: storing 0 in location 2042
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 9
9999 mem: location 2037 is 30
9999 mem: storing 270 in location 2045
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 270
9999 mem: location 2041 is 10
9999 mem: storing 280 in location 2045
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 191 -> 192
9999 mem: storing 1014 in location 2046
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 100
9999 mem: storing 0 in location 2048
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 100
9999 mem: location 2033 is 7
9999 mem: storing 100 in location 2050
9999 mem: storing 7 in location 2051
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 280
9998 run: address to copy to is 1576
9999 mem: location 2050 is 100
9999 mem: location 2051 is 7
9999 mem: storing 100 in location 1576
9999 mem: storing 7 in location 1577
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 10
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 10
9999 mem: storing 11 in location 2041
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 10
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 11
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 11 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 2025 is 10
9999 mem: storing 11 in location 2025
 105 run: jump {: "offset"}
9998 run: jumping to instruction 16
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 2025 is 11
9999 mem: location 2024 is 19
9999 mem: storing 0 in location 2026
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 2026 is 0
9998 run: jump-if fell through
 105 run: {c: "character"} <- index {s: ("address" "array" "character"), "lookup": ()}, {i: "number"}
9999 mem: location 2019 is 2391
9999 mem: skipping refcount at 2391
9998 run: base address is 2392
9999 mem: location 2025 is 11
9998 run: address to copy is 2404
9998 run: its type is character
9999 mem: location 2404 is 32
9999 mem: storing 32 in location 2027
 105 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 2018 is 1008
9999 mem: location 2027 is 32
9999 mem: location 2020 is 7
9999 mem: location 2022 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 265 -> 266
9999 mem: storing 1008 in location 2031
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 2033
9999 mem: storing 1 in location 2034
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 1 in location 2036
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 9
9999 mem: storing 9 in location 2039
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 9
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 9
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 11
9999 mem: storing 11 in location 2041
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 11
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 11
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 9
9999 mem: location 2037 is 30
9999 mem: storing 270 in location 2045
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 270
9999 mem: location 2041 is 11
9999 mem: storing 281 in location 2045
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 192 -> 193
9999 mem: storing 1014 in location 2046
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 281
9998 run: address to copy to is 1578
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1578
9999 mem: storing 7 in location 1579
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 11
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 11
9999 mem: storing 12 in location 2041
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 11
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 12
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 12 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 2025 is 11
9999 mem: storing 12 in location 2025
 105 run: jump {: "offset"}
9998 run: jumping to instruction 16
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 2025 is 12
9999 mem: location 2024 is 19
9999 mem: storing 0 in location 2026
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 2026 is 0
9998 run: jump-if fell through
 105 run: {c: "character"} <- index {s: ("address" "array" "character"), "lookup": ()}, {i: "number"}
9999 mem: location 2019 is 2391
9999 mem: skipping refcount at 2391
9998 run: base address is 2392
9999 mem: location 2025 is 12
9998 run: address to copy is 2405
9998 run: its type is character
9999 mem: location 2405 is 101
9999 mem: storing 101 in location 2027
 105 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 2018 is 1008
9999 mem: location 2027 is 101
9999 mem: location 2020 is 7
9999 mem: location 2022 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 266 -> 267
9999 mem: storing 1008 in location 2031
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 2032
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 2033
9999 mem: storing 1 in location 2034
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 1 in location 2036
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 101
  90 print-character: 101 
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 9
9999 mem: storing 9 in location 2039
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 9
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 9
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 12
9999 mem: storing 12 in location 2041
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 12
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 12
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 101
9999 mem: storing 0 in location 2042
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 9
9999 mem: location 2037 is 30
9999 mem: storing 270 in location 2045
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 270
9999 mem: location 2041 is 12
9999 mem: storing 282 in location 2045
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 193 -> 194
9999 mem: storing 1014 in location 2046
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 101
9999 mem: storing 0 in location 2048
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 101
9999 mem: location 2033 is 7
9999 mem: storing 101 in location 2050
9999 mem: storing 7 in location 2051
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 282
9998 run: address to copy to is 1580
9999 mem: location 2050 is 101
9999 mem: location 2051 is 7
9999 mem: storing 101 in location 1580
9999 mem: storing 7 in location 1581
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 12
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 12
9999 mem: storing 13 in location 2041
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 12
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 13
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 13 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 2025 is 12
9999 mem: storing 13 in location 2025
 105 run: jump {: "offset"}
9998 run: jumping to instruction 16
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 2025 is 13
9999 mem: location 2024 is 19
9999 mem: storing 0 in location 2026
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 2026 is 0
9998 run: jump-if fell through
 105 run: {c: "character"} <- index {s: ("address" "array" "character"), "lookup": ()}, {i: "number"}
9999 mem: location 2019 is 2391
9999 mem: skipping refcount at 2391
9998 run: base address is 2392
9999 mem: location 2025 is 13
9998 run: address to copy is 2406
9998 run: its type is character
9999 mem: location 2406 is 32
9999 mem: storing 32 in location 2027
 105 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 2018 is 1008
9999 mem: location 2027 is 32
9999 mem: location 2020 is 7
9999 mem: location 2022 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 267 -> 268
9999 mem: storing 1008 in location 2031
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 2033
9999 mem: storing 1 in location 2034
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 1 in location 2036
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 9
9999 mem: storing 9 in location 2039
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 9
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 9
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
9990 schedule: print/print_2/print-board/run_1001/scenario_making-a-move
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 13
9999 mem: storing 13 in location 2041
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 13
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 13
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 9
9999 mem: location 2037 is 30
9999 mem: storing 270 in location 2045
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 270
9999 mem: location 2041 is 13
9999 mem: storing 283 in location 2045
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 194 -> 195
9999 mem: storing 1014 in location 2046
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 283
9998 run: address to copy to is 1582
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1582
9999 mem: storing 7 in location 1583
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 13
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 13
9999 mem: storing 14 in location 2041
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 13
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 14
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 14 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 2025 is 13
9999 mem: storing 14 in location 2025
 105 run: jump {: "offset"}
9998 run: jumping to instruction 16
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 2025 is 14
9999 mem: location 2024 is 19
9999 mem: storing 0 in location 2026
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 2026 is 0
9998 run: jump-if fell through
 105 run: {c: "character"} <- index {s: ("address" "array" "character"), "lookup": ()}, {i: "number"}
9999 mem: location 2019 is 2391
9999 mem: skipping refcount at 2391
9998 run: base address is 2392
9999 mem: location 2025 is 14
9998 run: address to copy is 2407
9998 run: its type is character
9999 mem: location 2407 is 102
9999 mem: storing 102 in location 2027
 105 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 2018 is 1008
9999 mem: location 2027 is 102
9999 mem: location 2020 is 7
9999 mem: location 2022 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 268 -> 269
9999 mem: storing 1008 in location 2031
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 2032
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 2033
9999 mem: storing 1 in location 2034
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 1 in location 2036
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 102
  90 print-character: 102 
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 9
9999 mem: storing 9 in location 2039
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 9
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 9
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 14
9999 mem: storing 14 in location 2041
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 14
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 14
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 102
9999 mem: storing 0 in location 2042
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 9
9999 mem: location 2037 is 30
9999 mem: storing 270 in location 2045
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 270
9999 mem: location 2041 is 14
9999 mem: storing 284 in location 2045
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 195 -> 196
9999 mem: storing 1014 in location 2046
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 102
9999 mem: storing 0 in location 2048
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 102
9999 mem: location 2033 is 7
9999 mem: storing 102 in location 2050
9999 mem: storing 7 in location 2051
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 284
9998 run: address to copy to is 1584
9999 mem: location 2050 is 102
9999 mem: location 2051 is 7
9999 mem: storing 102 in location 1584
9999 mem: storing 7 in location 1585
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 14
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 14
9999 mem: storing 15 in location 2041
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 14
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 15
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 15 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 2025 is 14
9999 mem: storing 15 in location 2025
 105 run: jump {: "offset"}
9998 run: jumping to instruction 16
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 2025 is 15
9999 mem: location 2024 is 19
9999 mem: storing 0 in location 2026
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 2026 is 0
9998 run: jump-if fell through
 105 run: {c: "character"} <- index {s: ("address" "array" "character"), "lookup": ()}, {i: "number"}
9999 mem: location 2019 is 2391
9999 mem: skipping refcount at 2391
9998 run: base address is 2392
9999 mem: location 2025 is 15
9998 run: address to copy is 2408
9998 run: its type is character
9999 mem: location 2408 is 32
9999 mem: storing 32 in location 2027
 105 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 2018 is 1008
9999 mem: location 2027 is 32
9999 mem: location 2020 is 7
9999 mem: location 2022 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 269 -> 270
9999 mem: storing 1008 in location 2031
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 2033
9999 mem: storing 1 in location 2034
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 1 in location 2036
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 9
9999 mem: storing 9 in location 2039
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 9
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 9
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 15
9999 mem: storing 15 in location 2041
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 15
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 15
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 9
9999 mem: location 2037 is 30
9999 mem: storing 270 in location 2045
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 270
9999 mem: location 2041 is 15
9999 mem: storing 285 in location 2045
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 196 -> 197
9999 mem: storing 1014 in location 2046
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 285
9998 run: address to copy to is 1586
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1586
9999 mem: storing 7 in location 1587
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 15
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 15
9999 mem: storing 16 in location 2041
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 15
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 16
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 16 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 2025 is 15
9999 mem: storing 16 in location 2025
 105 run: jump {: "offset"}
9998 run: jumping to instruction 16
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 2025 is 16
9999 mem: location 2024 is 19
9999 mem: storing 0 in location 2026
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 2026 is 0
9998 run: jump-if fell through
 105 run: {c: "character"} <- index {s: ("address" "array" "character"), "lookup": ()}, {i: "number"}
9999 mem: location 2019 is 2391
9999 mem: skipping refcount at 2391
9998 run: base address is 2392
9999 mem: location 2025 is 16
9998 run: address to copy is 2409
9998 run: its type is character
9999 mem: location 2409 is 103
9999 mem: storing 103 in location 2027
 105 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 2018 is 1008
9999 mem: location 2027 is 103
9999 mem: location 2020 is 7
9999 mem: location 2022 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 270 -> 271
9999 mem: storing 1008 in location 2031
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 103 in location 2032
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 2033
9999 mem: storing 1 in location 2034
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 1 in location 2036
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 103
  90 print-character: 103 
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 9
9999 mem: storing 9 in location 2039
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 9
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 9
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 16
9999 mem: storing 16 in location 2041
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 16
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 16
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 103
9999 mem: storing 0 in location 2042
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 9
9999 mem: location 2037 is 30
9999 mem: storing 270 in location 2045
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 270
9999 mem: location 2041 is 16
9999 mem: storing 286 in location 2045
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 197 -> 198
9999 mem: storing 1014 in location 2046
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 103
9999 mem: storing 0 in location 2048
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 103
9999 mem: location 2033 is 7
9999 mem: storing 103 in location 2050
9999 mem: storing 7 in location 2051
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 286
9998 run: address to copy to is 1588
9999 mem: location 2050 is 103
9999 mem: location 2051 is 7
9999 mem: storing 103 in location 1588
9999 mem: storing 7 in location 1589
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 16
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 16
9999 mem: storing 17 in location 2041
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 16
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 17
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 17 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 2025 is 16
9999 mem: storing 17 in location 2025
 105 run: jump {: "offset"}
9998 run: jumping to instruction 16
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 2025 is 17
9999 mem: location 2024 is 19
9999 mem: storing 0 in location 2026
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 2026 is 0
9998 run: jump-if fell through
 105 run: {c: "character"} <- index {s: ("address" "array" "character"), "lookup": ()}, {i: "number"}
9999 mem: location 2019 is 2391
9999 mem: skipping refcount at 2391
9998 run: base address is 2392
9999 mem: location 2025 is 17
9998 run: address to copy is 2410
9998 run: its type is character
9999 mem: location 2410 is 32
9999 mem: storing 32 in location 2027
 105 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 2018 is 1008
9999 mem: location 2027 is 32
9999 mem: location 2020 is 7
9999 mem: location 2022 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 271 -> 272
9999 mem: storing 1008 in location 2031
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 2032
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 2033
9999 mem: storing 1 in location 2034
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 1 in location 2036
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 9
9999 mem: storing 9 in location 2039
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 9
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 9
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 17
9999 mem: storing 17 in location 2041
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 17
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 17
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2042
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 9
9999 mem: location 2037 is 30
9999 mem: storing 270 in location 2045
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 270
9999 mem: location 2041 is 17
9999 mem: storing 287 in location 2045
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 198 -> 199
9999 mem: storing 1014 in location 2046
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 32
9999 mem: storing 0 in location 2048
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 32
9999 mem: location 2033 is 7
9999 mem: storing 32 in location 2050
9999 mem: storing 7 in location 2051
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 287
9998 run: address to copy to is 1590
9999 mem: location 2050 is 32
9999 mem: location 2051 is 7
9999 mem: storing 32 in location 1590
9999 mem: storing 7 in location 1591
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 17
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 17
9999 mem: storing 18 in location 2041
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 17
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 18
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 18 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 2025 is 17
9999 mem: storing 18 in location 2025
 105 run: jump {: "offset"}
9998 run: jumping to instruction 16
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 2025 is 18
9999 mem: location 2024 is 19
9999 mem: storing 0 in location 2026
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 2026 is 0
9998 run: jump-if fell through
 105 run: {c: "character"} <- index {s: ("address" "array" "character"), "lookup": ()}, {i: "number"}
9999 mem: location 2019 is 2391
9999 mem: skipping refcount at 2391
9998 run: base address is 2392
9999 mem: location 2025 is 18
9998 run: address to copy is 2411
9998 run: its type is character
9999 mem: location 2411 is 104
9999 mem: storing 104 in location 2027
 105 run: print {screen: ("address" "screen")}, {c: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 2018 is 1008
9999 mem: location 2027 is 104
9999 mem: location 2020 is 7
9999 mem: location 2022 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 2028
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 272 -> 273
9999 mem: storing 1008 in location 2031
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 104 in location 2032
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 2033
9999 mem: storing 1 in location 2034
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 2034 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 2035
9999 mem: storing 1 in location 2036
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 2036 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 2032 is 104
  90 print-character: 104 
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2031 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 30
9999 mem: storing 30 in location 2037
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 2038
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 9
9999 mem: storing 9 in location 2039
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 2039 is 9
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 23
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 2039 is 9
9999 mem: location 2038 is 12
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 28
 106 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 18
9999 mem: storing 18 in location 2041
 106 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 2041 is 18
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 34
 106 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 2041 is 18
9999 mem: location 2037 is 30
9999 mem: storing 1 in location 2040
 106 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 2040 is 1
9998 run: jumping to instruction 39
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 2032 is 104
9999 mem: storing 0 in location 2042
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 2042 is 0
9998 run: jumping to instruction 53
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 2039 is 9
9999 mem: location 2037 is 30
9999 mem: storing 270 in location 2045
 106 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 2045 is 270
9999 mem: location 2041 is 18
9999 mem: storing 288 in location 2045
 106 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 199 -> 200
9999 mem: storing 1014 in location 2046
 106 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 360 in location 2047
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 2032 is 104
9999 mem: storing 0 in location 2048
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 2048 is 0
9998 run: jumping to instruction 71
 106 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 2032 is 104
9999 mem: location 2033 is 7
9999 mem: storing 104 in location 2050
9999 mem: storing 7 in location 2051
 106 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 2046 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 2045 is 288
9998 run: address to copy to is 1592
9999 mem: location 2050 is 104
9999 mem: location 2051 is 7
9999 mem: storing 104 in location 1592
9999 mem: storing 7 in location 1593
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 2037 is 30
9999 mem: storing 29 in location 2052
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 2041 is 18
9999 mem: location 2052 is 29
9999 mem: storing 0 in location 2053
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 2053 is 0
9998 run: jump-if fell through
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 2041 is 18
9999 mem: storing 19 in location 2041
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 18
9999 mem: location 1013 is 1014
9999 mem: location 2041 is 19
9999 mem: location 2031 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 19 in location 1012
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2031 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 5
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 2025 is 18
9999 mem: storing 19 in location 2025
 105 run: jump {: "offset"}
9998 run: jumping to instruction 16
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 2025 is 19
9999 mem: location 2024 is 19
9999 mem: storing 1 in location 2026
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 2026 is 1
9998 run: jumping to instruction 22
 105 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2018 is 1008
9999 abandon: saving in free-list of size 13
9999 trace: reply: decrementing callstack depth from 4
 104 run: cursor-to-next-line {screen: ("address" "screen")}
9999 mem: location 1931 is 1008
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 2
9999 mem: allocating size 4
9999 abandon: picking up space from free-list of size 4
9999 mem: new alloc from free list: 2059
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 273 -> 274
9999 mem: storing 1008 in location 2062
 105 run: {screen: ("address" "screen")} <- cursor-down {screen: ("address" "screen")}
9999 mem: location 2062 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 274 -> 275
9999 mem: storing 1008 in location 1003
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 12
9999 mem: storing 12 in location 1004
 106 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 9
9999 mem: storing 9 in location 1005
 106 run: {max: "number"} <- subtract {height: "number"}, {1: "literal"}
9999 mem: location 1004 is 12
9999 mem: storing 11 in location 1006
 106 run: {at-bottom?: "boolean"} <- greater-or-equal {row: "number"}, {max: "number"}
9999 mem: location 1005 is 9
9999 mem: location 1006 is 11
9999 mem: storing 0 in location 1007
 106 run: jump-if {at-bottom?: "boolean"}, {: "offset"}
9999 mem: location 1007 is 0
9998 run: jump-if fell through
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1005 is 9
9999 mem: storing 10 in location 1005
 106 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {row: "number"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 9
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 1005 is 10
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 10 in location 1011
 106 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 1008 in location 2062
 105 run: {screen: ("address" "screen")} <- cursor-to-start-of-line {screen: ("address" "screen")}
9999 mem: location 2062 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1961
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 275 -> 276
9999 mem: storing 1008 in location 1964
 106 run: {row: "number"} <- cursor-position {screen: ("address" "screen")}
9999 mem: location 1964 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 2063
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 276 -> 277
9999 mem: storing 1008 in location 2066
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2066 is 1008
9998 run: jump-unless fell through
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2066 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 10
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 2066 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 10
9999 mem: storing 10 in location 2067
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2066 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 10
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 2066 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 19
9999 mem: storing 19 in location 2068
 107 run: return {row: "number"}, {column: "number"}
9999 mem: location 2067 is 10
9999 mem: location 2068 is 19
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 10
9999 mem: storing 10 in location 1965
 106 run: {column: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1966
 106 run: {screen: ("address" "screen")} <- move-cursor {screen: ("address" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1964 is 1008
9999 mem: location 1965 is 10
9999 mem: location 1966 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 2063
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 277 -> 278
9999 mem: storing 1008 in location 2066
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 2067
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 2068
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 2066 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 2066 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 10
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 2067 is 10
9999 mem: location 2066 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 10 in location 1011
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 2066 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 12
9999 mem: location 1010 is 30
9999 mem: location 1011 is 10
9999 mem: location 1012 is 19
9999 mem: location 1013 is 1014
9999 mem: location 2068 is 0
9999 mem: location 2066 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2066 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 1008 in location 1964
 106 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1964 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 1008 in location 2062
 105 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 2062 is 1008
9999 abandon: saving in free-list of size 4
9999 trace: reply: decrementing callstack depth from 4
 104 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1931 is 1008
9999 abandon: saving in free-list of size 15
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1008
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 1008 in location 900
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: screen-should-contain {"\n  #  012345678901234567890123456789\n    .8 | r n b q k b n r           .\n    .7 | p p p p p p p p           .\n    .6 |                           .\n    .5 |                           .\n    .4 |             P             .\n    .3 |                           .\n    .2 | P P P P P P   P           .\n    .1 | R N B Q K B N R           .\n    .  +----------------           .\n    .    a b c d e f g h           .\n    .                              .\n  ": "literal-string"}
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
