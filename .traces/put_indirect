9991 parse: --- defining main
9993 parse: instruction: copy
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {10: "literal", "unsafe": ()}
9993 parse:   product: {1: ("address" "point")}
9992 load: after rewriting: {1: ("address" "point")} <- copy {10: "literal", "unsafe": ()}
9993 parse: instruction: copy
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {34: "literal"}
9993 parse:   product: {11: "number"}
9992 load: after rewriting: {11: "number"} <- copy {34: "literal"}
9993 parse: instruction: copy
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {35: "literal"}
9993 parse:   product: {12: "number"}
9992 load: after rewriting: {12: "number"} <- copy {35: "literal"}
9993 parse: instruction: put
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {1: ("address" "point"), "lookup": ()}
9993 parse:   ingredient: {0: "offset"}
9993 parse:   ingredient: {36: "literal"}
9993 parse:   product: {1: ("address" "point"), "lookup": ()}
9992 load: after rewriting: {1: ("address" "point"), "lookup": ()} <- put {1: ("address" "point"), "lookup": ()}, {0: "offset"}, {36: "literal"}
9999 parse: recipe main has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe main
9991 transform: --- rewrite 'stash' instructions in recipe main
9991 transform: --- fill in reply ingredients from header for recipe main
9991 transform: --- deduce types for recipe main
9991 transform: --- check for invalid types in recipe main
9991 transform: --- collect surrounding spaces for recipe main
9991 transform: --- transform names for recipe main
9991 transform: --- resolve ambiguous calls for recipe main
9992 transform: instruction {1: ("address" "point"), "lookup": ()} <- put {1: ("address" "point"), "lookup": ()}, {0: "offset"}, {36: "literal"}
9992 transform: checking variant (strict) 0: recipe put_2 {table: ("address" "table" "_key" "_value")} {key: "_key"} {value: "_value"} -> {table: ("address" "table" "_key" "_value")}
9993 transform: strict match failed: ingredient 0
9992 transform: checking variant (strict) 0: recipe put_2 {table: ("address" "table" "_key" "_value")} {key: "_key"} {value: "_value"} -> {table: ("address" "table" "_key" "_value")}
9993 transform: strict match failed: ingredient 0
9993 transform: concrete-type match failed: ingredient 0
9992 transform: checking variant (strict except literals-against-booleans) 0: recipe put_2 {table: ("address" "table" "_key" "_value")} {key: "_key"} {value: "_value"} -> {table: ("address" "table" "_key" "_value")}
9993 transform: strict match failed: ingredient 0
9992 transform: checking variant 0: recipe put_2 {table: ("address" "table" "_key" "_value")} {key: "_key"} {value: "_value"} -> {table: ("address" "table" "_key" "_value")}
9993 transform: strict match failed: ingredient 0
9992 transform: --- compute address offsets for main
9993 transform: - compute address offsets for {1: ("address" "point")} <- copy {10: "literal", "unsafe": ()}
9994 transform: compute address offsets for container point
9993 transform: checking container point, element 0
9993 transform: checking container point, element 1
9993 transform: - compute address offsets for {11: "number"} <- copy {34: "literal"}
9993 transform: - compute address offsets for {12: "number"} <- copy {35: "literal"}
9993 transform: - compute address offsets for {1: ("address" "point"), "lookup": ()} <- put {1: ("address" "point"), "lookup": ()}, {0: "offset"}, {36: "literal"}
9994 transform: compute address offsets for container point
9993 transform: checking container point, element 0
9993 transform: checking container point, element 1
9994 transform: compute address offsets for container point
9993 transform: checking container point, element 0
9993 transform: checking container point, element 1
9993 transform: - compute address offsets for reply 
9991 transform: --- compute instruction operations for recipe main
9991 transform: --- transform braces for recipe main
9992 transform: copy ...
9992 transform: copy ...
9992 transform: copy ...
9992 transform: put ...
9992 transform:  ...
9991 transform: --- perform checks for recipe main
9991 transform: --- type-check 'call' instructions inside recipe main
9991 transform: --- type-check calls inside recipe main
9991 transform: --- convert 'new' to 'allocate' for recipe main
9991 transform: --- check types of reply instructions in recipe main
9991 transform: --- type-check merge instructions in recipe main
9991 transform: --- checking reply instructions against header for main
9991 transform: --- parsing any uninitialized reagents as integers
9999 trace: new routine; incrementing callstack depth to 1
9999 new: routine allocated memory from 1000 to 101000
9990 schedule: main
 102 run: {1: ("address" "point")} <- copy {10: "literal", "unsafe": ()}
9999 mem: location 1 is 0
9999 mem: incrementing refcount of 10: 0 -> 1
9999 mem: storing 10 in location 1
 102 run: {11: "number"} <- copy {34: "literal"}
9999 mem: storing 34 in location 11
 102 run: {12: "number"} <- copy {35: "literal"}
9999 mem: storing 35 in location 12
 102 run: {1: ("address" "point"), "lookup": ()} <- put {1: ("address" "point"), "lookup": ()}, {0: "offset"}, {36: "literal"}
9999 mem: location 1 is 10
9999 mem: skipping refcount at 10
9999 mem: location 11 is 34
9999 mem: location 12 is 35
9999 mem: location 1 is 10
9999 mem: skipping refcount at 10
9998 run: address to copy to is 11
9999 mem: storing 36 in location 11
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
