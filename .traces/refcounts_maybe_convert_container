9991 parse: --- defining exclusive-container foo
9999 parse: type number: 1000
9993 parse:   element: {a: "number"}
9993 parse:   element: {b: "bar"}
9991 parse: --- defining container bar
9999 parse: type number: 1001
9993 parse:   element: {x: ("address" "number")}
9991 parse: --- defining main
9993 parse: instruction: new
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {number: "type"}
9993 parse:   product: {1: ("address" "number")}
9992 load: after rewriting: {1: ("address" "number")} <- new {number: "type"}
9993 parse: instruction: merge
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {1: ("address" "number")}
9993 parse:   product: {2: "bar"}
9992 load: after rewriting: {2: "bar"} <- merge {1: ("address" "number")}
9993 parse: instruction: merge
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {1: "literal", "b": ()}
9993 parse:   ingredient: {2: "bar"}
9993 parse:   product: {3: "foo"}
9992 load: after rewriting: {3: "foo"} <- merge {1: "literal", "b": ()}, {2: "bar"}
9993 parse: instruction: maybe-convert
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {3: "foo"}
9993 parse:   ingredient: {1: "variant", "b": ()}
9993 parse:   product: {5: "bar"}
9993 parse:   product: {6: "boolean"}
9992 load: after rewriting: {5: "bar"}, {6: "boolean"} <- maybe-convert {3: "foo"}, {1: "variant", "b": ()}
9999 parse: recipe main has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe main
9991 transform: --- rewrite 'stash' instructions in recipe main
9991 transform: --- fill in reply ingredients from header for recipe main
9991 transform: --- deduce types for recipe main
9991 transform: --- check for invalid types in recipe main
9991 transform: --- collect surrounding spaces for recipe main
9991 transform: --- transform names for recipe main
9991 transform: --- resolve ambiguous calls for recipe main
9992 transform: --- compute address offsets for bar
9993 transform: checking container bar, element 0
9993 transform: container bar contains an address at offset 0
9991 transform: --- compute instruction operations for recipe main
9991 transform: --- transform braces for recipe main
9992 transform: new ...
9992 transform: merge ...
9992 transform: merge ...
9992 transform: maybe-convert ...
9992 transform:  ...
9991 transform: --- perform checks for recipe main
9991 transform: --- type-check 'call' instructions inside recipe main
9991 transform: --- type-check calls inside recipe main
9991 transform: --- convert 'new' to 'allocate' for recipe main
9992 new: size of "number" is 1
9991 transform: --- check types of reply instructions in recipe main
9991 transform: --- type-check merge instructions in recipe main
9999 transform: 0 vs 1
9999 transform: checking container {2: "bar"} || {x: ("address" "number")} vs ingredient 0
9999 transform: 0 vs 2
9999 transform: checking exclusive container {3: "foo"} vs ingredient 0
9999 transform: tag: 1
9999 transform: 1 vs 2
9991 transform: --- checking reply instructions against header for main
9991 transform: --- parsing any uninitialized reagents as integers
9999 trace: new routine; incrementing callstack depth to 1
9999 new: routine allocated memory from 1000 to 101000
9990 schedule: main
 102 run: {1: ("address" "number")} <- new {number: "type"}
9999 mem: allocating size 2
9999 mem: new alloc: 1000
9999 mem: storing 0 in location 1000
9999 mem: storing 0 in location 1001
9999 mem: incrementing refcount of 1000: 0 -> 1
9999 mem: storing 1000 in location 1
 102 run: {2: "bar"} <- merge {1: ("address" "number")}
9999 mem: location 1 is 1000
9999 mem: incrementing refcount of 1000: 1 -> 2
9999 mem: storing 1000 in location 2
 102 run: {3: "foo"} <- merge {1: "literal", "b": ()}, {2: "bar"}
9999 mem: location 2 is 1000
9999 mem: storing 1 in location 3
9999 mem: storing 1000 in location 4
 102 run: {5: "bar"}, {6: "boolean"} <- maybe-convert {3: "foo"}, {1: "variant", "b": ()}
9999 mem: location 3 is 1
9999 mem: location 4 is 1000
9999 mem: storing 1 in location 6
9999 mem: incrementing refcount of 1000: 2 -> 3
9999 mem: storing 1000 in location 5
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
