9999 parse: container has type ingredients; parsing
9991 parse: --- defining container foo
9999 parse: type number: 1000
9993 parse:   element: x: ?2000 -- {"x": "_a"}
9993 parse:   element: y: ?2001 -- {"y": "_b"}
9999 parse: container has type ingredients; parsing
9991 parse: --- defining container bar
9999 parse: type number: 1001
9993 parse:   element: data: <foo : <?2000 : <<address : <shared : <?2001 : <>>>> : <>>>> -- {"data": <"foo" : <"_a" : <<"address" : <"shared" : <"_b" : <>>>> : <>>>>}
9991 parse: --- defining main
9993 parse: instruction: new
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"abc": "literal-string"}
9993 parse:   product: {"1": <"address" : <"shared" : <"array" : <"character" : <>>>>>}
9992 load: after rewriting: 1:address:shared:array:character <- new [abc]
9993 parse: instruction: merge
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"34": "literal", "x": <>}
9993 parse:   ingredient: {"1": <"address" : <"shared" : <"array" : <"character" : <>>>>>, "y": <>}
9993 parse:   product: {"2": <"bar" : <"number" : <"array" : <"character" : <>>>>>}
9992 load: after rewriting: 2:bar:number:array:character <- merge 34/x, 1:address:shared:array:character/y
9999 parse: recipe main has a header
9990 transform: === transform_all()
9991 transform: --- rewrite 'stash' instructions in recipe main
9991 transform: --- fill in reply ingredients from header for recipe main
9991 transform: --- deduce types for recipe main
9991 transform: --- check for invalid types in recipe main
9991 transform: --- collect surrounding spaces for recipe main
9991 transform: --- transform names for recipe main
9991 transform: --- resolve ambiguous calls for recipe main
9991 transform: --- compute instruction operations for recipe main
9991 transform: --- transform braces for recipe main
9992 transform: new ...
9992 transform: merge ...
9992 transform:  ...
9991 transform: --- check mutability of ingredients in recipe main
9991 transform: --- perform checks for recipe main
9991 transform: --- type-check 'call' instructions inside recipe main
9991 transform: --- type-check calls inside recipe main
9991 transform: --- convert 'new' to 'allocate' for recipe main
9991 transform: --- type-check merge instructions in recipe main
9999 transform: 0 vs 2
9999 transform: checking container 2: <bar : <number : <array : <character : <>>>>> -- {"2": <"bar" : <"number" : <"array" : <"character" : <>>>>>} || data: <foo : <number : <array : <character : <<address : <shared : <?2001 : <>>>> : <>>>>>> -- {"data": <"foo" : <"number" : <"array" : <"character" : <<"address" : <"shared" : <"_b" : <>>>> : <>>>>>>} vs ingredient 0
9999 transform: 0 vs 2
9999 transform: checking container data: <foo : <number : <array : <character : <<address : <shared : <?2001 : <>>>> : <>>>>>> -- {"data": <"foo" : <"number" : <"array" : <"character" : <<"address" : <"shared" : <"_b" : <>>>> : <>>>>>>} || x: <number : <array : <character : <<address : <shared : <?2001 : <>>>> : <>>>>> -- {"x": <"number" : <"array" : <"character" : <<"address" : <"shared" : <"_b" : <>>>> : <>>>>>} vs ingredient 0
9999 transform: 0 vs 2
   0 error: main: incorrect type of ingredient 0 in '2:bar:number:array:character <- merge 34/x, 1:address:shared:array:character/y'

9991 transform: --- check types of reply instructions in recipe main
9991 transform: --- checking reply instructions against header for main
9991 transform: --- parsing any uninitialized reagents as integers
