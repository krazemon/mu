9991 parse: --- defining main
9993 parse: instruction: copy
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {10: "literal"}
9993 parse:   product: {1: "number"}
9992 load: after rewriting: {1: "number"} <- copy {10: "literal"}
9993 parse: label: <label1>
9992 load: after rewriting: <label1>
9993 parse: instruction: copy
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {10: "literal"}
9993 parse:   product: {4: "number"}
9992 load: after rewriting: {4: "number"} <- copy {10: "literal"}
9993 parse: instruction: recipe2
9993 parse:   number of ingredients: 0
9992 load: after rewriting: recipe2 
9999 parse: recipe main has a header
9991 parse: --- defining recipe2
9993 parse: instruction: copy
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {11: "literal"}
9993 parse:   product: {1: "number"}
9992 load: after rewriting: {1: "number"} <- copy {11: "literal"}
9993 parse: label: <label1>
9992 load: after rewriting: <label1>
9993 parse: instruction: copy
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {11: "literal"}
9993 parse:   product: {4: "number"}
9992 load: after rewriting: {4: "number"} <- copy {11: "literal"}
9999 parse: recipe recipe2 has a header
9993 parse: instruction: copy
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {12: "literal"}
9993 parse:   product: {2: "number"}
9992 load: after rewriting: {2: "number"} <- copy {12: "literal"}
9993 parse: instruction: copy
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {12: "literal"}
9993 parse:   product: {3: "number"}
9992 load: after rewriting: {3: "number"} <- copy {12: "literal"}
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe main
9991 transform: --- rewrite literal strings in recipe recipe2
9991 transform: --- rewrite 'stash' instructions in recipe main
9991 transform: --- rewrite 'stash' instructions in recipe recipe2
9991 transform: --- fill in reply ingredients from header for recipe main
9991 transform: --- fill in reply ingredients from header for recipe recipe2
9991 transform: --- deduce types for recipe main
9991 transform: --- deduce types for recipe recipe2
9991 transform: --- check for invalid types in recipe main
9991 transform: --- check for invalid types in recipe recipe2
9991 transform: --- collect surrounding spaces for recipe main
9991 transform: --- collect surrounding spaces for recipe recipe2
9991 transform: --- transform names for recipe main
9991 transform: --- transform names for recipe recipe2
9991 transform: --- resolve ambiguous calls for recipe main
9991 transform: --- resolve ambiguous calls for recipe recipe2
9991 transform: --- compute instruction operations for recipe main
9991 transform: --- compute instruction operations for recipe recipe2
9991 transform: --- transform braces for recipe main
9992 transform: copy ...
9992 transform: copy ...
9992 transform: copy ...
9992 transform: copy ...
9992 transform: recipe2 ...
9992 transform:  ...
9991 transform: --- transform braces for recipe recipe2
9992 transform: copy ...
9992 transform: copy ...
9992 transform: copy ...
9992 transform: copy ...
9992 transform:  ...
9991 transform: --- perform checks for recipe main
9991 transform: --- perform checks for recipe recipe2
9991 transform: --- type-check 'call' instructions inside recipe main
9991 transform: --- type-check 'call' instructions inside recipe recipe2
9991 transform: --- type-check calls inside recipe main
9991 transform: --- type-check calls inside recipe recipe2
9991 transform: --- convert 'new' to 'allocate' for recipe main
9991 transform: --- convert 'new' to 'allocate' for recipe recipe2
9991 transform: --- check types of reply instructions in recipe main
9991 transform: --- check types of reply instructions in recipe recipe2
9991 transform: --- type-check merge instructions in recipe main
9991 transform: --- type-check merge instructions in recipe recipe2
9991 transform: --- checking reply instructions against header for main
9991 transform: --- checking reply instructions against header for recipe2
9991 transform: --- parsing any uninitialized reagents as integers
9999 trace: new routine; incrementing callstack depth to 1
9999 new: routine allocated memory from 1000 to 101000
9990 schedule: main
 102 run: {1: "number"} <- copy {10: "literal"}
9999 mem: storing 10 in location 1
 102 run: {2: "number"} <- copy {12: "literal"}
9999 mem: storing 12 in location 2
 102 run: {3: "number"} <- copy {12: "literal"}
9999 mem: storing 12 in location 3
 102 run: {4: "number"} <- copy {10: "literal"}
9999 mem: storing 10 in location 4
 102 run: recipe2 
9999 trace: incrementing callstack depth to 2
 103 run: {1: "number"} <- copy {11: "literal"}
9999 mem: storing 11 in location 1
 103 run: {2: "number"} <- copy {12: "literal"}
9999 mem: storing 12 in location 2
 103 run: {3: "number"} <- copy {12: "literal"}
9999 mem: storing 12 in location 3
 103 run: {4: "number"} <- copy {11: "literal"}
9999 mem: storing 11 in location 4
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
